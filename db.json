{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/GEE本地py环境搭建.md","hash":"fd6868f013f94130c0c0a5c537aa1082d9596d41","modified":1675332701014},{"_id":"source/about/index.md","hash":"eafec0e9ebb79f9f1cca8b3b39d88c54fbe049c2","modified":1675330720308},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1675317878098},{"_id":"themes/fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1670937168000},{"_id":"themes/fluid/.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":1670937168000},{"_id":"themes/fluid/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1670937168000},{"_id":"themes/fluid/.gitignore","hash":"ae3bfcb89777657c5dfb5169d91445dcb0e5ab98","modified":1670937168000},{"_id":"themes/fluid/_config.fluid.yml","hash":"0ed335fee6f0365424ea082c9a741f2235012e0e","modified":1675331741575},{"_id":"themes/fluid/README.md","hash":"6d752df6f2278033dc2512a7d5be22c8a8eb665a","modified":1670937168000},{"_id":"themes/fluid/README_en.md","hash":"8c874f309e346fffa392e174385b5cc08510f218","modified":1670937168000},{"_id":"themes/fluid/.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":1670937168000},{"_id":"themes/fluid/_config.yml","hash":"088788e149051fc0a3c6096ba95e35a8344de04b","modified":1670937168000},{"_id":"themes/fluid/package.json","hash":"30e3f4ccfef8474c05cf0b1eb02e91bd0a152807","modified":1670937168000},{"_id":"themes/fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1670937168000},{"_id":"themes/fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1670937168000},{"_id":"themes/fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1670937168000},{"_id":"themes/fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1670937168000},{"_id":"themes/fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1670937168000},{"_id":"themes/fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1670937168000},{"_id":"themes/fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1670937168000},{"_id":"themes/fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1670937168000},{"_id":"themes/fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1670937168000},{"_id":"themes/fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1670937168000},{"_id":"themes/fluid/languages/zh-CN.yml","hash":"f96a22f989897ecddc69d5867a206e1cf6b8f610","modified":1670937168000},{"_id":"themes/fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1670937168000},{"_id":"themes/fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1670937168000},{"_id":"themes/fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1670937168000},{"_id":"themes/fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1670937168000},{"_id":"themes/fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1670937168000},{"_id":"themes/fluid/layout/index.ejs","hash":"db000a6a0cec19d32a6e7e94cd4c478500d9c5ac","modified":1670937168000},{"_id":"themes/fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1670937168000},{"_id":"themes/fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1670937168000},{"_id":"themes/fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1670937168000},{"_id":"themes/fluid/layout/post.ejs","hash":"505bcc06e55066b7cc5551d9ac0694e7713bfab5","modified":1670937168000},{"_id":"themes/fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1670937168000},{"_id":"themes/fluid/.github/workflows/limit.yaml","hash":"f8bd2edeb4424ee7a055b31583445d5d5dff91a4","modified":1670937168000},{"_id":"themes/fluid/.github/workflows/publish.yaml","hash":"6f02e6440d88629229556e3fd47d0280fe2240db","modified":1670937168000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report.md","hash":"554c0d0e086a0784d83ee71c83f8bceeb60aecc8","modified":1670937168000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"c8b0d49c49e3c88872fd3b37909345ff5b2b6aa0","modified":1670937168000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question.md","hash":"ab5eab9e3ff889c4ba7fd82846e7f5b7ae15bebc","modified":1670937168000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request.md","hash":"c134dd57ffd269b93402ccfffe7dbe0f0b583bec","modified":1670937168000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"ed08574b196447376dd74411cca664ac9227a5d4","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":1670937168000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question_zh.md","hash":"fff07ce0472afc368d388637cb9d438195da9b5b","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1670937168000},{"_id":"themes/fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1670937168000},{"_id":"themes/fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1670937168000},{"_id":"themes/fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1670937168000},{"_id":"themes/fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1670937168000},{"_id":"themes/fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1670937168000},{"_id":"themes/fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1670937168000},{"_id":"themes/fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1670937168000},{"_id":"themes/fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1670937168000},{"_id":"themes/fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1670937168000},{"_id":"themes/fluid/source/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1670937168000},{"_id":"themes/fluid/source/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1670937168000},{"_id":"themes/fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1670937168000},{"_id":"themes/fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1670937168000},{"_id":"themes/fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1670937168000},{"_id":"themes/fluid/source/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1670937168000},{"_id":"themes/fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1670937168000},{"_id":"themes/fluid/source/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1670937168000},{"_id":"themes/fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1670937168000},{"_id":"themes/fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":1670937168000},{"_id":"themes/fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/export-config.js","hash":"47e6dba7652a621a54067413490a11c8a89e3d7b","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1670937168000},{"_id":"themes/fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":1670937168000},{"_id":"themes/fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1670937168000},{"_id":"themes/fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":1670937168000},{"_id":"themes/fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/wordcount.js","hash":"4543b8954c5c2ca91191cc0d53cf071b3f26faaa","modified":1670937168000},{"_id":"themes/fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1670937168000},{"_id":"themes/fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":1670937168000},{"_id":"themes/fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1670937168000},{"_id":"themes/fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1670937168000},{"_id":"themes/fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1670937168000},{"_id":"themes/fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1670937168000},{"_id":"themes/fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1670937168000},{"_id":"themes/fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1670937168000},{"_id":"themes/fluid/scripts/filters/post-filter.js","hash":"d516b9db63067f9ea9c72cc75ae4ff358417e77d","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/twikoo.ejs","hash":"e6820fb7f13662c42f8433ec95404238f4c1860c","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/header/navigation.ejs","hash":"870db75e4e403a840c4463dfeed2c9114846e7cc","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/post/copyright.ejs","hash":"9d13392cea94b66d86422ad17c66e5ae67ce1d32","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/post/meta-bottom.ejs","hash":"7079b27a7bc15a7dfa9209f6be6051bdec49ebad","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/analytics.ejs","hash":"1327395a4dde1ea06c476b047fb110bcd269149f","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/encrypt.ejs","hash":"e3713fa78e0fc14a239360b020068d8513573ae4","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/mermaid.ejs","hash":"e49506e9895e255e0e53f34a11d325f83109c1b0","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/typed.ejs","hash":"51faef29f8e464bcb2e73049b428b88c8dd8b40a","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1670937168000},{"_id":"themes/fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1670937168000},{"_id":"themes/fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1670937168000},{"_id":"themes/fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1670937168000},{"_id":"themes/fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1670937168000},{"_id":"themes/fluid/scripts/events/lib/footnote.js","hash":"2ec2ae03c79bb1ae7ac3fcf7e00fb52d1af2898d","modified":1670937168000},{"_id":"themes/fluid/scripts/events/lib/highlight.js","hash":"0f02df2244e275595e72163498d42f42bcf0de5e","modified":1670937168000},{"_id":"themes/fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1670937168000},{"_id":"themes/fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":1670937168000},{"_id":"themes/fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1670937168000},{"_id":"themes/fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/color-schema.styl","hash":"61279540c2623ea4bf93e40613d41380839b92d3","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_post/post-page.styl","hash":"127bb5391370afe7fef2a297084d76406bc5e902","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1670937168000},{"_id":"themes/fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1670937168000},{"_id":"public/local-search.xml","hash":"46b2a9e10b51c9123a01f7eb266cd53b57c65166","modified":1686214855853},{"_id":"public/about/index.html","hash":"a84aab1b6e289dc31d0ccc161464e34b2e20e4f2","modified":1675334148817},{"_id":"public/archives/index.html","hash":"56e1a5cff0d366060e44b5ec30e97aeef7981eeb","modified":1686214855853},{"_id":"public/archives/2023/index.html","hash":"c8c54af18c2465336414bc7040298d05041667ea","modified":1686214855853},{"_id":"public/archives/2023/02/index.html","hash":"2234f21714c4d9a5da4d876d0fccc4749064b4d1","modified":1686214855853},{"_id":"public/index.html","hash":"c72e35507bf7e3c9979ade8fb1ed1a2acca226f6","modified":1686214855853},{"_id":"public/2023/02/02/GEE本地py环境搭建/index.html","hash":"745c46395927d630b9b6386b39db47d640db8f42","modified":1675340425721},{"_id":"public/2023/02/02/hello-world/index.html","hash":"049b699250e459d680195f508d91a7024d6c43bb","modified":1675333576491},{"_id":"public/categories/环境配置/index.html","hash":"29bd6a3974c7e0abd2bb37798e569d474ee83c6f","modified":1683103302128},{"_id":"public/404.html","hash":"947dbd4589d802a108687b76076e8b9baa1bf627","modified":1675334148817},{"_id":"public/tags/GEE/index.html","hash":"db575f1a87df8b6a9041255ad9ba3287d345bd34","modified":1675334148817},{"_id":"public/tags/GEE-learn/index.html","hash":"160f89441a19acd7c96f728c215006762ba4a984","modified":1675334148817},{"_id":"public/tags/index.html","hash":"d47e5d3738dc32b25ad7c107fc5681faf098f965","modified":1686214855853},{"_id":"public/categories/index.html","hash":"7d41dd846e00c82cc47f08ae216313419873e729","modified":1686214855853},{"_id":"public/links/index.html","hash":"b21ae3b9c22e6f73838fda9f4fcffd1773a52cdf","modified":1675334148817},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1675333576491},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1675333576491},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1675333576491},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1675333576491},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1675333576491},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1675333576491},{"_id":"public/css/highlight-dark.css","hash":"b150e70e6eb5f251e9e6fde3ecba5357846e5a97","modified":1675333576491},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1675333576491},{"_id":"public/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1675333576491},{"_id":"public/css/highlight.css","hash":"e1ad4a9492d77830378d5e76942e6b7146d9b67d","modified":1675333576491},{"_id":"public/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1675333576491},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1675333576491},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1675333576491},{"_id":"public/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1675333576491},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1675333576491},{"_id":"public/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1675333576491},{"_id":"public/css/main.css","hash":"2d611be9491a82c7e1e256127c5c6e4660a47390","modified":1675333576491},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1675333576491},{"_id":"source/_posts/博客搭建.md","hash":"c4c3fd5eca376031b20c407ff184d8d88ce77188","modified":1675420626857},{"_id":"public/2023/02/02/博客搭建/index.html","hash":"3046f0a8bab12510ba21e756bc602a02fd098c9b","modified":1675849805597},{"_id":"public/tags/博客/index.html","hash":"1c6a214ba5c3aeb7f3b37ce145235e8de96d5d79","modified":1675340425721},{"_id":"source/_posts/docker.md","hash":"bf449546e0c7d41546e6ece2f1f471a600f526fd","modified":1675849780388},{"_id":"public/2023/02/08/docker/index.html","hash":"a044324e54a22bdb6adc2d0c966f2921b913ddc9","modified":1679980565630},{"_id":"public/tags/docker/index.html","hash":"6d8a6f70e49a99880a31f771bbc61b029e9b4877","modified":1675849805597},{"_id":"public/tags/portainer/index.html","hash":"fd11359e5bdc5a9696687b8e5dca9e157df639a0","modified":1675849805597},{"_id":"source/_posts/配置服务器pytorch环境.md","hash":"1af87157fadacff9af5bc6d098e159263c92d6f4","modified":1681277876213},{"_id":"public/archives/2023/03/index.html","hash":"26191d456f23efb45291c20963f54e68e3f2d561","modified":1686214855853},{"_id":"public/tags/linux/index.html","hash":"c527c8d21dedd4c3ee0535083864c08ce7f23099","modified":1679980565630},{"_id":"public/tags/pytorch/index.html","hash":"e3cfa1c397cb0c927da0ac9bf2d71a68884ad32a","modified":1679980565630},{"_id":"public/2023/03/28/配置服务器pytorch环境/index.html","hash":"af45e7ab11d523b7245c2d7dffbbb95132f76dda","modified":1683103302128},{"_id":"source/_posts/搭建mac服务器的一些记录.md","hash":"8e1d5629ddc3f67af6fa284102cfafc79e9851a6","modified":1683103253743},{"_id":"public/archives/2023/05/index.html","hash":"8d038b6650b9669fa71526c8e0a7f15708b680a0","modified":1686214855853},{"_id":"public/tags/服务器/index.html","hash":"f26ce1da5c861448e2e842b98f8421547e299aef","modified":1683103302128},{"_id":"public/2023/05/03/搭建mac服务器的一些记录/index.html","hash":"c357fdd376c1d1bb153bc2cc40f1de75f6f57c88","modified":1686214855853},{"_id":"source/_posts/100有趣网址.md","hash":"cf9ccab423c7c582d628cceb7384e79fae6e3e2a","modified":1686214316311},{"_id":"public/2023/06/08/100有趣网址/index.html","hash":"e612f97a0ad64075f2b1626a1de83357cdbe895a","modified":1686214364831},{"_id":"public/archives/2023/06/index.html","hash":"ccb74a9a4a8848785704ee433affe794f23e6f1a","modified":1686214855853},{"_id":"public/categories/工具/index.html","hash":"76e1c8235594b1e377b6fb0ab5a2d7fe792d9710","modified":1686214855853},{"_id":"public/tags/网址/index.html","hash":"49c04b9ab9cce3d9d94413722900774370efdde3","modified":1686214855853},{"_id":"source/_posts/一百个有趣网址.md","hash":"cf9ccab423c7c582d628cceb7384e79fae6e3e2a","modified":1686214316311},{"_id":"public/2023/06/08/一百个有趣网址/index.html","hash":"4322362dee45016dea3a8dc87652cbfdfcf250d6","modified":1686214855853}],"Category":[{"name":"环境配置","_id":"cldmyctlx0003hgth415o9psw"},{"name":"工具","_id":"climwhwjh0001k8thdkdcdlmw"}],"Data":[],"Page":[{"title":"个人简历","date":"2023-02-02T09:17:13.000Z","_content":"这里打算放个人简历\n","source":"about/index.md","raw":"---\ntitle: 个人简历\ndate: 2023-02-02 17:17:13\n---\n这里打算放个人简历\n","updated":"2023-02-02T09:38:40.308Z","path":"about/index.html","comments":1,"layout":"page","_id":"cldmyctlo0000hgthd86ed8vb","content":"<p>这里打算放个人简历</p>\r\n","site":{"data":{}},"excerpt":"","more":"<p>这里打算放个人简历</p>\r\n"}],"Post":[{"title":"搭建本地GEE python环境的步骤","date":"2023-02-02T09:35:49.466Z","_content":"\n使用jupyter notebook搭建，避免安装客户端等操作\n最近要求学习GEE，由与想要部署本地的PY环境，在部署环境的过程中踩了一些坑，但参考大佬的文章最终成功部署了本地环境，以下为只需安装earthengine-api的部署方法\n本文写于2022年12月12日，该方法实测有效\n<!-- more -->\n### 首先需要科学上网！！！\n\n### 注册谷歌账号并申请GEE使用\n关于注册谷歌账号的方法已经有很多了，这里给一个指路\n本文参考: [GEE学习系列——GEE账号注册](https://blog.csdn.net/weixin_43536034/article/details/125326723?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167083736816782390539750%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=167083736816782390539750&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-125326723-null-null.142^v68^control,201^v4^add_ask,213^v2^t3_control1&utm_term=GEE%E8%B4%A6%E5%8F%B7&spm=1018.2226.3001.4187)\n\n### 之后需要本地环境安装earthengine-api\n此处需要安装好python pip jupter，由于都是通用工具，所以本文不再介绍\n\n在终端中输入：\n```\npip install earthengine-api;\n```\n注意，pip安装包时要关闭代理\n\n###  jupter在线编程的实现\n这里参考这篇文章：\n谷歌网盘参考: [GEE入门【1】| Python环境配置](https://blog.csdn.net/weixin_43360896/article/details/108174759?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167030206516800182159539%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=167030206516800182159539&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-108174759-null-null.142^v67^wechat,201^v4^add_ask,213^v2^t3_control1&utm_term=gee%E9%85%8D%E7%BD%AEpython%E7%8E%AF%E5%A2%83&spm=1018.2226.3001.4187)\n\n根据文章中的内容注册好谷歌网盘后再根据\n![在这里插入图片描述](https://img-blog.csdnimg.cn/fc3fdeabd0fd4805bf8c3ba78e1d84e7.png#pic_center)\n中的本地jupter连接方法\n首先在终端中执行\n```\npip install jupyter_http_over_ws\njupyter serverextension enable --py jupyter_http_over_ws\n```\n安装网页扩展包并确认jupter版本符合\n\n之后在本地终端执行jupter\n```\njupyter notebook --NotebookApp.allow_origin='https://colab.research.google.com' --port=8888 --NotebookApp.port_retries=0\n```\n在在线环境中连接本地环境\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f27f460d0eb244af8e67b9cb83643944.png#pic_center)\n\n将jupter网址填入\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/704053a29b58477894b3f89fa47c7761.png#pic_center)\n\n之后执行代码：\n```\nimport ee\nee.Authenticate()\n```\n如果出现这样则点击连接进行授权，可以避免谷歌客户端包等下载\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0cbd2a5b81d14566bb9a3801381d6215.png#pic_center)\n将授权码填入后回车，此时该设备已经授权完成。\n\n### 关于本地接口的设置\n接口的设置参考: [【笔记】GEE之python学习](https://blog.csdn.net/awdwd233333/article/details/123394694?ops_request_misc=&request_id=&biz_id=102&utm_term=gee%20python&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-123394694.142^v67^wechat,201^v4^add_ask,213^v2^t3_control1&spm=1018.2226.3001.4187)\n\n在本地的编译器交互窗口，或者jupter中完成GEE的初始化\n```\n#初始化本地GEE服务\nimport ee\nimport os\nos.environ['HTTP_PROXY'] = 'http://127.0.0.1:1111'\nos.environ['HTTPS_PROXY'] = 'http://127.0.0.1:1111'\nee.Initialize()\n#print(ee.Image('USGS/SRTMGL1_003').getInfo())\n```\n这里'http://127.0.0.1:1111'中后四位为你电脑代理的端口，此处若有问题请自行百度\n\n之后就可以完全本地连接GEE进行编程了","source":"_posts/GEE本地py环境搭建.md","raw":"---\ntitle: 搭建本地GEE python环境的步骤\ndate: 2023年2月2日17:40:30\ntags: \n  - GEE\n  - GEE_learn\ncategories: 环境配置\n---\n\n使用jupyter notebook搭建，避免安装客户端等操作\n最近要求学习GEE，由与想要部署本地的PY环境，在部署环境的过程中踩了一些坑，但参考大佬的文章最终成功部署了本地环境，以下为只需安装earthengine-api的部署方法\n本文写于2022年12月12日，该方法实测有效\n<!-- more -->\n### 首先需要科学上网！！！\n\n### 注册谷歌账号并申请GEE使用\n关于注册谷歌账号的方法已经有很多了，这里给一个指路\n本文参考: [GEE学习系列——GEE账号注册](https://blog.csdn.net/weixin_43536034/article/details/125326723?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167083736816782390539750%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=167083736816782390539750&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-125326723-null-null.142^v68^control,201^v4^add_ask,213^v2^t3_control1&utm_term=GEE%E8%B4%A6%E5%8F%B7&spm=1018.2226.3001.4187)\n\n### 之后需要本地环境安装earthengine-api\n此处需要安装好python pip jupter，由于都是通用工具，所以本文不再介绍\n\n在终端中输入：\n```\npip install earthengine-api;\n```\n注意，pip安装包时要关闭代理\n\n###  jupter在线编程的实现\n这里参考这篇文章：\n谷歌网盘参考: [GEE入门【1】| Python环境配置](https://blog.csdn.net/weixin_43360896/article/details/108174759?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167030206516800182159539%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=167030206516800182159539&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-108174759-null-null.142^v67^wechat,201^v4^add_ask,213^v2^t3_control1&utm_term=gee%E9%85%8D%E7%BD%AEpython%E7%8E%AF%E5%A2%83&spm=1018.2226.3001.4187)\n\n根据文章中的内容注册好谷歌网盘后再根据\n![在这里插入图片描述](https://img-blog.csdnimg.cn/fc3fdeabd0fd4805bf8c3ba78e1d84e7.png#pic_center)\n中的本地jupter连接方法\n首先在终端中执行\n```\npip install jupyter_http_over_ws\njupyter serverextension enable --py jupyter_http_over_ws\n```\n安装网页扩展包并确认jupter版本符合\n\n之后在本地终端执行jupter\n```\njupyter notebook --NotebookApp.allow_origin='https://colab.research.google.com' --port=8888 --NotebookApp.port_retries=0\n```\n在在线环境中连接本地环境\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f27f460d0eb244af8e67b9cb83643944.png#pic_center)\n\n将jupter网址填入\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/704053a29b58477894b3f89fa47c7761.png#pic_center)\n\n之后执行代码：\n```\nimport ee\nee.Authenticate()\n```\n如果出现这样则点击连接进行授权，可以避免谷歌客户端包等下载\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0cbd2a5b81d14566bb9a3801381d6215.png#pic_center)\n将授权码填入后回车，此时该设备已经授权完成。\n\n### 关于本地接口的设置\n接口的设置参考: [【笔记】GEE之python学习](https://blog.csdn.net/awdwd233333/article/details/123394694?ops_request_misc=&request_id=&biz_id=102&utm_term=gee%20python&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-123394694.142^v67^wechat,201^v4^add_ask,213^v2^t3_control1&spm=1018.2226.3001.4187)\n\n在本地的编译器交互窗口，或者jupter中完成GEE的初始化\n```\n#初始化本地GEE服务\nimport ee\nimport os\nos.environ['HTTP_PROXY'] = 'http://127.0.0.1:1111'\nos.environ['HTTPS_PROXY'] = 'http://127.0.0.1:1111'\nee.Initialize()\n#print(ee.Image('USGS/SRTMGL1_003').getInfo())\n```\n这里'http://127.0.0.1:1111'中后四位为你电脑代理的端口，此处若有问题请自行百度\n\n之后就可以完全本地连接GEE进行编程了","slug":"GEE本地py环境搭建","published":1,"updated":"2023-02-02T10:11:41.014Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldmyctlr0001hgthg1w4dvfv","content":"<p>使用jupyter notebook搭建，避免安装客户端等操作\r\n最近要求学习GEE，由与想要部署本地的PY环境，在部署环境的过程中踩了一些坑，但参考大佬的文章最终成功部署了本地环境，以下为只需安装earthengine-api的部署方法\r\n本文写于2022年12月12日，该方法实测有效 <span id=\"more\"></span> ###\r\n首先需要科学上网！！！</p>\r\n<h3 id=\"注册谷歌账号并申请gee使用\">注册谷歌账号并申请GEE使用</h3>\r\n<p>关于注册谷歌账号的方法已经有很多了，这里给一个指路 本文参考: <a\r\nhref=\"https://blog.csdn.net/weixin_43536034/article/details/125326723?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167083736816782390539750%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167083736816782390539750&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-125326723-null-null.142%5Ev68%5Econtrol,201%5Ev4%5Eadd_ask,213%5Ev2%5Et3_control1&amp;utm_term=GEE%E8%B4%A6%E5%8F%B7&amp;spm=1018.2226.3001.4187\">GEE学习系列——GEE账号注册</a></p>\r\n<h3\r\nid=\"之后需要本地环境安装earthengine-api\">之后需要本地环境安装earthengine-api</h3>\r\n<p>此处需要安装好python pip\r\njupter，由于都是通用工具，所以本文不再介绍</p>\r\n<p>在终端中输入： <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">pip install earthengine-api;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure> 注意，pip安装包时要关闭代理</p>\r\n<h3 id=\"jupter在线编程的实现\">jupter在线编程的实现</h3>\r\n<p>这里参考这篇文章： 谷歌网盘参考: <a\r\nhref=\"https://blog.csdn.net/weixin_43360896/article/details/108174759?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167030206516800182159539%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167030206516800182159539&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-108174759-null-null.142%5Ev67%5Ewechat,201%5Ev4%5Eadd_ask,213%5Ev2%5Et3_control1&amp;utm_term=gee%E9%85%8D%E7%BD%AEpython%E7%8E%AF%E5%A2%83&amp;spm=1018.2226.3001.4187\">GEE入门【1】|\r\nPython环境配置</a></p>\r\n<p>根据文章中的内容注册好谷歌网盘后再根据 <img\r\nsrc=\"https://img-blog.csdnimg.cn/fc3fdeabd0fd4805bf8c3ba78e1d84e7.png#pic_center\"\r\nalt=\"在这里插入图片描述\" /> 中的本地jupter连接方法 首先在终端中执行\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">pip install jupyter_http_over_ws\njupyter serverextension enable --py jupyter_http_over_ws<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></div></figure> 安装网页扩展包并确认jupter版本符合</p>\r\n<p>之后在本地终端执行jupter <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">jupyter notebook --NotebookApp.allow_origin&#x3D;&#39;https:&#x2F;&#x2F;colab.research.google.com&#39; --port&#x3D;8888 --NotebookApp.port_retries&#x3D;0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure> 在在线环境中连接本地环境</p>\r\n<figure>\r\n<img\r\nsrc=\"https://img-blog.csdnimg.cn/f27f460d0eb244af8e67b9cb83643944.png#pic_center\"\r\nalt=\"在这里插入图片描述\" />\r\n<figcaption aria-hidden=\"true\">在这里插入图片描述</figcaption>\r\n</figure>\r\n<p>将jupter网址填入</p>\r\n<figure>\r\n<img\r\nsrc=\"https://img-blog.csdnimg.cn/704053a29b58477894b3f89fa47c7761.png#pic_center\"\r\nalt=\"在这里插入图片描述\" />\r\n<figcaption aria-hidden=\"true\">在这里插入图片描述</figcaption>\r\n</figure>\r\n<p>之后执行代码： <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">import ee\nee.Authenticate()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></div></figure>\r\n如果出现这样则点击连接进行授权，可以避免谷歌客户端包等下载 <img\r\nsrc=\"https://img-blog.csdnimg.cn/0cbd2a5b81d14566bb9a3801381d6215.png#pic_center\"\r\nalt=\"在这里插入图片描述\" />\r\n将授权码填入后回车，此时该设备已经授权完成。</p>\r\n<h3 id=\"关于本地接口的设置\">关于本地接口的设置</h3>\r\n<p>接口的设置参考: <a\r\nhref=\"https://blog.csdn.net/awdwd233333/article/details/123394694?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=gee%20python&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-123394694.142%5Ev67%5Ewechat,201%5Ev4%5Eadd_ask,213%5Ev2%5Et3_control1&amp;spm=1018.2226.3001.4187\">【笔记】GEE之python学习</a></p>\r\n<p>在本地的编译器交互窗口，或者jupter中完成GEE的初始化 <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">#初始化本地GEE服务\nimport ee\nimport os\nos.environ[&#39;HTTP_PROXY&#39;] &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1:1111&#39;\nos.environ[&#39;HTTPS_PROXY&#39;] &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1:1111&#39;\nee.Initialize()\n#print(ee.Image(&#39;USGS&#x2F;SRTMGL1_003&#39;).getInfo())<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\r\n这里'http://127.0.0.1:1111'中后四位为你电脑代理的端口，此处若有问题请自行百度</p>\r\n<p>之后就可以完全本地连接GEE进行编程了</p>\r\n","site":{"data":{}},"excerpt":"<p>使用jupyter notebook搭建，避免安装客户端等操作\r\n最近要求学习GEE，由与想要部署本地的PY环境，在部署环境的过程中踩了一些坑，但参考大佬的文章最终成功部署了本地环境，以下为只需安装earthengine-api的部署方法\r\n本文写于2022年12月12日，该方法实测有效","more":"###\r\n首先需要科学上网！！！</p>\r\n<h3 id=\"注册谷歌账号并申请gee使用\">注册谷歌账号并申请GEE使用</h3>\r\n<p>关于注册谷歌账号的方法已经有很多了，这里给一个指路 本文参考: <a\r\nhref=\"https://blog.csdn.net/weixin_43536034/article/details/125326723?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167083736816782390539750%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167083736816782390539750&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-125326723-null-null.142%5Ev68%5Econtrol,201%5Ev4%5Eadd_ask,213%5Ev2%5Et3_control1&amp;utm_term=GEE%E8%B4%A6%E5%8F%B7&amp;spm=1018.2226.3001.4187\">GEE学习系列——GEE账号注册</a></p>\r\n<h3\r\nid=\"之后需要本地环境安装earthengine-api\">之后需要本地环境安装earthengine-api</h3>\r\n<p>此处需要安装好python pip\r\njupter，由于都是通用工具，所以本文不再介绍</p>\r\n<p>在终端中输入： <pre class=\"line-numbers language-none\"><code class=\"language-none\">pip install earthengine-api;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre> 注意，pip安装包时要关闭代理</p>\r\n<h3 id=\"jupter在线编程的实现\">jupter在线编程的实现</h3>\r\n<p>这里参考这篇文章： 谷歌网盘参考: <a\r\nhref=\"https://blog.csdn.net/weixin_43360896/article/details/108174759?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167030206516800182159539%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167030206516800182159539&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-108174759-null-null.142%5Ev67%5Ewechat,201%5Ev4%5Eadd_ask,213%5Ev2%5Et3_control1&amp;utm_term=gee%E9%85%8D%E7%BD%AEpython%E7%8E%AF%E5%A2%83&amp;spm=1018.2226.3001.4187\">GEE入门【1】|\r\nPython环境配置</a></p>\r\n<p>根据文章中的内容注册好谷歌网盘后再根据 <img\r\nsrc=\"https://img-blog.csdnimg.cn/fc3fdeabd0fd4805bf8c3ba78e1d84e7.png#pic_center\"\r\nalt=\"在这里插入图片描述\" /> 中的本地jupter连接方法 首先在终端中执行\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">pip install jupyter_http_over_ws\njupyter serverextension enable --py jupyter_http_over_ws<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre> 安装网页扩展包并确认jupter版本符合</p>\r\n<p>之后在本地终端执行jupter <pre class=\"line-numbers language-none\"><code class=\"language-none\">jupyter notebook --NotebookApp.allow_origin&#x3D;&#39;https:&#x2F;&#x2F;colab.research.google.com&#39; --port&#x3D;8888 --NotebookApp.port_retries&#x3D;0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre> 在在线环境中连接本地环境</p>\r\n<figure>\r\n<img\r\nsrc=\"https://img-blog.csdnimg.cn/f27f460d0eb244af8e67b9cb83643944.png#pic_center\"\r\nalt=\"在这里插入图片描述\" />\r\n<figcaption aria-hidden=\"true\">在这里插入图片描述</figcaption>\r\n</figure>\r\n<p>将jupter网址填入</p>\r\n<figure>\r\n<img\r\nsrc=\"https://img-blog.csdnimg.cn/704053a29b58477894b3f89fa47c7761.png#pic_center\"\r\nalt=\"在这里插入图片描述\" />\r\n<figcaption aria-hidden=\"true\">在这里插入图片描述</figcaption>\r\n</figure>\r\n<p>之后执行代码： <pre class=\"line-numbers language-none\"><code class=\"language-none\">import ee\nee.Authenticate()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\r\n如果出现这样则点击连接进行授权，可以避免谷歌客户端包等下载 <img\r\nsrc=\"https://img-blog.csdnimg.cn/0cbd2a5b81d14566bb9a3801381d6215.png#pic_center\"\r\nalt=\"在这里插入图片描述\" />\r\n将授权码填入后回车，此时该设备已经授权完成。</p>\r\n<h3 id=\"关于本地接口的设置\">关于本地接口的设置</h3>\r\n<p>接口的设置参考: <a\r\nhref=\"https://blog.csdn.net/awdwd233333/article/details/123394694?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=gee%20python&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-123394694.142%5Ev67%5Ewechat,201%5Ev4%5Eadd_ask,213%5Ev2%5Et3_control1&amp;spm=1018.2226.3001.4187\">【笔记】GEE之python学习</a></p>\r\n<p>在本地的编译器交互窗口，或者jupter中完成GEE的初始化 <pre class=\"line-numbers language-none\"><code class=\"language-none\">#初始化本地GEE服务\nimport ee\nimport os\nos.environ[&#39;HTTP_PROXY&#39;] &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1:1111&#39;\nos.environ[&#39;HTTPS_PROXY&#39;] &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1:1111&#39;\nee.Initialize()\n#print(ee.Image(&#39;USGS&#x2F;SRTMGL1_003&#39;).getInfo())<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\r\n这里'http://127.0.0.1:1111'中后四位为你电脑代理的端口，此处若有问题请自行百度</p>\r\n<p>之后就可以完全本地连接GEE进行编程了</p>"},{"title":"搭建博客的过程记录","date":"2023-02-02T10:46:30.918Z","_content":"依托于github完成个人博客的搭建过程，但目前只完成了基础部分\nTodo:\n{% cb 评论功能,false, false %}\n{% cb 版权信息,false, false %}\n{% cb 页面个性化,false, false %}\n{% cb 云服务器部署,false, false %}\n&emsp;[阿里云学生免费领取6个月](https://developer.aliyun.com/plan/student)\n{% cb 公网IP访问,false, false %}\n<!-- more -->\n# 本地建站\n该部分引用于：[使用 Github Pages 和 Hexo 搭建自己的独立博客【超级详细的小白教程】](https://blog.csdn.net/qq_36759224/article/details/82121420?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167531679116782427495873%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=167531679116782427495873&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~hot_rank-6-82121420-null-null.142^v72^pc_search_v2,201^v4^add_ask&utm_term=github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA)\n\n需要安装的软件：\n\n## Node.js&emsp;[官网](https://nodejs.org/en/download/)\n\n## Git&emsp;[官网](https://git-scm.com/download/win)\n\n检验Git是否安装成功\n```text\n $ git --version  \n $ node -v  \n $ npm -v\n```\n\n## Hexo\n\n&emsp;&emsp;选择一个磁盘，新建一个文件夹，自己重命名文件夹（如：我的文件夹为：Ｅ\\TRHX_Blog），博客相关文件将储存在此文件夹下，在该文件夹下右键鼠标，点击 Git Bash Here，输入以下 npm 命令即可安装，第一个命令表示安装 hexo，第二个命令表示安装 hexo 部署到 git page 的 deployer，如图所示即为安装成功\n\n```\n $ npm install hexo-cli -g  \n $ npm install hexo-deployer-git --save \n```\n### Hexo 初始化配置\n&emsp;&emsp;在刚才新建的文件夹里面再次新建一个 Hexo 文件夹（如：我的文件夹为：E\\TRHX_Blog\\Hexo）,进入该 Hexo 文件夹右键鼠标，点击 Git Bash Here，输入以下命令，如图所示则安装成功\n```\n $ hexo init\n```\n\nHexo 安装完成后，将会在指定文件夹中新建所需要的文件，Hexo 文件夹下的目录如下：\n\n![](https://s2.loli.net/2023/02/03/FWHCtJ7aLK42Tb8.png)\n\n### 本地查看效果\n执行以下命令，执行完即可登录 http://localhost:4000/ 查看效果\n```\n $ hexo generate  \n $ hexo server \n```\n\n显示以下信息说明操作成功：\n```\n INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.\n```\n\n# 将博客部署到 Github Pages 上\n\n## 创建项目代码库\n\n## 配置 SSH 密钥\n\n&emsp;只有配置好 SSH 密钥后，我们才可以通过 git 操作实现本地代码库与 Github 代码库同步，在你第一次新建的文件夹里面（如：我的文件夹为：Ｅ\\TRHX_Blog） Git Bash Here 输入以下命令：\n```\n $ ssh-keygen -t rsa -C \"your email@example.com\" \n //引号里面填写你的邮箱地址，比如我的是tanrenhou@126.com\n```\n之后会出现：\n```\n Generating public/private rsa key pair.  \n Enter file in which to save the key (/c/Users/you/.ssh/id_rsa):  \n //到这里可以直接回车将密钥按默认文件进行存储\n```\n然后会出现：\n```\n Enter passphrase (empty for no passphrase):  \n //这里是要你输入密码，其实不需要输什么密码，直接回车就行 \n Enter same passphrase again:  \n```\n接下来屏幕会显示：\n```\n Your identification has been saved in /c/Users/you/.ssh/id_rsa.  \n Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.  \n The key fingerprint is:  \n 这里是各种字母数字组成的字符串，结尾是你的邮箱  \n The key's randomart image is:  \n 这里也是各种字母数字符号组成的字符串  \n```\n运行以下命令，将公钥的内容复制到系统粘贴板上：\n```\n $ clip < ~/.ssh/id_rsa.pub\n```\n\n## 在 GitHub 账户中添加你的公钥\n\n① 登陆 GitHub，进入 Settings：\n\n![](https://s2.loli.net/2023/02/03/IOt9dkMJeZ7USAz.png)\n② 点击 SSH and GPG Keys：\n\n![](https://s2.loli.net/2023/02/03/3oiftY57mMABQ6V.png)\n③ 选择 New SSH key：\n\n![](https://s2.loli.net/2023/02/03/akIu3UeKdWZLNmP.png)\n\n![](https://s2.loli.net/2023/02/03/3XlBmOodFgTCEQu.png)\n\n## 测试\n输入以下命令：注意：==git@github.com不要做任何更改！ #F44336==\n```\n $ ssh -T git@github.com\n```\n \n 之后会显示：\n ![](https://s2.loli.net/2023/02/03/Y7G12dexU5Zsluc.png)\n 输入 yes 后会显示：\n ![](https://s2.loli.net/2023/02/03/YuJc1vgyqw5eAHG.png)\n\n此时表示设置正确\n ## 配置 Git 个人信息\n&emsp;Git 会根据用户的名字和邮箱来记录提交，GitHub 也是用这些信息来做权限的处理，输入以下命令进行个人信息的设置，把名称和邮箱替换成你自己的，名字可以不是 GitHub 的昵称，但为了方便记忆，建议与 GitHub 一致\n```\n $ git config --global user.name \"此处填你的用户名\"  \n $ git config --global user.email  \"此处填你的邮箱\"\n```\n到此为止 SSH Key 配置成功，本机已成功连接到 Github\n## 将本地的 Hexo 文件更新到 Github 的库中\n① 登录 Github 打开自己的项目 your name.github.io\n\n![在这里插入图片描述](https://s2.loli.net/2023/02/03/A5K2S7qZcCT4RPH.png)\n\n② 鼠标移到 Clone or download 按钮，选择 Use SSH\n\n![](https://s2.loli.net/2023/02/03/A6lvTkcFjJ1GN92.png)\n\n③ 一键复制地址\n\n![](https://s2.loli.net/2023/02/03/coeP5YGCiI3KQH6.png)\n\n④ 打开你创建的 Hexo 文件夹（如：E:\\TRHX_Blog\\Hexo），右键用记事本（Notepad++或者VS code等都可以）打开该文件夹下的 _config.yml 文件\n\n![](https://s2.loli.net/2023/02/03/Za9YGpBt348M6FU.png)\n\n⑤ 按下图修改 _config.yml 文件并保存\n注意：master改为main\n![](https://s2.loli.net/2023/02/03/JKRU7Cf8GpWDNOA.png)\n\n⑥ 在 Hexo 文件夹下分别执行以下命令\n```\n$ hexo g -d\n```\n执行完之后会让你输入你的 Github 的账号和密码，如果此时报以下错误，说明你的 deployer 没有安装成功\n```\n ERROR Deployer not found: git\n```\n\n需要执行以下命令再安装一次：\n```\n npm install hexo-deployer-git --save\n```\n再执行 hexo g -d，你的博客就会部署到 Github 上了\n⑦ 访问博客\n等待博客构建完毕\n\n![](https://s2.loli.net/2023/02/03/XuNRrZEwhWdzaH9.png)\n\n你的博客地址：https://你的用户名.github.io ,现在每个人都可以通过此链接访问你的博客了\n\n## 图床托管图片\n### [sm.ms v2](https://smms.app/home/)\n免费提供5G 存储空间\n每分钟限制上传20张\n可以作为图床来少量托管图片\n\n## 个性化Fluid\n在_config.fluid.yml文件中查找对应位置进行修改\n\n修改主界面标语\n\n&emsp;查找关键词：Slogan\n\n修改主页名称\n\n&emsp;查找关键词：blog_title依托于github完成个人博客的搭建过程，但目前只完成了基础部分\n\n","source":"_posts/博客搭建.md","raw":"---\ntitle: 搭建博客的过程记录\ndate: 2023年2月2日19:29:51\ntags: \n  - 博客\ncategories: 环境配置\n---\n依托于github完成个人博客的搭建过程，但目前只完成了基础部分\nTodo:\n{% cb 评论功能,false, false %}\n{% cb 版权信息,false, false %}\n{% cb 页面个性化,false, false %}\n{% cb 云服务器部署,false, false %}\n&emsp;[阿里云学生免费领取6个月](https://developer.aliyun.com/plan/student)\n{% cb 公网IP访问,false, false %}\n<!-- more -->\n# 本地建站\n该部分引用于：[使用 Github Pages 和 Hexo 搭建自己的独立博客【超级详细的小白教程】](https://blog.csdn.net/qq_36759224/article/details/82121420?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167531679116782427495873%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=167531679116782427495873&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~hot_rank-6-82121420-null-null.142^v72^pc_search_v2,201^v4^add_ask&utm_term=github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA)\n\n需要安装的软件：\n\n## Node.js&emsp;[官网](https://nodejs.org/en/download/)\n\n## Git&emsp;[官网](https://git-scm.com/download/win)\n\n检验Git是否安装成功\n```text\n $ git --version  \n $ node -v  \n $ npm -v\n```\n\n## Hexo\n\n&emsp;&emsp;选择一个磁盘，新建一个文件夹，自己重命名文件夹（如：我的文件夹为：Ｅ\\TRHX_Blog），博客相关文件将储存在此文件夹下，在该文件夹下右键鼠标，点击 Git Bash Here，输入以下 npm 命令即可安装，第一个命令表示安装 hexo，第二个命令表示安装 hexo 部署到 git page 的 deployer，如图所示即为安装成功\n\n```\n $ npm install hexo-cli -g  \n $ npm install hexo-deployer-git --save \n```\n### Hexo 初始化配置\n&emsp;&emsp;在刚才新建的文件夹里面再次新建一个 Hexo 文件夹（如：我的文件夹为：E\\TRHX_Blog\\Hexo）,进入该 Hexo 文件夹右键鼠标，点击 Git Bash Here，输入以下命令，如图所示则安装成功\n```\n $ hexo init\n```\n\nHexo 安装完成后，将会在指定文件夹中新建所需要的文件，Hexo 文件夹下的目录如下：\n\n![](https://s2.loli.net/2023/02/03/FWHCtJ7aLK42Tb8.png)\n\n### 本地查看效果\n执行以下命令，执行完即可登录 http://localhost:4000/ 查看效果\n```\n $ hexo generate  \n $ hexo server \n```\n\n显示以下信息说明操作成功：\n```\n INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.\n```\n\n# 将博客部署到 Github Pages 上\n\n## 创建项目代码库\n\n## 配置 SSH 密钥\n\n&emsp;只有配置好 SSH 密钥后，我们才可以通过 git 操作实现本地代码库与 Github 代码库同步，在你第一次新建的文件夹里面（如：我的文件夹为：Ｅ\\TRHX_Blog） Git Bash Here 输入以下命令：\n```\n $ ssh-keygen -t rsa -C \"your email@example.com\" \n //引号里面填写你的邮箱地址，比如我的是tanrenhou@126.com\n```\n之后会出现：\n```\n Generating public/private rsa key pair.  \n Enter file in which to save the key (/c/Users/you/.ssh/id_rsa):  \n //到这里可以直接回车将密钥按默认文件进行存储\n```\n然后会出现：\n```\n Enter passphrase (empty for no passphrase):  \n //这里是要你输入密码，其实不需要输什么密码，直接回车就行 \n Enter same passphrase again:  \n```\n接下来屏幕会显示：\n```\n Your identification has been saved in /c/Users/you/.ssh/id_rsa.  \n Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.  \n The key fingerprint is:  \n 这里是各种字母数字组成的字符串，结尾是你的邮箱  \n The key's randomart image is:  \n 这里也是各种字母数字符号组成的字符串  \n```\n运行以下命令，将公钥的内容复制到系统粘贴板上：\n```\n $ clip < ~/.ssh/id_rsa.pub\n```\n\n## 在 GitHub 账户中添加你的公钥\n\n① 登陆 GitHub，进入 Settings：\n\n![](https://s2.loli.net/2023/02/03/IOt9dkMJeZ7USAz.png)\n② 点击 SSH and GPG Keys：\n\n![](https://s2.loli.net/2023/02/03/3oiftY57mMABQ6V.png)\n③ 选择 New SSH key：\n\n![](https://s2.loli.net/2023/02/03/akIu3UeKdWZLNmP.png)\n\n![](https://s2.loli.net/2023/02/03/3XlBmOodFgTCEQu.png)\n\n## 测试\n输入以下命令：注意：==git@github.com不要做任何更改！ #F44336==\n```\n $ ssh -T git@github.com\n```\n \n 之后会显示：\n ![](https://s2.loli.net/2023/02/03/Y7G12dexU5Zsluc.png)\n 输入 yes 后会显示：\n ![](https://s2.loli.net/2023/02/03/YuJc1vgyqw5eAHG.png)\n\n此时表示设置正确\n ## 配置 Git 个人信息\n&emsp;Git 会根据用户的名字和邮箱来记录提交，GitHub 也是用这些信息来做权限的处理，输入以下命令进行个人信息的设置，把名称和邮箱替换成你自己的，名字可以不是 GitHub 的昵称，但为了方便记忆，建议与 GitHub 一致\n```\n $ git config --global user.name \"此处填你的用户名\"  \n $ git config --global user.email  \"此处填你的邮箱\"\n```\n到此为止 SSH Key 配置成功，本机已成功连接到 Github\n## 将本地的 Hexo 文件更新到 Github 的库中\n① 登录 Github 打开自己的项目 your name.github.io\n\n![在这里插入图片描述](https://s2.loli.net/2023/02/03/A5K2S7qZcCT4RPH.png)\n\n② 鼠标移到 Clone or download 按钮，选择 Use SSH\n\n![](https://s2.loli.net/2023/02/03/A6lvTkcFjJ1GN92.png)\n\n③ 一键复制地址\n\n![](https://s2.loli.net/2023/02/03/coeP5YGCiI3KQH6.png)\n\n④ 打开你创建的 Hexo 文件夹（如：E:\\TRHX_Blog\\Hexo），右键用记事本（Notepad++或者VS code等都可以）打开该文件夹下的 _config.yml 文件\n\n![](https://s2.loli.net/2023/02/03/Za9YGpBt348M6FU.png)\n\n⑤ 按下图修改 _config.yml 文件并保存\n注意：master改为main\n![](https://s2.loli.net/2023/02/03/JKRU7Cf8GpWDNOA.png)\n\n⑥ 在 Hexo 文件夹下分别执行以下命令\n```\n$ hexo g -d\n```\n执行完之后会让你输入你的 Github 的账号和密码，如果此时报以下错误，说明你的 deployer 没有安装成功\n```\n ERROR Deployer not found: git\n```\n\n需要执行以下命令再安装一次：\n```\n npm install hexo-deployer-git --save\n```\n再执行 hexo g -d，你的博客就会部署到 Github 上了\n⑦ 访问博客\n等待博客构建完毕\n\n![](https://s2.loli.net/2023/02/03/XuNRrZEwhWdzaH9.png)\n\n你的博客地址：https://你的用户名.github.io ,现在每个人都可以通过此链接访问你的博客了\n\n## 图床托管图片\n### [sm.ms v2](https://smms.app/home/)\n免费提供5G 存储空间\n每分钟限制上传20张\n可以作为图床来少量托管图片\n\n## 个性化Fluid\n在_config.fluid.yml文件中查找对应位置进行修改\n\n修改主界面标语\n\n&emsp;查找关键词：Slogan\n\n修改主页名称\n\n&emsp;查找关键词：blog_title依托于github完成个人博客的搭建过程，但目前只完成了基础部分\n\n","slug":"博客搭建","published":1,"updated":"2023-02-03T10:37:06.857Z","_id":"cldn2fmhs0000o0thdal9eebr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>依托于github完成个人博客的搭建过程，但目前只完成了基础部分 Todo:\r\n<div>\n            <input type=\"checkbox\" disabled >评论功能\n          </div> <div>\n            <input type=\"checkbox\" disabled >版权信息\n          </div> <div>\n            <input type=\"checkbox\" disabled >页面个性化\n          </div> <div>\n            <input type=\"checkbox\" disabled >云服务器部署\n          </div>  <a\r\nhref=\"https://developer.aliyun.com/plan/student\">阿里云学生免费领取6个月</a>\r\n<div>\n            <input type=\"checkbox\" disabled >公网IP访问\n          </div> <span id=\"more\"></span> # 本地建站 该部分引用于：<a\r\nhref=\"https://blog.csdn.net/qq_36759224/article/details/82121420?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167531679116782427495873%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=167531679116782427495873&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~hot_rank-6-82121420-null-null.142%5Ev72%5Epc_search_v2,201%5Ev4%5Eadd_ask&amp;utm_term=github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA\">使用\r\nGithub Pages 和 Hexo 搭建自己的独立博客【超级详细的小白教程】</a></p>\r\n<p>需要安装的软件：</p>\r\n<h2 id=\"node.js-官网\">Node.js <a\r\nhref=\"https://nodejs.org/en/download/\">官网</a></h2>\r\n<h2 id=\"git-官网\">Git <a\r\nhref=\"https://git-scm.com/download/win\">官网</a></h2>\r\n<p>检验Git是否安装成功 <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">$ git --version  \n$ node -v  \n$ npm -v<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></div></figure></p>\r\n<h2 id=\"hexo\">Hexo</h2>\r\n<p>  选择一个磁盘，新建一个文件夹，自己重命名文件夹（如：我的文件夹为：Ｅ_Blog），博客相关文件将储存在此文件夹下，在该文件夹下右键鼠标，点击\r\nGit Bash Here，输入以下 npm 命令即可安装，第一个命令表示安装\r\nhexo，第二个命令表示安装 hexo 部署到 git page 的\r\ndeployer，如图所示即为安装成功</p>\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">$ npm install hexo-cli -g  \n$ npm install hexo-deployer-git --save <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></div></figure>\r\n<h3 id=\"hexo-初始化配置\">Hexo 初始化配置</h3>\r\n<p>  在刚才新建的文件夹里面再次新建一个 Hexo\r\n文件夹（如：我的文件夹为：E_Blog）,进入该 Hexo 文件夹右键鼠标，点击 Git\r\nBash Here，输入以下命令，如图所示则安装成功 <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">$ hexo init<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure></p>\r\n<p>Hexo 安装完成后，将会在指定文件夹中新建所需要的文件，Hexo\r\n文件夹下的目录如下：</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/FWHCtJ7aLK42Tb8.png\" /></p>\r\n<h3 id=\"本地查看效果\">本地查看效果</h3>\r\n<p>执行以下命令，执行完即可登录 http://localhost:4000/ 查看效果\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">$ hexo generate  \n$ hexo server <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></div></figure></p>\r\n<p>显示以下信息说明操作成功： <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">INFO Hexo is running at http:&#x2F;&#x2F;0.0.0.0:4000&#x2F;. Press Ctrl+C to stop.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure></p>\r\n<h1 id=\"将博客部署到-github-pages-上\">将博客部署到 Github Pages 上</h1>\r\n<h2 id=\"创建项目代码库\">创建项目代码库</h2>\r\n<h2 id=\"配置-ssh-密钥\">配置 SSH 密钥</h2>\r\n<p> 只有配置好 SSH 密钥后，我们才可以通过 git 操作实现本地代码库与\r\nGithub\r\n代码库同步，在你第一次新建的文件夹里面（如：我的文件夹为：Ｅ_Blog） Git\r\nBash Here 输入以下命令： <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">$ ssh-keygen -t rsa -C &quot;your email@example.com&quot; \n&#x2F;&#x2F;引号里面填写你的邮箱地址，比如我的是tanrenhou@126.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></div></figure> 之后会出现： <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">Generating public&#x2F;private rsa key pair.  \nEnter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa):  \n&#x2F;&#x2F;到这里可以直接回车将密钥按默认文件进行存储<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></div></figure>\r\n然后会出现： <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">Enter passphrase (empty for no passphrase):  \n&#x2F;&#x2F;这里是要你输入密码，其实不需要输什么密码，直接回车就行 \nEnter same passphrase again:  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></div></figure> 接下来屏幕会显示： <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.  \nYour public key has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.pub.  \nThe key fingerprint is:  \n这里是各种字母数字组成的字符串，结尾是你的邮箱  \nThe key&#39;s randomart image is:  \n这里也是各种字母数字符号组成的字符串  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\r\n运行以下命令，将公钥的内容复制到系统粘贴板上： <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">$ clip &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure></p>\r\n<h2 id=\"在-github-账户中添加你的公钥\">在 GitHub 账户中添加你的公钥</h2>\r\n<p>① 登陆 GitHub，进入 Settings：</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/IOt9dkMJeZ7USAz.png\" /> ②\r\n点击 SSH and GPG Keys：</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/3oiftY57mMABQ6V.png\" /> ③\r\n选择 New SSH key：</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/akIu3UeKdWZLNmP.png\" /></p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/3XlBmOodFgTCEQu.png\" /></p>\r\n<h2 id=\"测试\">测试</h2>\r\n<p>输入以下命令：注意：==git@github.com不要做任何更改！ #F44336==\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">$ ssh -T git@github.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure></p>\r\n<p>之后会显示： <img\r\nsrc=\"https://s2.loli.net/2023/02/03/Y7G12dexU5Zsluc.png\" /> 输入 yes\r\n后会显示： <img\r\nsrc=\"https://s2.loli.net/2023/02/03/YuJc1vgyqw5eAHG.png\" /></p>\r\n<p>此时表示设置正确 ## 配置 Git 个人信息  Git\r\n会根据用户的名字和邮箱来记录提交，GitHub\r\n也是用这些信息来做权限的处理，输入以下命令进行个人信息的设置，把名称和邮箱替换成你自己的，名字可以不是\r\nGitHub 的昵称，但为了方便记忆，建议与 GitHub 一致 <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">$ git config --global user.name &quot;此处填你的用户名&quot;  \n$ git config --global user.email  &quot;此处填你的邮箱&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></div></figure>\r\n到此为止 SSH Key 配置成功，本机已成功连接到 Github ## 将本地的 Hexo\r\n文件更新到 Github 的库中 ① 登录 Github 打开自己的项目 your\r\nname.github.io</p>\r\n<figure>\r\n<img src=\"https://s2.loli.net/2023/02/03/A5K2S7qZcCT4RPH.png\"\r\nalt=\"在这里插入图片描述\" />\r\n<figcaption aria-hidden=\"true\">在这里插入图片描述</figcaption>\r\n</figure>\r\n<p>② 鼠标移到 Clone or download 按钮，选择 Use SSH</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/A6lvTkcFjJ1GN92.png\" /></p>\r\n<p>③ 一键复制地址</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/coeP5YGCiI3KQH6.png\" /></p>\r\n<p>④ 打开你创建的 Hexo\r\n文件夹（如：E:_Blog），右键用记事本（Notepad++或者VS\r\ncode等都可以）打开该文件夹下的 _config.yml 文件</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/Za9YGpBt348M6FU.png\" /></p>\r\n<p>⑤ 按下图修改 _config.yml 文件并保存 注意：master改为main <img\r\nsrc=\"https://s2.loli.net/2023/02/03/JKRU7Cf8GpWDNOA.png\" /></p>\r\n<p>⑥ 在 Hexo 文件夹下分别执行以下命令 <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">$ hexo g -d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\r\n执行完之后会让你输入你的 Github\r\n的账号和密码，如果此时报以下错误，说明你的 deployer 没有安装成功\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">ERROR Deployer not found: git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure></p>\r\n<p>需要执行以下命令再安装一次： <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install hexo-deployer-git --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure> 再执行 hexo g\r\n-d，你的博客就会部署到 Github 上了 ⑦ 访问博客 等待博客构建完毕</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/XuNRrZEwhWdzaH9.png\" /></p>\r\n<p>你的博客地址：https://你的用户名.github.io\r\n,现在每个人都可以通过此链接访问你的博客了</p>\r\n<h2 id=\"图床托管图片\">图床托管图片</h2>\r\n<h3 id=\"sm.ms-v2\"><a href=\"https://smms.app/home/\">sm.ms v2</a></h3>\r\n<p>免费提供5G 存储空间 每分钟限制上传20张 可以作为图床来少量托管图片</p>\r\n<h2 id=\"个性化fluid\">个性化Fluid</h2>\r\n<p>在_config.fluid.yml文件中查找对应位置进行修改</p>\r\n<p>修改主界面标语</p>\r\n<p> 查找关键词：Slogan</p>\r\n<p>修改主页名称</p>\r\n<p> 查找关键词：blog_title依托于github完成个人博客的搭建过程，但目前只完成了基础部分</p>\r\n","site":{"data":{}},"excerpt":"<p>依托于github完成个人博客的搭建过程，但目前只完成了基础部分 Todo:\r\n<div>\n            <input type=\"checkbox\" disabled >评论功能\n          </div> <div>\n            <input type=\"checkbox\" disabled >版权信息\n          </div> <div>\n            <input type=\"checkbox\" disabled >页面个性化\n          </div> <div>\n            <input type=\"checkbox\" disabled >云服务器部署\n          </div>  <a\r\nhref=\"https://developer.aliyun.com/plan/student\">阿里云学生免费领取6个月</a>\r\n<div>\n            <input type=\"checkbox\" disabled >公网IP访问\n          </div>","more":"# 本地建站 该部分引用于：<a\r\nhref=\"https://blog.csdn.net/qq_36759224/article/details/82121420?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167531679116782427495873%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=167531679116782427495873&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~hot_rank-6-82121420-null-null.142%5Ev72%5Epc_search_v2,201%5Ev4%5Eadd_ask&amp;utm_term=github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA\">使用\r\nGithub Pages 和 Hexo 搭建自己的独立博客【超级详细的小白教程】</a></p>\r\n<p>需要安装的软件：</p>\r\n<h2 id=\"node.js-官网\">Node.js <a\r\nhref=\"https://nodejs.org/en/download/\">官网</a></h2>\r\n<h2 id=\"git-官网\">Git <a\r\nhref=\"https://git-scm.com/download/win\">官网</a></h2>\r\n<p>检验Git是否安装成功 <pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">$ git --version  \n$ node -v  \n$ npm -v<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\r\n<h2 id=\"hexo\">Hexo</h2>\r\n<p>  选择一个磁盘，新建一个文件夹，自己重命名文件夹（如：我的文件夹为：Ｅ_Blog），博客相关文件将储存在此文件夹下，在该文件夹下右键鼠标，点击\r\nGit Bash Here，输入以下 npm 命令即可安装，第一个命令表示安装\r\nhexo，第二个命令表示安装 hexo 部署到 git page 的\r\ndeployer，如图所示即为安装成功</p>\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ npm install hexo-cli -g  \n$ npm install hexo-deployer-git --save <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\r\n<h3 id=\"hexo-初始化配置\">Hexo 初始化配置</h3>\r\n<p>  在刚才新建的文件夹里面再次新建一个 Hexo\r\n文件夹（如：我的文件夹为：E_Blog）,进入该 Hexo 文件夹右键鼠标，点击 Git\r\nBash Here，输入以下命令，如图所示则安装成功 <pre class=\"line-numbers language-none\"><code class=\"language-none\">$ hexo init<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\r\n<p>Hexo 安装完成后，将会在指定文件夹中新建所需要的文件，Hexo\r\n文件夹下的目录如下：</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/FWHCtJ7aLK42Tb8.png\" /></p>\r\n<h3 id=\"本地查看效果\">本地查看效果</h3>\r\n<p>执行以下命令，执行完即可登录 http://localhost:4000/ 查看效果\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ hexo generate  \n$ hexo server <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\r\n<p>显示以下信息说明操作成功： <pre class=\"line-numbers language-none\"><code class=\"language-none\">INFO Hexo is running at http:&#x2F;&#x2F;0.0.0.0:4000&#x2F;. Press Ctrl+C to stop.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\r\n<h1 id=\"将博客部署到-github-pages-上\">将博客部署到 Github Pages 上</h1>\r\n<h2 id=\"创建项目代码库\">创建项目代码库</h2>\r\n<h2 id=\"配置-ssh-密钥\">配置 SSH 密钥</h2>\r\n<p> 只有配置好 SSH 密钥后，我们才可以通过 git 操作实现本地代码库与\r\nGithub\r\n代码库同步，在你第一次新建的文件夹里面（如：我的文件夹为：Ｅ_Blog） Git\r\nBash Here 输入以下命令： <pre class=\"line-numbers language-none\"><code class=\"language-none\">$ ssh-keygen -t rsa -C &quot;your email@example.com&quot; \n&#x2F;&#x2F;引号里面填写你的邮箱地址，比如我的是tanrenhou@126.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre> 之后会出现： <pre class=\"line-numbers language-none\"><code class=\"language-none\">Generating public&#x2F;private rsa key pair.  \nEnter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa):  \n&#x2F;&#x2F;到这里可以直接回车将密钥按默认文件进行存储<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\r\n然后会出现： <pre class=\"line-numbers language-none\"><code class=\"language-none\">Enter passphrase (empty for no passphrase):  \n&#x2F;&#x2F;这里是要你输入密码，其实不需要输什么密码，直接回车就行 \nEnter same passphrase again:  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre> 接下来屏幕会显示： <pre class=\"line-numbers language-none\"><code class=\"language-none\">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.  \nYour public key has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.pub.  \nThe key fingerprint is:  \n这里是各种字母数字组成的字符串，结尾是你的邮箱  \nThe key&#39;s randomart image is:  \n这里也是各种字母数字符号组成的字符串  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\r\n运行以下命令，将公钥的内容复制到系统粘贴板上： <pre class=\"line-numbers language-none\"><code class=\"language-none\">$ clip &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\r\n<h2 id=\"在-github-账户中添加你的公钥\">在 GitHub 账户中添加你的公钥</h2>\r\n<p>① 登陆 GitHub，进入 Settings：</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/IOt9dkMJeZ7USAz.png\" /> ②\r\n点击 SSH and GPG Keys：</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/3oiftY57mMABQ6V.png\" /> ③\r\n选择 New SSH key：</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/akIu3UeKdWZLNmP.png\" /></p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/3XlBmOodFgTCEQu.png\" /></p>\r\n<h2 id=\"测试\">测试</h2>\r\n<p>输入以下命令：注意：==git@github.com不要做任何更改！ #F44336==\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ ssh -T git@github.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\r\n<p>之后会显示： <img\r\nsrc=\"https://s2.loli.net/2023/02/03/Y7G12dexU5Zsluc.png\" /> 输入 yes\r\n后会显示： <img\r\nsrc=\"https://s2.loli.net/2023/02/03/YuJc1vgyqw5eAHG.png\" /></p>\r\n<p>此时表示设置正确 ## 配置 Git 个人信息  Git\r\n会根据用户的名字和邮箱来记录提交，GitHub\r\n也是用这些信息来做权限的处理，输入以下命令进行个人信息的设置，把名称和邮箱替换成你自己的，名字可以不是\r\nGitHub 的昵称，但为了方便记忆，建议与 GitHub 一致 <pre class=\"line-numbers language-none\"><code class=\"language-none\">$ git config --global user.name &quot;此处填你的用户名&quot;  \n$ git config --global user.email  &quot;此处填你的邮箱&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\r\n到此为止 SSH Key 配置成功，本机已成功连接到 Github ## 将本地的 Hexo\r\n文件更新到 Github 的库中 ① 登录 Github 打开自己的项目 your\r\nname.github.io</p>\r\n<figure>\r\n<img src=\"https://s2.loli.net/2023/02/03/A5K2S7qZcCT4RPH.png\"\r\nalt=\"在这里插入图片描述\" />\r\n<figcaption aria-hidden=\"true\">在这里插入图片描述</figcaption>\r\n</figure>\r\n<p>② 鼠标移到 Clone or download 按钮，选择 Use SSH</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/A6lvTkcFjJ1GN92.png\" /></p>\r\n<p>③ 一键复制地址</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/coeP5YGCiI3KQH6.png\" /></p>\r\n<p>④ 打开你创建的 Hexo\r\n文件夹（如：E:_Blog），右键用记事本（Notepad++或者VS\r\ncode等都可以）打开该文件夹下的 _config.yml 文件</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/Za9YGpBt348M6FU.png\" /></p>\r\n<p>⑤ 按下图修改 _config.yml 文件并保存 注意：master改为main <img\r\nsrc=\"https://s2.loli.net/2023/02/03/JKRU7Cf8GpWDNOA.png\" /></p>\r\n<p>⑥ 在 Hexo 文件夹下分别执行以下命令 <pre class=\"line-numbers language-none\"><code class=\"language-none\">$ hexo g -d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\r\n执行完之后会让你输入你的 Github\r\n的账号和密码，如果此时报以下错误，说明你的 deployer 没有安装成功\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ERROR Deployer not found: git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\r\n<p>需要执行以下命令再安装一次： <pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install hexo-deployer-git --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre> 再执行 hexo g\r\n-d，你的博客就会部署到 Github 上了 ⑦ 访问博客 等待博客构建完毕</p>\r\n<p><img src=\"https://s2.loli.net/2023/02/03/XuNRrZEwhWdzaH9.png\" /></p>\r\n<p>你的博客地址：https://你的用户名.github.io\r\n,现在每个人都可以通过此链接访问你的博客了</p>\r\n<h2 id=\"图床托管图片\">图床托管图片</h2>\r\n<h3 id=\"sm.ms-v2\"><a href=\"https://smms.app/home/\">sm.ms v2</a></h3>\r\n<p>免费提供5G 存储空间 每分钟限制上传20张 可以作为图床来少量托管图片</p>\r\n<h2 id=\"个性化fluid\">个性化Fluid</h2>\r\n<p>在_config.fluid.yml文件中查找对应位置进行修改</p>\r\n<p>修改主界面标语</p>\r\n<p> 查找关键词：Slogan</p>\r\n<p>修改主页名称</p>\r\n<p> 查找关键词：blog_title依托于github完成个人博客的搭建过程，但目前只完成了基础部分</p>"},{"title":"linux环境搭建docker和portainer","date":"2023-02-08T09:38:59.107Z","_content":"目前进度是开机启动portainer服务，然后局域网内的计算机可以访问网址操作portainer\n接下来的问题：\n{% cb 必要的时候的远程桌面,false, false %}  ：Windows自带，但需要一个HDMI诱骗器\n{% cb wifi模块：外置天线,false, false %}\n{% cb 修改待机时间,false, false %}\n\n<!-- more -->\n\n搭建过程：\n\n# 1docker\n\n```\nsudo apt-get update\nsudo apt-get install \\\n    ca-certificates \\\n    curl \\\n    gnupg \\\n    lsb-release\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\napt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io\nsudo docker run hello-world\n```\nDocker 安装完成，请检查是否出现 Hello from Docker!'\n\n# 2portainer\n```\nsudo service docker restart\n\nsudo docker volume create portainer_data\nsudo docker run -d -p 8000:8000 -p 9443:9443 --name portainer \\\n--restart=always \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-v portainer_data:/data \\\nportainer/portainer-ce:latest\n\nsudo docker ps\n```\necho 'Portainer 安装完成，请检查是否出现 portainer/portainer-ce:latest 字样'\necho 'Web页面访问 https://127.0.0.1:9443/'\necho '或 https://服务器IP地址:9443/'","source":"_posts/docker.md","raw":"---\ntitle: linux环境搭建docker和portainer\ndate: 2023年2月8日17:40:44\ntags: \n  - docker\n  - portainer\ncategories: 环境配置\n---\n目前进度是开机启动portainer服务，然后局域网内的计算机可以访问网址操作portainer\n接下来的问题：\n{% cb 必要的时候的远程桌面,false, false %}  ：Windows自带，但需要一个HDMI诱骗器\n{% cb wifi模块：外置天线,false, false %}\n{% cb 修改待机时间,false, false %}\n\n<!-- more -->\n\n搭建过程：\n\n# 1docker\n\n```\nsudo apt-get update\nsudo apt-get install \\\n    ca-certificates \\\n    curl \\\n    gnupg \\\n    lsb-release\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\napt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io\nsudo docker run hello-world\n```\nDocker 安装完成，请检查是否出现 Hello from Docker!'\n\n# 2portainer\n```\nsudo service docker restart\n\nsudo docker volume create portainer_data\nsudo docker run -d -p 8000:8000 -p 9443:9443 --name portainer \\\n--restart=always \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-v portainer_data:/data \\\nportainer/portainer-ce:latest\n\nsudo docker ps\n```\necho 'Portainer 安装完成，请检查是否出现 portainer/portainer-ce:latest 字样'\necho 'Web页面访问 https://127.0.0.1:9443/'\necho '或 https://服务器IP地址:9443/'","slug":"docker","published":1,"updated":"2023-02-08T09:49:40.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldvhpeur0000c8th4xc98oby","content":"<p>目前进度是开机启动portainer服务，然后局域网内的计算机可以访问网址操作portainer\r\n接下来的问题： <div>\n            <input type=\"checkbox\" disabled >必要的时候的远程桌面\n          </div> ：Windows自带，但需要一个HDMI诱骗器\r\n<div>\n            <input type=\"checkbox\" disabled >wifi模块：外置天线\n          </div> <div>\n            <input type=\"checkbox\" disabled >修改待机时间\n          </div></p>\r\n<span id=\"more\"></span>\r\n<p>搭建过程：</p>\r\n<h1 id=\"docker\">1docker</h1>\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt-get update\nsudo apt-get install \\\n    ca-certificates \\\n    curl \\\n    gnupg \\\n    lsb-release\n\ncurl -fsSL https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo gpg --dearmor -o &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg\n\napt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io\nsudo docker run hello-world<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\r\n<p>Docker 安装完成，请检查是否出现 Hello from Docker!'</p>\r\n<h1 id=\"portainer\">2portainer</h1>\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo service docker restart\n\nsudo docker volume create portainer_data\nsudo docker run -d -p 8000:8000 -p 9443:9443 --name portainer \\\n--restart&#x3D;always \\\n-v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \\\n-v portainer_data:&#x2F;data \\\nportainer&#x2F;portainer-ce:latest\n\nsudo docker ps<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\r\n<p>echo 'Portainer 安装完成，请检查是否出现\r\nportainer/portainer-ce:latest 字样' echo 'Web页面访问\r\nhttps://127.0.0.1:9443/' echo '或 https://服务器IP地址:9443/'</p>\r\n","site":{"data":{}},"excerpt":"<p>目前进度是开机启动portainer服务，然后局域网内的计算机可以访问网址操作portainer\r\n接下来的问题： <div>\n            <input type=\"checkbox\" disabled >必要的时候的远程桌面\n          </div> ：Windows自带，但需要一个HDMI诱骗器\r\n<div>\n            <input type=\"checkbox\" disabled >wifi模块：外置天线\n          </div> <div>\n            <input type=\"checkbox\" disabled >修改待机时间\n          </div></p>","more":"<p>搭建过程：</p>\r\n<h1 id=\"docker\">1docker</h1>\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt-get update\nsudo apt-get install \\\n    ca-certificates \\\n    curl \\\n    gnupg \\\n    lsb-release\n\ncurl -fsSL https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo gpg --dearmor -o &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg\n\napt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io\nsudo docker run hello-world<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\r\n<p>Docker 安装完成，请检查是否出现 Hello from Docker!'</p>\r\n<h1 id=\"portainer\">2portainer</h1>\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo service docker restart\n\nsudo docker volume create portainer_data\nsudo docker run -d -p 8000:8000 -p 9443:9443 --name portainer \\\n--restart&#x3D;always \\\n-v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \\\n-v portainer_data:&#x2F;data \\\nportainer&#x2F;portainer-ce:latest\n\nsudo docker ps<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\r\n<p>echo 'Portainer 安装完成，请检查是否出现\r\nportainer/portainer-ce:latest 字样' echo 'Web页面访问\r\nhttps://127.0.0.1:9443/' echo '或 https://服务器IP地址:9443/'</p>"},{"title":"linux环境搭建pytorch环境","date":"2023-03-28T02:42:46.893Z","_content":"用来配置服务器python环境的记录\n{% cb 搭建doctor,false, false %} \n<!-- more -->\n\n\n# 1安装mini-conda\n[官网](https://docs.conda.io/en/latest/miniconda.html#linux-installers)\n从官网下载对应版本，对应系统的安装包\n\n将安装包传入linux系统\ncd到目标文件目录：\n```\nbash Miniconda3-4.7.12.1-Linux-x86_64.sh\n```\n\n安装后重新加载配置文件\n```\nsource .bashrc\n```\n\n# 2基础命令\n```\nconda --version 查看安装的conda的版本，检验是否安装成功\nconda list：查看安装了哪些包。\nconda search XXXX:查找包的版本\nconda install package_name(包名)：安装包\nconda env list 或 conda info -e：查看当前存在哪些虚拟环境\nconda update conda：检查更新当前conda\nconda create -n 创建conda环境\n激活环境 conda activate XXX\n退出环境conda deactivate\n移除环境： conda/mamba remove -n XXX --all\n导出环境： conda env export xxx.yaml 将现有的包导出，方便以后直接创建环境\n复现环境： conda env create -f environment.yaml\nlsblk查看硬盘信息\ntop 查看cpu使用情况\nlspci | grep -i nvidia  查看gpu情况\n```\n\n添加镜像\n```\nconda config --add channels genomedk\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/\nconda config --set show_channel_urls yes\n\n#查看已配置的镜像\nconda config --show\n\n#删除某个镜像源\nconda config --remove channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\n```\n\n\n\n# 3配置pytorch环境\n查看CUDA版本\n```\nnvidia-smi\n```\n[pytorch官网](https://pytorch.org/get-started/locally)\n选择对应的版本\n\n判断是否安装成功\n在命令行输入```python```\n\n输入```import torch```，没有报错说明安装成功\n\n输入```torch.cuda.is_available()```，返回true表示可以使用GPU\n\n# 4安装jupyter\n[源于](https://zhuanlan.zhihu.com/p/166425946)\njupyter notebook安装\n```conda install jupyter notebook```\n\njupyter lab安装\n```conda install -c conda-forge jupyterlab```\n\n使用pip安装中文界面\n```pip install jupyterlab-language-pack-zh-CN ``` \n\n\n生成jupyter密码密文\n密文生成有手动生成和自动生成两种方式。自动生成会保存在json文件中。手动生成在ipython中运行直接输出。 密码用于本地访问服务器jupyter时需要输入的密码。\n\n自动生成\n```\n$ jupyter notebook password\nEnter password:  \nVerify password: \n[NotebookPasswordApp] Wrote hashed password to /home/you/.jupyter/jupyter_notebook_config.json\n```\n\n手动生成\n```\n## 打开ipython，输入\nfrom IPython.lib import passwd\npasswd()\n## 提示输入密码和确认输入，完成后得到密文。\nEnter password: \nVerify password: \n'sha1:********************************************' \n## 或者\nfrom notebook.auth import passwd; passwd()\n```\n配置\n\n生成密文后，有两种设置方式，访问jupyter。一种是修改配置文件，另一种为通过ssh启动。\n\n方式一：修改配置文件\n查看配置文件是否存在：```~/.jupyter/jupyter_notebook_config.py```\n生成配置文件：\n```\njupyter notebook --generate-config\n或\njupyter lab --generate-config\n```\n\n修改配置文件 需要修改主要是四个地方，分别是IP地址，密文，浏览器，端口。\n```\n## 打开前面生成的配置文件\nvim ~/.jupyter/jupyter_notebook_config.py\n## 修改配置内容\n## 官方文档建议修改成‘*’，但可能还是无法访问，可以修改成‘0.0.0.1’或者服务器IP 目前不需改\nc.NotebookApp.ip='*'\n## 修改成将之前生成的密文 改shal:后面的内容\nc.NotebookApp.password = u'sha1:........'\nc.NotebookApp.open_browser = False\n## 随便都可以，防止与其他端口冲突即可。也可以再启动jupyter时，用--port参数指定。\nc.NotebookApp.port =8889\n```\n\n[jupyter lab插件](https://zhuanlan.zhihu.com/p/101070029)\n\n服务器常用命令\n```nohup jupyter notebook &```后台启动jupyter lab\n\n\n```pkill -f jupyter```杀死后台所有jupyter进程\n\n```htop```查看cpu占用情况\n\n多内核jupyter\n\n```conda install nb_conda -c https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/```\n\n# 内网穿透\n跳板机\nB to C ```ssh -N -f -L 3333:localhost:8889 syf@172.19.4.27```\n\n\n 开机自启 （有问题）\n 您可以创建一个名为 my_script.sh 的文件，然后在其中添加以下内容：\n \n \n```\n#!/bin/bash\nssh -N -f -L 3333:localhost:8889 syf@172.19.4.27\n```\n然后，您可以使用以下命令将脚本移动到 /etc/profile.d/ 目录下：\n\n\n\n```sudo mv my_script.sh /etc/profile.d/```\n\n最后，您需要给脚本添加可执行权限：\n\n\n\n```sudo chmod +x /etc/profile.d/my_script.sh```\n\n这样，在系统启动后，脚本就会自动执行。\n\n \n \n打洞\n[cpolar](https://www.cpolar.com/)\n使用\n\n5. 向系统添加服务\n```sudo systemctl enable cpolar```\nShellCopy\n6. 启动cpolar服务\n```sudo systemctl start cpolar```\n\n","source":"_posts/配置服务器pytorch环境.md","raw":"---\ntitle: linux环境搭建pytorch环境\ndate: 2023年3月28日10:44:17\ntags: \n  - linux\n  - pytorch\ncategories: 环境配置\n---\n用来配置服务器python环境的记录\n{% cb 搭建doctor,false, false %} \n<!-- more -->\n\n\n# 1安装mini-conda\n[官网](https://docs.conda.io/en/latest/miniconda.html#linux-installers)\n从官网下载对应版本，对应系统的安装包\n\n将安装包传入linux系统\ncd到目标文件目录：\n```\nbash Miniconda3-4.7.12.1-Linux-x86_64.sh\n```\n\n安装后重新加载配置文件\n```\nsource .bashrc\n```\n\n# 2基础命令\n```\nconda --version 查看安装的conda的版本，检验是否安装成功\nconda list：查看安装了哪些包。\nconda search XXXX:查找包的版本\nconda install package_name(包名)：安装包\nconda env list 或 conda info -e：查看当前存在哪些虚拟环境\nconda update conda：检查更新当前conda\nconda create -n 创建conda环境\n激活环境 conda activate XXX\n退出环境conda deactivate\n移除环境： conda/mamba remove -n XXX --all\n导出环境： conda env export xxx.yaml 将现有的包导出，方便以后直接创建环境\n复现环境： conda env create -f environment.yaml\nlsblk查看硬盘信息\ntop 查看cpu使用情况\nlspci | grep -i nvidia  查看gpu情况\n```\n\n添加镜像\n```\nconda config --add channels genomedk\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/\nconda config --set show_channel_urls yes\n\n#查看已配置的镜像\nconda config --show\n\n#删除某个镜像源\nconda config --remove channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\n```\n\n\n\n# 3配置pytorch环境\n查看CUDA版本\n```\nnvidia-smi\n```\n[pytorch官网](https://pytorch.org/get-started/locally)\n选择对应的版本\n\n判断是否安装成功\n在命令行输入```python```\n\n输入```import torch```，没有报错说明安装成功\n\n输入```torch.cuda.is_available()```，返回true表示可以使用GPU\n\n# 4安装jupyter\n[源于](https://zhuanlan.zhihu.com/p/166425946)\njupyter notebook安装\n```conda install jupyter notebook```\n\njupyter lab安装\n```conda install -c conda-forge jupyterlab```\n\n使用pip安装中文界面\n```pip install jupyterlab-language-pack-zh-CN ``` \n\n\n生成jupyter密码密文\n密文生成有手动生成和自动生成两种方式。自动生成会保存在json文件中。手动生成在ipython中运行直接输出。 密码用于本地访问服务器jupyter时需要输入的密码。\n\n自动生成\n```\n$ jupyter notebook password\nEnter password:  \nVerify password: \n[NotebookPasswordApp] Wrote hashed password to /home/you/.jupyter/jupyter_notebook_config.json\n```\n\n手动生成\n```\n## 打开ipython，输入\nfrom IPython.lib import passwd\npasswd()\n## 提示输入密码和确认输入，完成后得到密文。\nEnter password: \nVerify password: \n'sha1:********************************************' \n## 或者\nfrom notebook.auth import passwd; passwd()\n```\n配置\n\n生成密文后，有两种设置方式，访问jupyter。一种是修改配置文件，另一种为通过ssh启动。\n\n方式一：修改配置文件\n查看配置文件是否存在：```~/.jupyter/jupyter_notebook_config.py```\n生成配置文件：\n```\njupyter notebook --generate-config\n或\njupyter lab --generate-config\n```\n\n修改配置文件 需要修改主要是四个地方，分别是IP地址，密文，浏览器，端口。\n```\n## 打开前面生成的配置文件\nvim ~/.jupyter/jupyter_notebook_config.py\n## 修改配置内容\n## 官方文档建议修改成‘*’，但可能还是无法访问，可以修改成‘0.0.0.1’或者服务器IP 目前不需改\nc.NotebookApp.ip='*'\n## 修改成将之前生成的密文 改shal:后面的内容\nc.NotebookApp.password = u'sha1:........'\nc.NotebookApp.open_browser = False\n## 随便都可以，防止与其他端口冲突即可。也可以再启动jupyter时，用--port参数指定。\nc.NotebookApp.port =8889\n```\n\n[jupyter lab插件](https://zhuanlan.zhihu.com/p/101070029)\n\n服务器常用命令\n```nohup jupyter notebook &```后台启动jupyter lab\n\n\n```pkill -f jupyter```杀死后台所有jupyter进程\n\n```htop```查看cpu占用情况\n\n多内核jupyter\n\n```conda install nb_conda -c https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/```\n\n# 内网穿透\n跳板机\nB to C ```ssh -N -f -L 3333:localhost:8889 syf@172.19.4.27```\n\n\n 开机自启 （有问题）\n 您可以创建一个名为 my_script.sh 的文件，然后在其中添加以下内容：\n \n \n```\n#!/bin/bash\nssh -N -f -L 3333:localhost:8889 syf@172.19.4.27\n```\n然后，您可以使用以下命令将脚本移动到 /etc/profile.d/ 目录下：\n\n\n\n```sudo mv my_script.sh /etc/profile.d/```\n\n最后，您需要给脚本添加可执行权限：\n\n\n\n```sudo chmod +x /etc/profile.d/my_script.sh```\n\n这样，在系统启动后，脚本就会自动执行。\n\n \n \n打洞\n[cpolar](https://www.cpolar.com/)\n使用\n\n5. 向系统添加服务\n```sudo systemctl enable cpolar```\nShellCopy\n6. 启动cpolar服务\n```sudo systemctl start cpolar```\n\n","slug":"配置服务器pytorch环境","published":1,"updated":"2023-04-12T05:37:56.213Z","_id":"clfrt1xpt0000k8th3mmhfrun","comments":1,"layout":"post","photos":[],"link":"","content":"<p>用来配置服务器python环境的记录 <div>\n            <input type=\"checkbox\" disabled >搭建doctor\n          </div> <span id=\"more\"></span></p>\r\n<h1 id=\"安装mini-conda\">1安装mini-conda</h1>\r\n<p><a\r\nhref=\"https://docs.conda.io/en/latest/miniconda.html#linux-installers\">官网</a>\r\n从官网下载对应版本，对应系统的安装包</p>\r\n<p>将安装包传入linux系统 cd到目标文件目录： <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">bash Miniconda3-4.7.12.1-Linux-x86_64.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure></p>\r\n<p>安装后重新加载配置文件 <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">source .bashrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure></p>\r\n<h1 id=\"基础命令\">2基础命令</h1>\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">conda --version 查看安装的conda的版本，检验是否安装成功\nconda list：查看安装了哪些包。\nconda search XXXX:查找包的版本\nconda install package_name(包名)：安装包\nconda env list 或 conda info -e：查看当前存在哪些虚拟环境\nconda update conda：检查更新当前conda\nconda create -n 创建conda环境\n激活环境 conda activate XXX\n退出环境conda deactivate\n移除环境： conda&#x2F;mamba remove -n XXX --all\n导出环境： conda env export xxx.yaml 将现有的包导出，方便以后直接创建环境\n复现环境： conda env create -f environment.yaml\nlsblk查看硬盘信息\ntop 查看cpu使用情况\nlspci | grep -i nvidia  查看gpu情况<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\r\n<p>添加镜像 <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">conda config --add channels genomedk\nconda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;\nconda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;main&#x2F;\nconda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;conda-forge&#x2F;\nconda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;bioconda&#x2F;\nconda config --set show_channel_urls yes\n\n#查看已配置的镜像\nconda config --show\n\n#删除某个镜像源\nconda config --remove channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></p>\r\n<h1 id=\"配置pytorch环境\">3配置pytorch环境</h1>\r\n<p>查看CUDA版本 <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">nvidia-smi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure> <a\r\nhref=\"https://pytorch.org/get-started/locally\">pytorch官网</a>\r\n选择对应的版本</p>\r\n<p>判断是否安装成功 在命令行输入<code>python</code></p>\r\n<p>输入<code>import torch</code>，没有报错说明安装成功</p>\r\n<p>输入<code>torch.cuda.is_available()</code>，返回true表示可以使用GPU</p>\r\n<h1 id=\"安装jupyter\">4安装jupyter</h1>\r\n<p><a href=\"https://zhuanlan.zhihu.com/p/166425946\">源于</a> jupyter\r\nnotebook安装 <code>conda install jupyter notebook</code></p>\r\n<p>jupyter lab安装\r\n<code>conda install -c conda-forge jupyterlab</code></p>\r\n<p>使用pip安装中文界面\r\n<code>pip install jupyterlab-language-pack-zh-CN</code></p>\r\n<p>生成jupyter密码密文\r\n密文生成有手动生成和自动生成两种方式。自动生成会保存在json文件中。手动生成在ipython中运行直接输出。\r\n密码用于本地访问服务器jupyter时需要输入的密码。</p>\r\n<p>自动生成 <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">$ jupyter notebook password\nEnter password:  \nVerify password: \n[NotebookPasswordApp] Wrote hashed password to &#x2F;home&#x2F;you&#x2F;.jupyter&#x2F;jupyter_notebook_config.json<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></div></figure></p>\r\n<p>手动生成 <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">## 打开ipython，输入\nfrom IPython.lib import passwd\npasswd()\n## 提示输入密码和确认输入，完成后得到密文。\nEnter password: \nVerify password: \n&#39;sha1:********************************************&#39; \n## 或者\nfrom notebook.auth import passwd; passwd()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure> 配置</p>\r\n<p>生成密文后，有两种设置方式，访问jupyter。一种是修改配置文件，另一种为通过ssh启动。</p>\r\n<p>方式一：修改配置文件\r\n查看配置文件是否存在：<code>~/.jupyter/jupyter_notebook_config.py</code>\r\n生成配置文件： <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">jupyter notebook --generate-config\n或\njupyter lab --generate-config<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></div></figure></p>\r\n<p>修改配置文件\r\n需要修改主要是四个地方，分别是IP地址，密文，浏览器，端口。\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">## 打开前面生成的配置文件\nvim ~&#x2F;.jupyter&#x2F;jupyter_notebook_config.py\n## 修改配置内容\n## 官方文档建议修改成‘*’，但可能还是无法访问，可以修改成‘0.0.0.1’或者服务器IP 目前不需改\nc.NotebookApp.ip&#x3D;&#39;*&#39;\n## 修改成将之前生成的密文 改shal:后面的内容\nc.NotebookApp.password &#x3D; u&#39;sha1:........&#39;\nc.NotebookApp.open_browser &#x3D; False\n## 随便都可以，防止与其他端口冲突即可。也可以再启动jupyter时，用--port参数指定。\nc.NotebookApp.port &#x3D;8889<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></p>\r\n<p><a href=\"https://zhuanlan.zhihu.com/p/101070029\">jupyter\r\nlab插件</a></p>\r\n<p>服务器常用命令 <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-nohup\" data-language=\"nohup\"><div class=\"caption\"><span>jupyter notebook &```后台启动jupyter lab</span></div><code class=\"language-nohup\">\n\n&#96;&#96;&#96;pkill -f jupyter&#96;&#96;&#96;杀死后台所有jupyter进程\n\n&#96;&#96;&#96;htop&#96;&#96;&#96;查看cpu占用情况\n\n多内核jupyter\n\n&#96;&#96;&#96;conda install nb_conda -c https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;main&#x2F;&#96;&#96;&#96;\n\n# 内网穿透\n跳板机\nB to C &#96;&#96;&#96;ssh -N -f -L 3333:localhost:8889 syf@172.19.4.27&#96;&#96;&#96;\n\n\n 开机自启 （有问题）\n 您可以创建一个名为 my_script.sh 的文件，然后在其中添加以下内容：\n \n <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure> #!/bin/bash ssh -N -f -L\r\n3333:localhost:8889 syf@172.19.4.27 ```\r\n然后，您可以使用以下命令将脚本移动到 /etc/profile.d/ 目录下：</p>\r\n<p><code>sudo mv my_script.sh /etc/profile.d/</code></p>\r\n<p>最后，您需要给脚本添加可执行权限：</p>\r\n<p><code>sudo chmod +x /etc/profile.d/my_script.sh</code></p>\r\n<p>这样，在系统启动后，脚本就会自动执行。</p>\r\n<p>打洞 <a href=\"https://www.cpolar.com/\">cpolar</a> 使用</p>\r\n<ol start=\"5\" type=\"1\">\r\n<li>向系统添加服务 <code>sudo systemctl enable cpolar</code>\r\nShellCopy</li>\r\n<li>启动cpolar服务 <code>sudo systemctl start cpolar</code></li>\r\n</ol>\r\n","site":{"data":{}},"excerpt":"<p>用来配置服务器python环境的记录 <div>\n            <input type=\"checkbox\" disabled >搭建doctor\n          </div>","more":"</p>\r\n<h1 id=\"安装mini-conda\">1安装mini-conda</h1>\r\n<p><a\r\nhref=\"https://docs.conda.io/en/latest/miniconda.html#linux-installers\">官网</a>\r\n从官网下载对应版本，对应系统的安装包</p>\r\n<p>将安装包传入linux系统 cd到目标文件目录： <pre class=\"line-numbers language-none\"><code class=\"language-none\">bash Miniconda3-4.7.12.1-Linux-x86_64.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\r\n<p>安装后重新加载配置文件 <pre class=\"line-numbers language-none\"><code class=\"language-none\">source .bashrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\r\n<h1 id=\"基础命令\">2基础命令</h1>\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">conda --version 查看安装的conda的版本，检验是否安装成功\nconda list：查看安装了哪些包。\nconda search XXXX:查找包的版本\nconda install package_name(包名)：安装包\nconda env list 或 conda info -e：查看当前存在哪些虚拟环境\nconda update conda：检查更新当前conda\nconda create -n 创建conda环境\n激活环境 conda activate XXX\n退出环境conda deactivate\n移除环境： conda&#x2F;mamba remove -n XXX --all\n导出环境： conda env export xxx.yaml 将现有的包导出，方便以后直接创建环境\n复现环境： conda env create -f environment.yaml\nlsblk查看硬盘信息\ntop 查看cpu使用情况\nlspci | grep -i nvidia  查看gpu情况<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\r\n<p>添加镜像 <pre class=\"line-numbers language-none\"><code class=\"language-none\">conda config --add channels genomedk\nconda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;\nconda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;main&#x2F;\nconda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;conda-forge&#x2F;\nconda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;bioconda&#x2F;\nconda config --set show_channel_urls yes\n\n#查看已配置的镜像\nconda config --show\n\n#删除某个镜像源\nconda config --remove channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\r\n<h1 id=\"配置pytorch环境\">3配置pytorch环境</h1>\r\n<p>查看CUDA版本 <pre class=\"line-numbers language-none\"><code class=\"language-none\">nvidia-smi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre> <a\r\nhref=\"https://pytorch.org/get-started/locally\">pytorch官网</a>\r\n选择对应的版本</p>\r\n<p>判断是否安装成功 在命令行输入<code>python</code></p>\r\n<p>输入<code>import torch</code>，没有报错说明安装成功</p>\r\n<p>输入<code>torch.cuda.is_available()</code>，返回true表示可以使用GPU</p>\r\n<h1 id=\"安装jupyter\">4安装jupyter</h1>\r\n<p><a href=\"https://zhuanlan.zhihu.com/p/166425946\">源于</a> jupyter\r\nnotebook安装 <code>conda install jupyter notebook</code></p>\r\n<p>jupyter lab安装\r\n<code>conda install -c conda-forge jupyterlab</code></p>\r\n<p>使用pip安装中文界面\r\n<code>pip install jupyterlab-language-pack-zh-CN</code></p>\r\n<p>生成jupyter密码密文\r\n密文生成有手动生成和自动生成两种方式。自动生成会保存在json文件中。手动生成在ipython中运行直接输出。\r\n密码用于本地访问服务器jupyter时需要输入的密码。</p>\r\n<p>自动生成 <pre class=\"line-numbers language-none\"><code class=\"language-none\">$ jupyter notebook password\nEnter password:  \nVerify password: \n[NotebookPasswordApp] Wrote hashed password to &#x2F;home&#x2F;you&#x2F;.jupyter&#x2F;jupyter_notebook_config.json<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\r\n<p>手动生成 <pre class=\"line-numbers language-none\"><code class=\"language-none\">## 打开ipython，输入\nfrom IPython.lib import passwd\npasswd()\n## 提示输入密码和确认输入，完成后得到密文。\nEnter password: \nVerify password: \n&#39;sha1:********************************************&#39; \n## 或者\nfrom notebook.auth import passwd; passwd()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 配置</p>\r\n<p>生成密文后，有两种设置方式，访问jupyter。一种是修改配置文件，另一种为通过ssh启动。</p>\r\n<p>方式一：修改配置文件\r\n查看配置文件是否存在：<code>~/.jupyter/jupyter_notebook_config.py</code>\r\n生成配置文件： <pre class=\"line-numbers language-none\"><code class=\"language-none\">jupyter notebook --generate-config\n或\njupyter lab --generate-config<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\r\n<p>修改配置文件\r\n需要修改主要是四个地方，分别是IP地址，密文，浏览器，端口。\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">## 打开前面生成的配置文件\nvim ~&#x2F;.jupyter&#x2F;jupyter_notebook_config.py\n## 修改配置内容\n## 官方文档建议修改成‘*’，但可能还是无法访问，可以修改成‘0.0.0.1’或者服务器IP 目前不需改\nc.NotebookApp.ip&#x3D;&#39;*&#39;\n## 修改成将之前生成的密文 改shal:后面的内容\nc.NotebookApp.password &#x3D; u&#39;sha1:........&#39;\nc.NotebookApp.open_browser &#x3D; False\n## 随便都可以，防止与其他端口冲突即可。也可以再启动jupyter时，用--port参数指定。\nc.NotebookApp.port &#x3D;8889<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\r\n<p><a href=\"https://zhuanlan.zhihu.com/p/101070029\">jupyter\r\nlab插件</a></p>\r\n<p>服务器常用命令 <pre class=\"line-numbers language-nohup\" data-language=\"nohup\"><div class=\"caption\"><span>jupyter notebook &```后台启动jupyter lab</span></div><code class=\"language-nohup\">\n\n&#96;&#96;&#96;pkill -f jupyter&#96;&#96;&#96;杀死后台所有jupyter进程\n\n&#96;&#96;&#96;htop&#96;&#96;&#96;查看cpu占用情况\n\n多内核jupyter\n\n&#96;&#96;&#96;conda install nb_conda -c https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;main&#x2F;&#96;&#96;&#96;\n\n# 内网穿透\n跳板机\nB to C &#96;&#96;&#96;ssh -N -f -L 3333:localhost:8889 syf@172.19.4.27&#96;&#96;&#96;\n\n\n 开机自启 （有问题）\n 您可以创建一个名为 my_script.sh 的文件，然后在其中添加以下内容：\n \n <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> #!/bin/bash ssh -N -f -L\r\n3333:localhost:8889 syf@172.19.4.27 ```\r\n然后，您可以使用以下命令将脚本移动到 /etc/profile.d/ 目录下：</p>\r\n<p><code>sudo mv my_script.sh /etc/profile.d/</code></p>\r\n<p>最后，您需要给脚本添加可执行权限：</p>\r\n<p><code>sudo chmod +x /etc/profile.d/my_script.sh</code></p>\r\n<p>这样，在系统启动后，脚本就会自动执行。</p>\r\n<p>打洞 <a href=\"https://www.cpolar.com/\">cpolar</a> 使用</p>\r\n<ol start=\"5\" type=\"1\">\r\n<li>向系统添加服务 <code>sudo systemctl enable cpolar</code>\r\nShellCopy</li>\r\n<li>启动cpolar服务 <code>sudo systemctl start cpolar</code></li>\r\n</ol>"},{"title":"搭建服务器环境所使用到的一些应用与端口的记录","date":"2023-05-03T05:13:47.522Z","_content":"用来配置服务器环境\n<!-- more -->\n\n# 常用应用端口：\n\n## ssh：\n```\ntcp://127.0.0.1:22 \n\n```\n\n登录指令：\n```\n用户名@网址 -p 端口号\n\n例：\nsong@2.tcp.cpolar.top -p 11048\n```\n\n## coplar web UI：\n```\nhttp://localhost:9200 \n\n```\n\n在coplar中开启内网穿透时可以选择只开启https，一方面保证安全性，另一方面可以多开一倍的隧道\n[coplar下载地址](https://www.cpolar.com/download)\n在win和mac平台直接就是web界面，在linux平台需要编辑配置文件来开启端口\n\n## Portainer：\n```\nhttp://localhost:9000 \n\n```\n\n安装指令：\n```\ndocker run -d \\\n-p 9000:9000 \\\n-p 8000:8000 \\\n--restart always \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-v /opt/docker/portainer-ce/data:/data \\\n--name portainer-ce portainer/portainer-ce\n```\n\nPortainer也可以实现远程控制其他docker节点\n\n## clash：\n```\nhttp://localhost:9090 \n\n```\n\n\n控制面板网址：\n```\nclash-dashboard：http://clash.razord.top/\nyacd-dashboard：http://yacd.haishan.me/\n```\n\n在控制面板中将clash的后台服务端口输入就可以访问了\n\n[docker部署](https://blog.zzsqwq.cn/posts/how-to-use-clash-on-linux/)\n\n## Jupyter lab：\n```\nhttp://localhost:8888 \n\n```\n\n远程访问Jupyter lab需要修改配置文件如下：\n\n```\nc.NotebookApp.allow_remote_access = True\nc.NotebookApp.open_browser = False\nc.NotebookApp.ip='*'\nc.NotebookApp.password = 'sha1:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n\n```\n\n## chat_academic：\n```\nhttp://localhost:50923 \n\n```\n\n注意，使用docker部署时需要将localhost改为host.docker.internal才可以访问宿主机的端口","source":"_posts/搭建mac服务器的一些记录.md","raw":"---\ntitle: 搭建服务器环境所使用到的一些应用与端口的记录\ndate: 2023年5月3日13:15:10\ntags: \n  - 服务器\ncategories: 环境配置\n---\n用来配置服务器环境\n<!-- more -->\n\n# 常用应用端口：\n\n## ssh：\n```\ntcp://127.0.0.1:22 \n\n```\n\n登录指令：\n```\n用户名@网址 -p 端口号\n\n例：\nsong@2.tcp.cpolar.top -p 11048\n```\n\n## coplar web UI：\n```\nhttp://localhost:9200 \n\n```\n\n在coplar中开启内网穿透时可以选择只开启https，一方面保证安全性，另一方面可以多开一倍的隧道\n[coplar下载地址](https://www.cpolar.com/download)\n在win和mac平台直接就是web界面，在linux平台需要编辑配置文件来开启端口\n\n## Portainer：\n```\nhttp://localhost:9000 \n\n```\n\n安装指令：\n```\ndocker run -d \\\n-p 9000:9000 \\\n-p 8000:8000 \\\n--restart always \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-v /opt/docker/portainer-ce/data:/data \\\n--name portainer-ce portainer/portainer-ce\n```\n\nPortainer也可以实现远程控制其他docker节点\n\n## clash：\n```\nhttp://localhost:9090 \n\n```\n\n\n控制面板网址：\n```\nclash-dashboard：http://clash.razord.top/\nyacd-dashboard：http://yacd.haishan.me/\n```\n\n在控制面板中将clash的后台服务端口输入就可以访问了\n\n[docker部署](https://blog.zzsqwq.cn/posts/how-to-use-clash-on-linux/)\n\n## Jupyter lab：\n```\nhttp://localhost:8888 \n\n```\n\n远程访问Jupyter lab需要修改配置文件如下：\n\n```\nc.NotebookApp.allow_remote_access = True\nc.NotebookApp.open_browser = False\nc.NotebookApp.ip='*'\nc.NotebookApp.password = 'sha1:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n\n```\n\n## chat_academic：\n```\nhttp://localhost:50923 \n\n```\n\n注意，使用docker部署时需要将localhost改为host.docker.internal才可以访问宿主机的端口","slug":"搭建mac服务器的一些记录","published":1,"updated":"2023-05-03T08:40:53.743Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7g90o300004gthg2sneu4a","content":"<p>用来配置服务器环境 <span id=\"more\"></span></p>\r\n<h1 id=\"常用应用端口\">常用应用端口：</h1>\r\n<h2 id=\"ssh\">ssh：</h2>\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">tcp:&#x2F;&#x2F;127.0.0.1:22 \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\r\n<p>登录指令： <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">用户名@网址 -p 端口号\n\n例：\nsong@2.tcp.cpolar.top -p 11048<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></div></figure></p>\r\n<h2 id=\"coplar-web-ui\">coplar web UI：</h2>\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;localhost:9200 \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\r\n<p>在coplar中开启内网穿透时可以选择只开启https，一方面保证安全性，另一方面可以多开一倍的隧道\r\n<a href=\"https://www.cpolar.com/download\">coplar下载地址</a>\r\n在win和mac平台直接就是web界面，在linux平台需要编辑配置文件来开启端口</p>\r\n<h2 id=\"portainer\">Portainer：</h2>\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;localhost:9000 \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\r\n<p>安装指令： <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">docker run -d \\\n-p 9000:9000 \\\n-p 8000:8000 \\\n--restart always \\\n-v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \\\n-v &#x2F;opt&#x2F;docker&#x2F;portainer-ce&#x2F;data:&#x2F;data \\\n--name portainer-ce portainer&#x2F;portainer-ce<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></p>\r\n<p>Portainer也可以实现远程控制其他docker节点</p>\r\n<h2 id=\"clash\">clash：</h2>\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;localhost:9090 \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\r\n<p>控制面板网址： <figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">clash-dashboard：http:&#x2F;&#x2F;clash.razord.top&#x2F;\nyacd-dashboard：http:&#x2F;&#x2F;yacd.haishan.me&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></div></figure></p>\r\n<p>在控制面板中将clash的后台服务端口输入就可以访问了</p>\r\n<p><a\r\nhref=\"https://blog.zzsqwq.cn/posts/how-to-use-clash-on-linux/\">docker部署</a></p>\r\n<h2 id=\"jupyter-lab\">Jupyter lab：</h2>\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;localhost:8888 \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\r\n<p>远程访问Jupyter lab需要修改配置文件如下：</p>\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">c.NotebookApp.allow_remote_access &#x3D; True\nc.NotebookApp.open_browser &#x3D; False\nc.NotebookApp.ip&#x3D;&#39;*&#39;\nc.NotebookApp.password &#x3D; &#39;sha1:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#39;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\r\n<h2 id=\"chat_academic\">chat_academic：</h2>\r\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;localhost:50923 \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\r\n<p>注意，使用docker部署时需要将localhost改为host.docker.internal才可以访问宿主机的端口</p>\r\n","site":{"data":{}},"excerpt":"<p>用来配置服务器环境","more":"</p>\r\n<h1 id=\"常用应用端口\">常用应用端口：</h1>\r\n<h2 id=\"ssh\">ssh：</h2>\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tcp:&#x2F;&#x2F;127.0.0.1:22 \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\r\n<p>登录指令： <pre class=\"line-numbers language-none\"><code class=\"language-none\">用户名@网址 -p 端口号\n\n例：\nsong@2.tcp.cpolar.top -p 11048<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\r\n<h2 id=\"coplar-web-ui\">coplar web UI：</h2>\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;localhost:9200 \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\r\n<p>在coplar中开启内网穿透时可以选择只开启https，一方面保证安全性，另一方面可以多开一倍的隧道\r\n<a href=\"https://www.cpolar.com/download\">coplar下载地址</a>\r\n在win和mac平台直接就是web界面，在linux平台需要编辑配置文件来开启端口</p>\r\n<h2 id=\"portainer\">Portainer：</h2>\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;localhost:9000 \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\r\n<p>安装指令： <pre class=\"line-numbers language-none\"><code class=\"language-none\">docker run -d \\\n-p 9000:9000 \\\n-p 8000:8000 \\\n--restart always \\\n-v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \\\n-v &#x2F;opt&#x2F;docker&#x2F;portainer-ce&#x2F;data:&#x2F;data \\\n--name portainer-ce portainer&#x2F;portainer-ce<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\r\n<p>Portainer也可以实现远程控制其他docker节点</p>\r\n<h2 id=\"clash\">clash：</h2>\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;localhost:9090 \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\r\n<p>控制面板网址： <pre class=\"line-numbers language-none\"><code class=\"language-none\">clash-dashboard：http:&#x2F;&#x2F;clash.razord.top&#x2F;\nyacd-dashboard：http:&#x2F;&#x2F;yacd.haishan.me&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\r\n<p>在控制面板中将clash的后台服务端口输入就可以访问了</p>\r\n<p><a\r\nhref=\"https://blog.zzsqwq.cn/posts/how-to-use-clash-on-linux/\">docker部署</a></p>\r\n<h2 id=\"jupyter-lab\">Jupyter lab：</h2>\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;localhost:8888 \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\r\n<p>远程访问Jupyter lab需要修改配置文件如下：</p>\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">c.NotebookApp.allow_remote_access &#x3D; True\nc.NotebookApp.open_browser &#x3D; False\nc.NotebookApp.ip&#x3D;&#39;*&#39;\nc.NotebookApp.password &#x3D; &#39;sha1:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#39;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\r\n<h2 id=\"chat_academic\">chat_academic：</h2>\r\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;localhost:50923 \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\r\n<p>注意，使用docker部署时需要将localhost改为host.docker.internal才可以访问宿主机的端口</p>"},{"title":"100个有趣的网址","date":"2023-06-08T08:46:57.855Z","_content":"其中一些工具对于数据收集很有效\n<!-- more -->\n\n1、实时地球 网址：https://zoom.earth/实时图像每 10 分钟更新一次，提供风暴、天气预报、降水、火警等数据\n\n2、陕西博物馆 360 度实景浏览 网址：https://www.sxhm.com/online.html/ 线上参观陕西博物馆，360 度展示，共有五个展厅 100 多个场景。可以网页浏览，也可以 VR 头盔浏览\n\n3、CyArk 网址：https://www.cyark.org/ 用专业的三维激光扫描技术数字化重现世界上最久远、最著名的古迹\n\n4、全球贸易数据分析 网址：http://globe.cid.harvard.edu/ 这个网站可以看到全球每一个国家在贸易方面的数据\n\n5、公共钢琴 网址：https://pianos.pub/ 收集了全世界 8,391 架公共钢琴，你可以输入一个地点查找附近的钢琴\n\n6、天际网络摄像头 网址：https://www.skylinewebcams.com/ 观看世界各地景区的实时摄像头画面\n\n7、Manhole 网址：https://manhole.co.il/ 有非常多全世界各地有趣的井盖 还能看这个井盖具体在什么地方\n\n8、近地轨道可视化 网址：https://platform.leolabs.space/visualization 感受地球低轨道太空的实际状态\n\n9、全球电力设施地图 网址：https://openinframap.org/ 该网站的地图显示全世界电力设施的位置，包括电厂、变电站、输电线等等，甚至还有风力发电机\n\n10、护照博物馆 网址：https://www.passportindex.org/ 这个网站集合了世界各地护照样式 还有办理程序 办理难易程度 等等\n\n11、随机谷歌街景 网址：https://randomstreetview.com/ 这个网站随机展示谷歌街景的照片，世界各地都有\n\n12、用户界面的历史 网址：https://history.user-interface.io/ 介绍了从 1973 年第一个支持 GUI 的操作系统到目前的 macOS 和 windows 的用户界面\n\n13、World flags 网址：https://world-flags.org/ 一个介绍世界各国国旗、含义和起源、国旗的起源和琐事的国旗武士媒体组合项目\n\n14、Dollar Street 网址：https://www.gapminder.org/dollar-street/ 按照收入展示各个国家中人们的生活\n\n15、深海 网址：https://neal.fun/deep-sea/ 海洋不同深度都有什么生物\n\n16、Go nomad 网址：https://nomadlist.com/ 这个网站是用来给游民们寻找适合自己的城市做参考，根据各种权威机构数据列出了各项评分\n\n17、手机博物馆 网址：https://www.mobilephonemuseum.com/catalogue 网站目前拥有来自 200 多个不同品牌的 2200 多个独立型号\n\n18、线上博物馆 网址：http://www.diaoyudao.org.cn/dydbwg.html/ 博物馆展陈内容包括历史图片、视频资料、文献资料、法律文件、实物模拟等\n\n19、地平说学会协会 网址：https://www.tfes.org/ 世界上有一些人认为地球是平面而非球体，这是他们的官网\n\n20、机械键盘博物馆 网址：https://scrapbox.io/MECHKEYS/ 收集了非常多设计独特的机械键盘\n\n21、全景故宫 网址：https://pano.dpm.org.cn/ 线上体验游览故宫，360° 查看各个宫殿，有文字介绍\n\n22、故宫博物院数字文物库 网址：https://digicol.dpm.org.cn/ 在线查看故宫博物院众多藏品，可根据分类和年代浏览\n\n23、千亿像素看中国 网址：http://bigpixel.cn/zh-CN.html/ 可浏览千亿像素的全景图片，观看一个城市的面貌\n\n24、核弹威力 网址：https://nuclearsecrecy.com/nukemap/ 选择某个核弹查看爆炸影响的范围大小\n\n25、地球时间线 网址：https://timelineofearth.com/ 滚动屏幕，查看地球从形成到今天的大致时间线\n\n26、克苏鲁公社 网址：https://www.cthulhuclub.com/ 克苏鲁公社为克苏鲁神话爱好者自发创建的克苏鲁神话相关资料网站\n\n27、中国历史照片 网址：https://www.hpcbristol.net/ 布里斯托大学开放中国影像数据库，提供 20,000 多张中国近代照片免费浏览\n\n28、ocearch 网址：https://www.ocearch.org/tracker/ 追踪大白鲨、虎鲸等海洋动物的实时位置\n\n29、知妖（中国妖怪百集） 网址：http://www.cbaigui.com/ 收集中国古今妖怪\n\n30、Little Big World 网址：https://www.littlebigworld.de/ Little Big World 使用移轴摄影、壮观的无人机摄影和惊人的延时，将地球上最美丽、最有趣的地方变成了可爱的微型模型\n\n31、地球模型 网址：https://3d-app.yunser.com/earth/ 网站默认模拟了地球自转运动，同时提供了大量的模拟操作，如查看太阳光照、昼夜平分面黄道面等\n\n32、极像素 网址：https://www.sigoo.com/ 超高像素看世界\n\n33、中国纪录片网 网址：http://www.docuchina.cn/ 国家级的纪录片资源，央视出品\n\n34、OEC.world 网址 https://oec.world/ 查询每个国家或地区的贸易数据，并用图文进行通俗解释\n\n35、波斯波利斯 网址：https://persepolis.getty.edu/ 波斯波利斯是古代波斯帝国的首都，现在已经是一片废墟了。这个页面还原了这座雄伟的帝国都城，重建了 3D 街景，让你在其中漫游\n\n36、卢浮宫藏品 网址：https://collections.louvre.fr/en/ 卢浮宫超过 48 万藏品电子化，可在线免费浏览\n\n37、中华珍宝馆 网址：https://g2.ltfc.net/ 在线的中国字画的博物馆\n\n38、地球旧照 网址：https://3d-app.yunser.com/plateMotion/ 一个可以查看远古时期的地貌、研究板块运动网站\n\n39、木材数据库 网址：https://www.wood-database.com/ 木材数据库。有详细的介绍，包括硬度排行等\n\n40、无限 3D 美术馆 网址：https://gallery.nowaythis.works/ 目前有 180 多万件艺术品的 3D 美术馆，每件艺术品都是来自 Reddit 的 r/Art 频道\n\n41、The Sea We Breathe 网址：https://www.bluemarinefoundation.com/the-sea-we-breathe/ 带你进入海底世界遨游，互动式的体验\n\n42、Webcamtaxi 网址：https://www.webcamtaxi.com/ 有图比 上面有很多 24 小时的摄像头直播频道，可以看到世界各地的实时状况。该网站就是收集这些频道，按照地区和内容分类\n\n43、苏联海报 网址：https://reddirect.ru/ 这个网站收藏了很多苏联时期的海报，很有年代感\n\n44、Artvee 网址：https://artvee.com/ 浏览和下载高分辨率的公共领域艺术品\n\n45、中国国家博物馆 VR 网址：http://www.chnmuseum.cn/Portals/0/web/vr/ 中国国家博物馆提供的 VR 场景，线上 360° 体验游览中国国家博物馆\n\n46、Earth Clock 网址：https://earthclock.cwandt.com/ 这个网站使用 Google Eerth 卫星照片，显示当前的数字时间\n\n47、模拟器博物馆 网址：http://www.famicn.com/ 在线运行电脑系统、学习机、游戏机\n\n48、Arch Daily 网址：https://www.archdaily.cn/cn/ 非常多设计奇特的建筑\n\n49、物种 2000 中国节点 网址：http://sp2000.org.cn/ 该网站建立和维护中国生物物种名录\n\n50、上海博物馆 网址：https://www.shanghaimuseum.net/mu/frontend/pg/index 在线浏览上海博物馆的藏品和博物馆内的三维场景，还提供 AR 功能，需下载上博 AR App 体验\n\n51、光污染地图 网址：https://www.lightpollutionmap.info/ 全球光污染地图，可查看某地光污染各种参数\n\n52、8values 中文版 网址：https://songyon.github.io/8valuescn/ 8values 是一个政治立场测试\n\n53、十年前的网页 网址：https://neal.fun/ten-years-ago/ 可以查看十年前美国的十几个著名网站是什么样子\n\n54、全球天气 网址：https://earth.nullschool.net/ 一个全球天气状况的视觉化网站，还有一个气象网站也不错：ttps://www.ventusky.com\n\n55、流星雨 网址：https://www.meteorshowers.org/ 以太空视角查看某个时间流星雨的形成\n\n56、古典音乐 网址：https://www.kunstderfuge.com/ 免费下载古典音乐（MIDI 格式），可按音乐家名称查询\n\n57、英特尔虚拟博物馆 网址：https://virtualmuseum.intel.com/ 官方网站，3D 虚拟参观英特尔公司的博物馆\n\n58、铅笔收藏馆 网址：https://brandnamepencils.com/ 网站收藏了几乎全球各地知名品牌的铅笔\n\n59、物流艺术 网址：https://logisticsartproject.com/ 记录了一个快递是怎样从斯德哥尔摩经过 37 天到达深圳的\n\n60、IDEA 网址：https://www.dialectsarchive.com/ 全球英语方言档案馆（不同国家不同地区的人说英语是什么口音）\n\n61、Exploratorium 网址：https://exploratorium.edu/ronh/age/ 科普网站，看看你在其它星球的岁数\n\n62、[audio]http://Archive.org Serendipity 网址：https://www.locserendipity.com/PushPlay.html/ 收集了很多过了版权保护期的音乐作品，按一下按钮，就会随机播放一段音乐\n\n63、FlightAware 网址：https://zh.flightaware.com/ 提供全球实时航班交通以及航空趋势等\n\n64、世界人口时钟 网址：https://countrymeters.info/cn/ 网站展示任何国家目前的人口的实时统计，出生，死亡，净迁移和人口增长\n\n65、观沧海 网址：https://www.ageeye.cn/ 以地图为线索，反映中国历史、 军事、 自然、 ⽂化等各⽅面的知识\n\n66、开源人物肖像 网址：http://www.facesofopensource.com/ 那些推动计算机**的开源程序员的肖像\n\n67、信聚网 网址：https://xinjh.info/ 网络有趣资源收集分享\n\n68、濒危声音博物馆 网址：http://savethesounds.info/ 收藏了一些消失的声音，比如打字机的击键声、点阵式打印机的打印声、Windows 95 的开机声\n\n69、指尖上 网址：https://www.zhijianshang.com/ 海量全面精美的 VR 全景旅游景点介绍，只需动动指尖就能通过虚拟现实深入景区内部，体验各地的美景风光\n\n70、全球海底光缆 网址：https://he.net/3d-map/ 这个网页提供了一个互动式的地球，上面有全世界海底光缆和骨干机房的位置\n\n71、韵典网 网址：https://ytenx.org/ 韵典网是一个综合的韵书查询工具，包含广韵、中原音韵、洪武正韵笺、分韵撮要和上古音系\n\n72、天空之城 网址：https://www.skypixel.com/ 无人机航拍照片和视频共享平台\n\n73、Gallerix 网址：https://gallerix.asia/ 在线博物馆，可以按画家或博物馆来查看油画\n\n74、荷兰国家博物馆 网址：https://www.rijksmuseum.nl/nl/ 可在线浏览荷兰国家博物馆大量珍贵的藏品\n\n75、Conserve the Sound 网址：https://www.conservethesound.de/ 老物件的声音博物馆，你可以听到打字机、手摇咖啡研磨机等物品的声音\n\n76、科普网站 网址：https://animagraffs.com/ 了解各种产品的原理\n\n77、百年纪念灯泡 网址：https://www.centennialbulb.org/cam.htm/ 展示已经亮了百年的灯泡\n\n78、环游世界 网址：https://www.airpano.org.cn/ 网站提供各个地区的全景图，三百六十度看世界\n\n79、四大名著 网址：http://www.sdmz.cn/ 网站提供了四大名著相关的电子书、音频、图片、地图等在线资源\n\n80、制服地图 网址：https://uniform.wingzero.tw/ Uniform Map 是一个让使用者可以从 Google 地图去查询学校制服的网站，想知道某所学校所穿的制服，用这网站就能轻松解决\n\n81、国际空间站 网址：https://www.google.com/maps/@29.5602853,95.0853914,2a,75y,212.04h,90t/data=!3m7!1e1!3m5!1szChzPIAn4RIAAAQvxgbyEg!2e0!3e5!7i10000!8i5000?shorturl=1/ Google 地图，可查看国际空间站内部环境\n\n82、飞机坠毁信息 网址：http://www.planecrashinfo.com/ 记录航空事故，包括地点、死亡人数、细节以及不寻常的事故、最后的话等\n\n83、熊猫频道 网址：https://www.ipanda.com/ 央视熊猫频道对大熊猫繁育、日常起居等的情况进行 24 小时近距离视频直播及点播\n\n84、享有海景的车站 网址：https://seaside-station.com/ 网站记录了日本非常多海边的火车站极其周边景色的照片\n\n85、中国古籍保护网 网址：http://www.nlc.cn/pcab/ 中国古籍保护网，可在线浏览古籍的电子版，如《金石圖說》\n\n86、Treeographer 网址：https://thetreeographer.com/archive/ 收集一些奇特的树\n\n87、乡音苑 网址：https://phonemica.net/ 收集来自全国各地的网友上传的方言故事，网站提供各种字幕不怕看不懂\n\n88、搜韵 网址：https://sou-yun.cn/ 搜韵网共收录约 90 万首古今诗词作品，其中近现代及之前的诗词作品约 83 万。\n\n89、世界建筑名录 网址：https://www.worldbuildingsdirectory.com/ 浏览来自世界各地的最具创新性的建筑\n\n90、书格子 网址：https://new.shuge.org/ 有品格的数字古籍图书馆\n\n91、10 万亿像素的夜空 网址：https://viewer.legacysurvey.org/ 浏览一张 10 万亿像素的图片，包含超过十亿个星系，覆盖整个天空的三分之一。\n\n92、网站设计博物馆 网址：https://www.webdesignmuseum.org/ 展出 1600 多个网站从 1991 到 2006 年主页的设计\n\n93、星辰协会 网址：http://thestarsetsociety.org/ 美国 Starset 乐队科研团队“Starset 协会”网站\n\n94、全历史 网址：https://www.allhistory.com/ 让用户沉浸在纵横开阔、左图右史的（历史、人文、社科等）知识海洋中\n\n95、风网 网址：https://www.windy.com/ 台风 暴雨观测\n\n96、100,000 Stars 网址：https://stars.chromeexperiments.com/ 璀璨星河一触即达，宇宙星系在线观赏(来自 Google 实验室)\n\n97、世界数字图书馆 网址：https://www.loc.gov/collections/ … ut-this-collection/ 网站免费提供使用珍贵图书、地图、影片与照片等服务\n\n98、世界地图 网址：http://www.onegreen.net/maps/m/world.htm/ 提供高清、可下载的世界地图，有各种版本，如行政图、世界地形、交通等\n\n99、蚂蚁网 网址：http://www.ants-china.com/ 东亚、东北亚、南亚及东南亚地区蚂蚁-全球最大的华语中文蚂蚁专业网站\n\n100、数字敦煌 网址：https://www.e-dunhuang.com/ 在线浏览敦煌，可浏览经典洞窟、经典壁画等","source":"_posts/一百个有趣网址.md","raw":"---\ntitle: 100个有趣的网址\ndate: 2023年5月3日13:15:10\ntags: \n  - 网址\ncategories: 工具\n---\n其中一些工具对于数据收集很有效\n<!-- more -->\n\n1、实时地球 网址：https://zoom.earth/实时图像每 10 分钟更新一次，提供风暴、天气预报、降水、火警等数据\n\n2、陕西博物馆 360 度实景浏览 网址：https://www.sxhm.com/online.html/ 线上参观陕西博物馆，360 度展示，共有五个展厅 100 多个场景。可以网页浏览，也可以 VR 头盔浏览\n\n3、CyArk 网址：https://www.cyark.org/ 用专业的三维激光扫描技术数字化重现世界上最久远、最著名的古迹\n\n4、全球贸易数据分析 网址：http://globe.cid.harvard.edu/ 这个网站可以看到全球每一个国家在贸易方面的数据\n\n5、公共钢琴 网址：https://pianos.pub/ 收集了全世界 8,391 架公共钢琴，你可以输入一个地点查找附近的钢琴\n\n6、天际网络摄像头 网址：https://www.skylinewebcams.com/ 观看世界各地景区的实时摄像头画面\n\n7、Manhole 网址：https://manhole.co.il/ 有非常多全世界各地有趣的井盖 还能看这个井盖具体在什么地方\n\n8、近地轨道可视化 网址：https://platform.leolabs.space/visualization 感受地球低轨道太空的实际状态\n\n9、全球电力设施地图 网址：https://openinframap.org/ 该网站的地图显示全世界电力设施的位置，包括电厂、变电站、输电线等等，甚至还有风力发电机\n\n10、护照博物馆 网址：https://www.passportindex.org/ 这个网站集合了世界各地护照样式 还有办理程序 办理难易程度 等等\n\n11、随机谷歌街景 网址：https://randomstreetview.com/ 这个网站随机展示谷歌街景的照片，世界各地都有\n\n12、用户界面的历史 网址：https://history.user-interface.io/ 介绍了从 1973 年第一个支持 GUI 的操作系统到目前的 macOS 和 windows 的用户界面\n\n13、World flags 网址：https://world-flags.org/ 一个介绍世界各国国旗、含义和起源、国旗的起源和琐事的国旗武士媒体组合项目\n\n14、Dollar Street 网址：https://www.gapminder.org/dollar-street/ 按照收入展示各个国家中人们的生活\n\n15、深海 网址：https://neal.fun/deep-sea/ 海洋不同深度都有什么生物\n\n16、Go nomad 网址：https://nomadlist.com/ 这个网站是用来给游民们寻找适合自己的城市做参考，根据各种权威机构数据列出了各项评分\n\n17、手机博物馆 网址：https://www.mobilephonemuseum.com/catalogue 网站目前拥有来自 200 多个不同品牌的 2200 多个独立型号\n\n18、线上博物馆 网址：http://www.diaoyudao.org.cn/dydbwg.html/ 博物馆展陈内容包括历史图片、视频资料、文献资料、法律文件、实物模拟等\n\n19、地平说学会协会 网址：https://www.tfes.org/ 世界上有一些人认为地球是平面而非球体，这是他们的官网\n\n20、机械键盘博物馆 网址：https://scrapbox.io/MECHKEYS/ 收集了非常多设计独特的机械键盘\n\n21、全景故宫 网址：https://pano.dpm.org.cn/ 线上体验游览故宫，360° 查看各个宫殿，有文字介绍\n\n22、故宫博物院数字文物库 网址：https://digicol.dpm.org.cn/ 在线查看故宫博物院众多藏品，可根据分类和年代浏览\n\n23、千亿像素看中国 网址：http://bigpixel.cn/zh-CN.html/ 可浏览千亿像素的全景图片，观看一个城市的面貌\n\n24、核弹威力 网址：https://nuclearsecrecy.com/nukemap/ 选择某个核弹查看爆炸影响的范围大小\n\n25、地球时间线 网址：https://timelineofearth.com/ 滚动屏幕，查看地球从形成到今天的大致时间线\n\n26、克苏鲁公社 网址：https://www.cthulhuclub.com/ 克苏鲁公社为克苏鲁神话爱好者自发创建的克苏鲁神话相关资料网站\n\n27、中国历史照片 网址：https://www.hpcbristol.net/ 布里斯托大学开放中国影像数据库，提供 20,000 多张中国近代照片免费浏览\n\n28、ocearch 网址：https://www.ocearch.org/tracker/ 追踪大白鲨、虎鲸等海洋动物的实时位置\n\n29、知妖（中国妖怪百集） 网址：http://www.cbaigui.com/ 收集中国古今妖怪\n\n30、Little Big World 网址：https://www.littlebigworld.de/ Little Big World 使用移轴摄影、壮观的无人机摄影和惊人的延时，将地球上最美丽、最有趣的地方变成了可爱的微型模型\n\n31、地球模型 网址：https://3d-app.yunser.com/earth/ 网站默认模拟了地球自转运动，同时提供了大量的模拟操作，如查看太阳光照、昼夜平分面黄道面等\n\n32、极像素 网址：https://www.sigoo.com/ 超高像素看世界\n\n33、中国纪录片网 网址：http://www.docuchina.cn/ 国家级的纪录片资源，央视出品\n\n34、OEC.world 网址 https://oec.world/ 查询每个国家或地区的贸易数据，并用图文进行通俗解释\n\n35、波斯波利斯 网址：https://persepolis.getty.edu/ 波斯波利斯是古代波斯帝国的首都，现在已经是一片废墟了。这个页面还原了这座雄伟的帝国都城，重建了 3D 街景，让你在其中漫游\n\n36、卢浮宫藏品 网址：https://collections.louvre.fr/en/ 卢浮宫超过 48 万藏品电子化，可在线免费浏览\n\n37、中华珍宝馆 网址：https://g2.ltfc.net/ 在线的中国字画的博物馆\n\n38、地球旧照 网址：https://3d-app.yunser.com/plateMotion/ 一个可以查看远古时期的地貌、研究板块运动网站\n\n39、木材数据库 网址：https://www.wood-database.com/ 木材数据库。有详细的介绍，包括硬度排行等\n\n40、无限 3D 美术馆 网址：https://gallery.nowaythis.works/ 目前有 180 多万件艺术品的 3D 美术馆，每件艺术品都是来自 Reddit 的 r/Art 频道\n\n41、The Sea We Breathe 网址：https://www.bluemarinefoundation.com/the-sea-we-breathe/ 带你进入海底世界遨游，互动式的体验\n\n42、Webcamtaxi 网址：https://www.webcamtaxi.com/ 有图比 上面有很多 24 小时的摄像头直播频道，可以看到世界各地的实时状况。该网站就是收集这些频道，按照地区和内容分类\n\n43、苏联海报 网址：https://reddirect.ru/ 这个网站收藏了很多苏联时期的海报，很有年代感\n\n44、Artvee 网址：https://artvee.com/ 浏览和下载高分辨率的公共领域艺术品\n\n45、中国国家博物馆 VR 网址：http://www.chnmuseum.cn/Portals/0/web/vr/ 中国国家博物馆提供的 VR 场景，线上 360° 体验游览中国国家博物馆\n\n46、Earth Clock 网址：https://earthclock.cwandt.com/ 这个网站使用 Google Eerth 卫星照片，显示当前的数字时间\n\n47、模拟器博物馆 网址：http://www.famicn.com/ 在线运行电脑系统、学习机、游戏机\n\n48、Arch Daily 网址：https://www.archdaily.cn/cn/ 非常多设计奇特的建筑\n\n49、物种 2000 中国节点 网址：http://sp2000.org.cn/ 该网站建立和维护中国生物物种名录\n\n50、上海博物馆 网址：https://www.shanghaimuseum.net/mu/frontend/pg/index 在线浏览上海博物馆的藏品和博物馆内的三维场景，还提供 AR 功能，需下载上博 AR App 体验\n\n51、光污染地图 网址：https://www.lightpollutionmap.info/ 全球光污染地图，可查看某地光污染各种参数\n\n52、8values 中文版 网址：https://songyon.github.io/8valuescn/ 8values 是一个政治立场测试\n\n53、十年前的网页 网址：https://neal.fun/ten-years-ago/ 可以查看十年前美国的十几个著名网站是什么样子\n\n54、全球天气 网址：https://earth.nullschool.net/ 一个全球天气状况的视觉化网站，还有一个气象网站也不错：ttps://www.ventusky.com\n\n55、流星雨 网址：https://www.meteorshowers.org/ 以太空视角查看某个时间流星雨的形成\n\n56、古典音乐 网址：https://www.kunstderfuge.com/ 免费下载古典音乐（MIDI 格式），可按音乐家名称查询\n\n57、英特尔虚拟博物馆 网址：https://virtualmuseum.intel.com/ 官方网站，3D 虚拟参观英特尔公司的博物馆\n\n58、铅笔收藏馆 网址：https://brandnamepencils.com/ 网站收藏了几乎全球各地知名品牌的铅笔\n\n59、物流艺术 网址：https://logisticsartproject.com/ 记录了一个快递是怎样从斯德哥尔摩经过 37 天到达深圳的\n\n60、IDEA 网址：https://www.dialectsarchive.com/ 全球英语方言档案馆（不同国家不同地区的人说英语是什么口音）\n\n61、Exploratorium 网址：https://exploratorium.edu/ronh/age/ 科普网站，看看你在其它星球的岁数\n\n62、[audio]http://Archive.org Serendipity 网址：https://www.locserendipity.com/PushPlay.html/ 收集了很多过了版权保护期的音乐作品，按一下按钮，就会随机播放一段音乐\n\n63、FlightAware 网址：https://zh.flightaware.com/ 提供全球实时航班交通以及航空趋势等\n\n64、世界人口时钟 网址：https://countrymeters.info/cn/ 网站展示任何国家目前的人口的实时统计，出生，死亡，净迁移和人口增长\n\n65、观沧海 网址：https://www.ageeye.cn/ 以地图为线索，反映中国历史、 军事、 自然、 ⽂化等各⽅面的知识\n\n66、开源人物肖像 网址：http://www.facesofopensource.com/ 那些推动计算机**的开源程序员的肖像\n\n67、信聚网 网址：https://xinjh.info/ 网络有趣资源收集分享\n\n68、濒危声音博物馆 网址：http://savethesounds.info/ 收藏了一些消失的声音，比如打字机的击键声、点阵式打印机的打印声、Windows 95 的开机声\n\n69、指尖上 网址：https://www.zhijianshang.com/ 海量全面精美的 VR 全景旅游景点介绍，只需动动指尖就能通过虚拟现实深入景区内部，体验各地的美景风光\n\n70、全球海底光缆 网址：https://he.net/3d-map/ 这个网页提供了一个互动式的地球，上面有全世界海底光缆和骨干机房的位置\n\n71、韵典网 网址：https://ytenx.org/ 韵典网是一个综合的韵书查询工具，包含广韵、中原音韵、洪武正韵笺、分韵撮要和上古音系\n\n72、天空之城 网址：https://www.skypixel.com/ 无人机航拍照片和视频共享平台\n\n73、Gallerix 网址：https://gallerix.asia/ 在线博物馆，可以按画家或博物馆来查看油画\n\n74、荷兰国家博物馆 网址：https://www.rijksmuseum.nl/nl/ 可在线浏览荷兰国家博物馆大量珍贵的藏品\n\n75、Conserve the Sound 网址：https://www.conservethesound.de/ 老物件的声音博物馆，你可以听到打字机、手摇咖啡研磨机等物品的声音\n\n76、科普网站 网址：https://animagraffs.com/ 了解各种产品的原理\n\n77、百年纪念灯泡 网址：https://www.centennialbulb.org/cam.htm/ 展示已经亮了百年的灯泡\n\n78、环游世界 网址：https://www.airpano.org.cn/ 网站提供各个地区的全景图，三百六十度看世界\n\n79、四大名著 网址：http://www.sdmz.cn/ 网站提供了四大名著相关的电子书、音频、图片、地图等在线资源\n\n80、制服地图 网址：https://uniform.wingzero.tw/ Uniform Map 是一个让使用者可以从 Google 地图去查询学校制服的网站，想知道某所学校所穿的制服，用这网站就能轻松解决\n\n81、国际空间站 网址：https://www.google.com/maps/@29.5602853,95.0853914,2a,75y,212.04h,90t/data=!3m7!1e1!3m5!1szChzPIAn4RIAAAQvxgbyEg!2e0!3e5!7i10000!8i5000?shorturl=1/ Google 地图，可查看国际空间站内部环境\n\n82、飞机坠毁信息 网址：http://www.planecrashinfo.com/ 记录航空事故，包括地点、死亡人数、细节以及不寻常的事故、最后的话等\n\n83、熊猫频道 网址：https://www.ipanda.com/ 央视熊猫频道对大熊猫繁育、日常起居等的情况进行 24 小时近距离视频直播及点播\n\n84、享有海景的车站 网址：https://seaside-station.com/ 网站记录了日本非常多海边的火车站极其周边景色的照片\n\n85、中国古籍保护网 网址：http://www.nlc.cn/pcab/ 中国古籍保护网，可在线浏览古籍的电子版，如《金石圖說》\n\n86、Treeographer 网址：https://thetreeographer.com/archive/ 收集一些奇特的树\n\n87、乡音苑 网址：https://phonemica.net/ 收集来自全国各地的网友上传的方言故事，网站提供各种字幕不怕看不懂\n\n88、搜韵 网址：https://sou-yun.cn/ 搜韵网共收录约 90 万首古今诗词作品，其中近现代及之前的诗词作品约 83 万。\n\n89、世界建筑名录 网址：https://www.worldbuildingsdirectory.com/ 浏览来自世界各地的最具创新性的建筑\n\n90、书格子 网址：https://new.shuge.org/ 有品格的数字古籍图书馆\n\n91、10 万亿像素的夜空 网址：https://viewer.legacysurvey.org/ 浏览一张 10 万亿像素的图片，包含超过十亿个星系，覆盖整个天空的三分之一。\n\n92、网站设计博物馆 网址：https://www.webdesignmuseum.org/ 展出 1600 多个网站从 1991 到 2006 年主页的设计\n\n93、星辰协会 网址：http://thestarsetsociety.org/ 美国 Starset 乐队科研团队“Starset 协会”网站\n\n94、全历史 网址：https://www.allhistory.com/ 让用户沉浸在纵横开阔、左图右史的（历史、人文、社科等）知识海洋中\n\n95、风网 网址：https://www.windy.com/ 台风 暴雨观测\n\n96、100,000 Stars 网址：https://stars.chromeexperiments.com/ 璀璨星河一触即达，宇宙星系在线观赏(来自 Google 实验室)\n\n97、世界数字图书馆 网址：https://www.loc.gov/collections/ … ut-this-collection/ 网站免费提供使用珍贵图书、地图、影片与照片等服务\n\n98、世界地图 网址：http://www.onegreen.net/maps/m/world.htm/ 提供高清、可下载的世界地图，有各种版本，如行政图、世界地形、交通等\n\n99、蚂蚁网 网址：http://www.ants-china.com/ 东亚、东北亚、南亚及东南亚地区蚂蚁-全球最大的华语中文蚂蚁专业网站\n\n100、数字敦煌 网址：https://www.e-dunhuang.com/ 在线浏览敦煌，可浏览经典洞窟、经典壁画等","slug":"一百个有趣网址","published":1,"updated":"2023-06-08T08:51:56.311Z","comments":1,"layout":"post","photos":[],"link":"","_id":"climwsez20000mothhxh3bf2q","content":"<p>其中一些工具对于数据收集很有效 <span id=\"more\"></span></p>\r\n<p>1、实时地球 网址：https://zoom.earth/实时图像每 10\r\n分钟更新一次，提供风暴、天气预报、降水、火警等数据</p>\r\n<p>2、陕西博物馆 360 度实景浏览 网址：https://www.sxhm.com/online.html/\r\n线上参观陕西博物馆，360 度展示，共有五个展厅 100\r\n多个场景。可以网页浏览，也可以 VR 头盔浏览</p>\r\n<p>3、CyArk 网址：https://www.cyark.org/\r\n用专业的三维激光扫描技术数字化重现世界上最久远、最著名的古迹</p>\r\n<p>4、全球贸易数据分析 网址：http://globe.cid.harvard.edu/\r\n这个网站可以看到全球每一个国家在贸易方面的数据</p>\r\n<p>5、公共钢琴 网址：https://pianos.pub/ 收集了全世界 8,391\r\n架公共钢琴，你可以输入一个地点查找附近的钢琴</p>\r\n<p>6、天际网络摄像头 网址：https://www.skylinewebcams.com/\r\n观看世界各地景区的实时摄像头画面</p>\r\n<p>7、Manhole 网址：https://manhole.co.il/ 有非常多全世界各地有趣的井盖\r\n还能看这个井盖具体在什么地方</p>\r\n<p>8、近地轨道可视化 网址：https://platform.leolabs.space/visualization\r\n感受地球低轨道太空的实际状态</p>\r\n<p>9、全球电力设施地图 网址：https://openinframap.org/\r\n该网站的地图显示全世界电力设施的位置，包括电厂、变电站、输电线等等，甚至还有风力发电机</p>\r\n<p>10、护照博物馆 网址：https://www.passportindex.org/\r\n这个网站集合了世界各地护照样式 还有办理程序 办理难易程度 等等</p>\r\n<p>11、随机谷歌街景 网址：https://randomstreetview.com/\r\n这个网站随机展示谷歌街景的照片，世界各地都有</p>\r\n<p>12、用户界面的历史 网址：https://history.user-interface.io/ 介绍了从\r\n1973 年第一个支持 GUI 的操作系统到目前的 macOS 和 windows 的用户界面</p>\r\n<p>13、World flags 网址：https://world-flags.org/\r\n一个介绍世界各国国旗、含义和起源、国旗的起源和琐事的国旗武士媒体组合项目</p>\r\n<p>14、Dollar Street 网址：https://www.gapminder.org/dollar-street/\r\n按照收入展示各个国家中人们的生活</p>\r\n<p>15、深海 网址：https://neal.fun/deep-sea/\r\n海洋不同深度都有什么生物</p>\r\n<p>16、Go nomad 网址：https://nomadlist.com/\r\n这个网站是用来给游民们寻找适合自己的城市做参考，根据各种权威机构数据列出了各项评分</p>\r\n<p>17、手机博物馆 网址：https://www.mobilephonemuseum.com/catalogue\r\n网站目前拥有来自 200 多个不同品牌的 2200 多个独立型号</p>\r\n<p>18、线上博物馆 网址：http://www.diaoyudao.org.cn/dydbwg.html/\r\n博物馆展陈内容包括历史图片、视频资料、文献资料、法律文件、实物模拟等</p>\r\n<p>19、地平说学会协会 网址：https://www.tfes.org/\r\n世界上有一些人认为地球是平面而非球体，这是他们的官网</p>\r\n<p>20、机械键盘博物馆 网址：https://scrapbox.io/MECHKEYS/\r\n收集了非常多设计独特的机械键盘</p>\r\n<p>21、全景故宫 网址：https://pano.dpm.org.cn/ 线上体验游览故宫，360°\r\n查看各个宫殿，有文字介绍</p>\r\n<p>22、故宫博物院数字文物库 网址：https://digicol.dpm.org.cn/\r\n在线查看故宫博物院众多藏品，可根据分类和年代浏览</p>\r\n<p>23、千亿像素看中国 网址：http://bigpixel.cn/zh-CN.html/\r\n可浏览千亿像素的全景图片，观看一个城市的面貌</p>\r\n<p>24、核弹威力 网址：https://nuclearsecrecy.com/nukemap/\r\n选择某个核弹查看爆炸影响的范围大小</p>\r\n<p>25、地球时间线 网址：https://timelineofearth.com/\r\n滚动屏幕，查看地球从形成到今天的大致时间线</p>\r\n<p>26、克苏鲁公社 网址：https://www.cthulhuclub.com/\r\n克苏鲁公社为克苏鲁神话爱好者自发创建的克苏鲁神话相关资料网站</p>\r\n<p>27、中国历史照片 网址：https://www.hpcbristol.net/\r\n布里斯托大学开放中国影像数据库，提供 20,000 多张中国近代照片免费浏览</p>\r\n<p>28、ocearch 网址：https://www.ocearch.org/tracker/\r\n追踪大白鲨、虎鲸等海洋动物的实时位置</p>\r\n<p>29、知妖（中国妖怪百集） 网址：http://www.cbaigui.com/\r\n收集中国古今妖怪</p>\r\n<p>30、Little Big World 网址：https://www.littlebigworld.de/ Little Big\r\nWorld\r\n使用移轴摄影、壮观的无人机摄影和惊人的延时，将地球上最美丽、最有趣的地方变成了可爱的微型模型</p>\r\n<p>31、地球模型 网址：https://3d-app.yunser.com/earth/\r\n网站默认模拟了地球自转运动，同时提供了大量的模拟操作，如查看太阳光照、昼夜平分面黄道面等</p>\r\n<p>32、极像素 网址：https://www.sigoo.com/ 超高像素看世界</p>\r\n<p>33、中国纪录片网 网址：http://www.docuchina.cn/\r\n国家级的纪录片资源，央视出品</p>\r\n<p>34、OEC.world 网址 https://oec.world/\r\n查询每个国家或地区的贸易数据，并用图文进行通俗解释</p>\r\n<p>35、波斯波利斯 网址：https://persepolis.getty.edu/\r\n波斯波利斯是古代波斯帝国的首都，现在已经是一片废墟了。这个页面还原了这座雄伟的帝国都城，重建了\r\n3D 街景，让你在其中漫游</p>\r\n<p>36、卢浮宫藏品 网址：https://collections.louvre.fr/en/ 卢浮宫超过 48\r\n万藏品电子化，可在线免费浏览</p>\r\n<p>37、中华珍宝馆 网址：https://g2.ltfc.net/ 在线的中国字画的博物馆</p>\r\n<p>38、地球旧照 网址：https://3d-app.yunser.com/plateMotion/\r\n一个可以查看远古时期的地貌、研究板块运动网站</p>\r\n<p>39、木材数据库 网址：https://www.wood-database.com/\r\n木材数据库。有详细的介绍，包括硬度排行等</p>\r\n<p>40、无限 3D 美术馆 网址：https://gallery.nowaythis.works/ 目前有 180\r\n多万件艺术品的 3D 美术馆，每件艺术品都是来自 Reddit 的 r/Art 频道</p>\r\n<p>41、The Sea We Breathe\r\n网址：https://www.bluemarinefoundation.com/the-sea-we-breathe/\r\n带你进入海底世界遨游，互动式的体验</p>\r\n<p>42、Webcamtaxi 网址：https://www.webcamtaxi.com/ 有图比 上面有很多 24\r\n小时的摄像头直播频道，可以看到世界各地的实时状况。该网站就是收集这些频道，按照地区和内容分类</p>\r\n<p>43、苏联海报 网址：https://reddirect.ru/\r\n这个网站收藏了很多苏联时期的海报，很有年代感</p>\r\n<p>44、Artvee 网址：https://artvee.com/\r\n浏览和下载高分辨率的公共领域艺术品</p>\r\n<p>45、中国国家博物馆 VR 网址：http://www.chnmuseum.cn/Portals/0/web/vr/\r\n中国国家博物馆提供的 VR 场景，线上 360° 体验游览中国国家博物馆</p>\r\n<p>46、Earth Clock 网址：https://earthclock.cwandt.com/ 这个网站使用\r\nGoogle Eerth 卫星照片，显示当前的数字时间</p>\r\n<p>47、模拟器博物馆 网址：http://www.famicn.com/\r\n在线运行电脑系统、学习机、游戏机</p>\r\n<p>48、Arch Daily 网址：https://www.archdaily.cn/cn/\r\n非常多设计奇特的建筑</p>\r\n<p>49、物种 2000 中国节点 网址：http://sp2000.org.cn/\r\n该网站建立和维护中国生物物种名录</p>\r\n<p>50、上海博物馆\r\n网址：https://www.shanghaimuseum.net/mu/frontend/pg/index\r\n在线浏览上海博物馆的藏品和博物馆内的三维场景，还提供 AR 功能，需下载上博\r\nAR App 体验</p>\r\n<p>51、光污染地图 网址：https://www.lightpollutionmap.info/\r\n全球光污染地图，可查看某地光污染各种参数</p>\r\n<p>52、8values 中文版 网址：https://songyon.github.io/8valuescn/ 8values\r\n是一个政治立场测试</p>\r\n<p>53、十年前的网页 网址：https://neal.fun/ten-years-ago/\r\n可以查看十年前美国的十几个著名网站是什么样子</p>\r\n<p>54、全球天气 网址：https://earth.nullschool.net/\r\n一个全球天气状况的视觉化网站，还有一个气象网站也不错：ttps://www.ventusky.com</p>\r\n<p>55、流星雨 网址：https://www.meteorshowers.org/\r\n以太空视角查看某个时间流星雨的形成</p>\r\n<p>56、古典音乐 网址：https://www.kunstderfuge.com/\r\n免费下载古典音乐（MIDI 格式），可按音乐家名称查询</p>\r\n<p>57、英特尔虚拟博物馆 网址：https://virtualmuseum.intel.com/\r\n官方网站，3D 虚拟参观英特尔公司的博物馆</p>\r\n<p>58、铅笔收藏馆 网址：https://brandnamepencils.com/\r\n网站收藏了几乎全球各地知名品牌的铅笔</p>\r\n<p>59、物流艺术 网址：https://logisticsartproject.com/\r\n记录了一个快递是怎样从斯德哥尔摩经过 37 天到达深圳的</p>\r\n<p>60、IDEA 网址：https://www.dialectsarchive.com/\r\n全球英语方言档案馆（不同国家不同地区的人说英语是什么口音）</p>\r\n<p>61、Exploratorium 网址：https://exploratorium.edu/ronh/age/\r\n科普网站，看看你在其它星球的岁数</p>\r\n<p>62、[audio]http://Archive.org Serendipity\r\n网址：https://www.locserendipity.com/PushPlay.html/\r\n收集了很多过了版权保护期的音乐作品，按一下按钮，就会随机播放一段音乐</p>\r\n<p>63、FlightAware 网址：https://zh.flightaware.com/\r\n提供全球实时航班交通以及航空趋势等</p>\r\n<p>64、世界人口时钟 网址：https://countrymeters.info/cn/\r\n网站展示任何国家目前的人口的实时统计，出生，死亡，净迁移和人口增长</p>\r\n<p>65、观沧海 网址：https://www.ageeye.cn/ 以地图为线索，反映中国历史、\r\n军事、 自然、 ⽂化等各⽅面的知识</p>\r\n<p>66、开源人物肖像 网址：http://www.facesofopensource.com/\r\n那些推动计算机**的开源程序员的肖像</p>\r\n<p>67、信聚网 网址：https://xinjh.info/ 网络有趣资源收集分享</p>\r\n<p>68、濒危声音博物馆 网址：http://savethesounds.info/\r\n收藏了一些消失的声音，比如打字机的击键声、点阵式打印机的打印声、Windows\r\n95 的开机声</p>\r\n<p>69、指尖上 网址：https://www.zhijianshang.com/ 海量全面精美的 VR\r\n全景旅游景点介绍，只需动动指尖就能通过虚拟现实深入景区内部，体验各地的美景风光</p>\r\n<p>70、全球海底光缆 网址：https://he.net/3d-map/\r\n这个网页提供了一个互动式的地球，上面有全世界海底光缆和骨干机房的位置</p>\r\n<p>71、韵典网 网址：https://ytenx.org/\r\n韵典网是一个综合的韵书查询工具，包含广韵、中原音韵、洪武正韵笺、分韵撮要和上古音系</p>\r\n<p>72、天空之城 网址：https://www.skypixel.com/\r\n无人机航拍照片和视频共享平台</p>\r\n<p>73、Gallerix 网址：https://gallerix.asia/\r\n在线博物馆，可以按画家或博物馆来查看油画</p>\r\n<p>74、荷兰国家博物馆 网址：https://www.rijksmuseum.nl/nl/\r\n可在线浏览荷兰国家博物馆大量珍贵的藏品</p>\r\n<p>75、Conserve the Sound 网址：https://www.conservethesound.de/\r\n老物件的声音博物馆，你可以听到打字机、手摇咖啡研磨机等物品的声音</p>\r\n<p>76、科普网站 网址：https://animagraffs.com/ 了解各种产品的原理</p>\r\n<p>77、百年纪念灯泡 网址：https://www.centennialbulb.org/cam.htm/\r\n展示已经亮了百年的灯泡</p>\r\n<p>78、环游世界 网址：https://www.airpano.org.cn/\r\n网站提供各个地区的全景图，三百六十度看世界</p>\r\n<p>79、四大名著 网址：http://www.sdmz.cn/\r\n网站提供了四大名著相关的电子书、音频、图片、地图等在线资源</p>\r\n<p>80、制服地图 网址：https://uniform.wingzero.tw/ Uniform Map\r\n是一个让使用者可以从 Google\r\n地图去查询学校制服的网站，想知道某所学校所穿的制服，用这网站就能轻松解决</p>\r\n<p>81、国际空间站 网址：https://www.google.com/maps/<span\r\nclass=\"citation\"\r\ndata-cites=\"29.5602853\">@29.5602853</span>,95.0853914,2a,75y,212.04h,90t/data=!3m7!1e1!3m5!1szChzPIAn4RIAAAQvxgbyEg!2e0!3e5!7i10000!8i5000?shorturl=1/\r\nGoogle 地图，可查看国际空间站内部环境</p>\r\n<p>82、飞机坠毁信息 网址：http://www.planecrashinfo.com/\r\n记录航空事故，包括地点、死亡人数、细节以及不寻常的事故、最后的话等</p>\r\n<p>83、熊猫频道 网址：https://www.ipanda.com/\r\n央视熊猫频道对大熊猫繁育、日常起居等的情况进行 24\r\n小时近距离视频直播及点播</p>\r\n<p>84、享有海景的车站 网址：https://seaside-station.com/\r\n网站记录了日本非常多海边的火车站极其周边景色的照片</p>\r\n<p>85、中国古籍保护网 网址：http://www.nlc.cn/pcab/\r\n中国古籍保护网，可在线浏览古籍的电子版，如《金石圖說》</p>\r\n<p>86、Treeographer 网址：https://thetreeographer.com/archive/\r\n收集一些奇特的树</p>\r\n<p>87、乡音苑 网址：https://phonemica.net/\r\n收集来自全国各地的网友上传的方言故事，网站提供各种字幕不怕看不懂</p>\r\n<p>88、搜韵 网址：https://sou-yun.cn/ 搜韵网共收录约 90\r\n万首古今诗词作品，其中近现代及之前的诗词作品约 83 万。</p>\r\n<p>89、世界建筑名录 网址：https://www.worldbuildingsdirectory.com/\r\n浏览来自世界各地的最具创新性的建筑</p>\r\n<p>90、书格子 网址：https://new.shuge.org/ 有品格的数字古籍图书馆</p>\r\n<p>91、10 万亿像素的夜空 网址：https://viewer.legacysurvey.org/ 浏览一张\r\n10 万亿像素的图片，包含超过十亿个星系，覆盖整个天空的三分之一。</p>\r\n<p>92、网站设计博物馆 网址：https://www.webdesignmuseum.org/ 展出 1600\r\n多个网站从 1991 到 2006 年主页的设计</p>\r\n<p>93、星辰协会 网址：http://thestarsetsociety.org/ 美国 Starset\r\n乐队科研团队“Starset 协会”网站</p>\r\n<p>94、全历史 网址：https://www.allhistory.com/\r\n让用户沉浸在纵横开阔、左图右史的（历史、人文、社科等）知识海洋中</p>\r\n<p>95、风网 网址：https://www.windy.com/ 台风 暴雨观测</p>\r\n<p>96、100,000 Stars 网址：https://stars.chromeexperiments.com/\r\n璀璨星河一触即达，宇宙星系在线观赏(来自 Google 实验室)</p>\r\n<p>97、世界数字图书馆 网址：https://www.loc.gov/collections/ …\r\nut-this-collection/ 网站免费提供使用珍贵图书、地图、影片与照片等服务</p>\r\n<p>98、世界地图 网址：http://www.onegreen.net/maps/m/world.htm/\r\n提供高清、可下载的世界地图，有各种版本，如行政图、世界地形、交通等</p>\r\n<p>99、蚂蚁网 网址：http://www.ants-china.com/\r\n东亚、东北亚、南亚及东南亚地区蚂蚁-全球最大的华语中文蚂蚁专业网站</p>\r\n<p>100、数字敦煌 网址：https://www.e-dunhuang.com/\r\n在线浏览敦煌，可浏览经典洞窟、经典壁画等</p>\r\n","site":{"data":{}},"excerpt":"<p>其中一些工具对于数据收集很有效","more":"</p>\r\n<p>1、实时地球 网址：https://zoom.earth/实时图像每 10\r\n分钟更新一次，提供风暴、天气预报、降水、火警等数据</p>\r\n<p>2、陕西博物馆 360 度实景浏览 网址：https://www.sxhm.com/online.html/\r\n线上参观陕西博物馆，360 度展示，共有五个展厅 100\r\n多个场景。可以网页浏览，也可以 VR 头盔浏览</p>\r\n<p>3、CyArk 网址：https://www.cyark.org/\r\n用专业的三维激光扫描技术数字化重现世界上最久远、最著名的古迹</p>\r\n<p>4、全球贸易数据分析 网址：http://globe.cid.harvard.edu/\r\n这个网站可以看到全球每一个国家在贸易方面的数据</p>\r\n<p>5、公共钢琴 网址：https://pianos.pub/ 收集了全世界 8,391\r\n架公共钢琴，你可以输入一个地点查找附近的钢琴</p>\r\n<p>6、天际网络摄像头 网址：https://www.skylinewebcams.com/\r\n观看世界各地景区的实时摄像头画面</p>\r\n<p>7、Manhole 网址：https://manhole.co.il/ 有非常多全世界各地有趣的井盖\r\n还能看这个井盖具体在什么地方</p>\r\n<p>8、近地轨道可视化 网址：https://platform.leolabs.space/visualization\r\n感受地球低轨道太空的实际状态</p>\r\n<p>9、全球电力设施地图 网址：https://openinframap.org/\r\n该网站的地图显示全世界电力设施的位置，包括电厂、变电站、输电线等等，甚至还有风力发电机</p>\r\n<p>10、护照博物馆 网址：https://www.passportindex.org/\r\n这个网站集合了世界各地护照样式 还有办理程序 办理难易程度 等等</p>\r\n<p>11、随机谷歌街景 网址：https://randomstreetview.com/\r\n这个网站随机展示谷歌街景的照片，世界各地都有</p>\r\n<p>12、用户界面的历史 网址：https://history.user-interface.io/ 介绍了从\r\n1973 年第一个支持 GUI 的操作系统到目前的 macOS 和 windows 的用户界面</p>\r\n<p>13、World flags 网址：https://world-flags.org/\r\n一个介绍世界各国国旗、含义和起源、国旗的起源和琐事的国旗武士媒体组合项目</p>\r\n<p>14、Dollar Street 网址：https://www.gapminder.org/dollar-street/\r\n按照收入展示各个国家中人们的生活</p>\r\n<p>15、深海 网址：https://neal.fun/deep-sea/\r\n海洋不同深度都有什么生物</p>\r\n<p>16、Go nomad 网址：https://nomadlist.com/\r\n这个网站是用来给游民们寻找适合自己的城市做参考，根据各种权威机构数据列出了各项评分</p>\r\n<p>17、手机博物馆 网址：https://www.mobilephonemuseum.com/catalogue\r\n网站目前拥有来自 200 多个不同品牌的 2200 多个独立型号</p>\r\n<p>18、线上博物馆 网址：http://www.diaoyudao.org.cn/dydbwg.html/\r\n博物馆展陈内容包括历史图片、视频资料、文献资料、法律文件、实物模拟等</p>\r\n<p>19、地平说学会协会 网址：https://www.tfes.org/\r\n世界上有一些人认为地球是平面而非球体，这是他们的官网</p>\r\n<p>20、机械键盘博物馆 网址：https://scrapbox.io/MECHKEYS/\r\n收集了非常多设计独特的机械键盘</p>\r\n<p>21、全景故宫 网址：https://pano.dpm.org.cn/ 线上体验游览故宫，360°\r\n查看各个宫殿，有文字介绍</p>\r\n<p>22、故宫博物院数字文物库 网址：https://digicol.dpm.org.cn/\r\n在线查看故宫博物院众多藏品，可根据分类和年代浏览</p>\r\n<p>23、千亿像素看中国 网址：http://bigpixel.cn/zh-CN.html/\r\n可浏览千亿像素的全景图片，观看一个城市的面貌</p>\r\n<p>24、核弹威力 网址：https://nuclearsecrecy.com/nukemap/\r\n选择某个核弹查看爆炸影响的范围大小</p>\r\n<p>25、地球时间线 网址：https://timelineofearth.com/\r\n滚动屏幕，查看地球从形成到今天的大致时间线</p>\r\n<p>26、克苏鲁公社 网址：https://www.cthulhuclub.com/\r\n克苏鲁公社为克苏鲁神话爱好者自发创建的克苏鲁神话相关资料网站</p>\r\n<p>27、中国历史照片 网址：https://www.hpcbristol.net/\r\n布里斯托大学开放中国影像数据库，提供 20,000 多张中国近代照片免费浏览</p>\r\n<p>28、ocearch 网址：https://www.ocearch.org/tracker/\r\n追踪大白鲨、虎鲸等海洋动物的实时位置</p>\r\n<p>29、知妖（中国妖怪百集） 网址：http://www.cbaigui.com/\r\n收集中国古今妖怪</p>\r\n<p>30、Little Big World 网址：https://www.littlebigworld.de/ Little Big\r\nWorld\r\n使用移轴摄影、壮观的无人机摄影和惊人的延时，将地球上最美丽、最有趣的地方变成了可爱的微型模型</p>\r\n<p>31、地球模型 网址：https://3d-app.yunser.com/earth/\r\n网站默认模拟了地球自转运动，同时提供了大量的模拟操作，如查看太阳光照、昼夜平分面黄道面等</p>\r\n<p>32、极像素 网址：https://www.sigoo.com/ 超高像素看世界</p>\r\n<p>33、中国纪录片网 网址：http://www.docuchina.cn/\r\n国家级的纪录片资源，央视出品</p>\r\n<p>34、OEC.world 网址 https://oec.world/\r\n查询每个国家或地区的贸易数据，并用图文进行通俗解释</p>\r\n<p>35、波斯波利斯 网址：https://persepolis.getty.edu/\r\n波斯波利斯是古代波斯帝国的首都，现在已经是一片废墟了。这个页面还原了这座雄伟的帝国都城，重建了\r\n3D 街景，让你在其中漫游</p>\r\n<p>36、卢浮宫藏品 网址：https://collections.louvre.fr/en/ 卢浮宫超过 48\r\n万藏品电子化，可在线免费浏览</p>\r\n<p>37、中华珍宝馆 网址：https://g2.ltfc.net/ 在线的中国字画的博物馆</p>\r\n<p>38、地球旧照 网址：https://3d-app.yunser.com/plateMotion/\r\n一个可以查看远古时期的地貌、研究板块运动网站</p>\r\n<p>39、木材数据库 网址：https://www.wood-database.com/\r\n木材数据库。有详细的介绍，包括硬度排行等</p>\r\n<p>40、无限 3D 美术馆 网址：https://gallery.nowaythis.works/ 目前有 180\r\n多万件艺术品的 3D 美术馆，每件艺术品都是来自 Reddit 的 r/Art 频道</p>\r\n<p>41、The Sea We Breathe\r\n网址：https://www.bluemarinefoundation.com/the-sea-we-breathe/\r\n带你进入海底世界遨游，互动式的体验</p>\r\n<p>42、Webcamtaxi 网址：https://www.webcamtaxi.com/ 有图比 上面有很多 24\r\n小时的摄像头直播频道，可以看到世界各地的实时状况。该网站就是收集这些频道，按照地区和内容分类</p>\r\n<p>43、苏联海报 网址：https://reddirect.ru/\r\n这个网站收藏了很多苏联时期的海报，很有年代感</p>\r\n<p>44、Artvee 网址：https://artvee.com/\r\n浏览和下载高分辨率的公共领域艺术品</p>\r\n<p>45、中国国家博物馆 VR 网址：http://www.chnmuseum.cn/Portals/0/web/vr/\r\n中国国家博物馆提供的 VR 场景，线上 360° 体验游览中国国家博物馆</p>\r\n<p>46、Earth Clock 网址：https://earthclock.cwandt.com/ 这个网站使用\r\nGoogle Eerth 卫星照片，显示当前的数字时间</p>\r\n<p>47、模拟器博物馆 网址：http://www.famicn.com/\r\n在线运行电脑系统、学习机、游戏机</p>\r\n<p>48、Arch Daily 网址：https://www.archdaily.cn/cn/\r\n非常多设计奇特的建筑</p>\r\n<p>49、物种 2000 中国节点 网址：http://sp2000.org.cn/\r\n该网站建立和维护中国生物物种名录</p>\r\n<p>50、上海博物馆\r\n网址：https://www.shanghaimuseum.net/mu/frontend/pg/index\r\n在线浏览上海博物馆的藏品和博物馆内的三维场景，还提供 AR 功能，需下载上博\r\nAR App 体验</p>\r\n<p>51、光污染地图 网址：https://www.lightpollutionmap.info/\r\n全球光污染地图，可查看某地光污染各种参数</p>\r\n<p>52、8values 中文版 网址：https://songyon.github.io/8valuescn/ 8values\r\n是一个政治立场测试</p>\r\n<p>53、十年前的网页 网址：https://neal.fun/ten-years-ago/\r\n可以查看十年前美国的十几个著名网站是什么样子</p>\r\n<p>54、全球天气 网址：https://earth.nullschool.net/\r\n一个全球天气状况的视觉化网站，还有一个气象网站也不错：ttps://www.ventusky.com</p>\r\n<p>55、流星雨 网址：https://www.meteorshowers.org/\r\n以太空视角查看某个时间流星雨的形成</p>\r\n<p>56、古典音乐 网址：https://www.kunstderfuge.com/\r\n免费下载古典音乐（MIDI 格式），可按音乐家名称查询</p>\r\n<p>57、英特尔虚拟博物馆 网址：https://virtualmuseum.intel.com/\r\n官方网站，3D 虚拟参观英特尔公司的博物馆</p>\r\n<p>58、铅笔收藏馆 网址：https://brandnamepencils.com/\r\n网站收藏了几乎全球各地知名品牌的铅笔</p>\r\n<p>59、物流艺术 网址：https://logisticsartproject.com/\r\n记录了一个快递是怎样从斯德哥尔摩经过 37 天到达深圳的</p>\r\n<p>60、IDEA 网址：https://www.dialectsarchive.com/\r\n全球英语方言档案馆（不同国家不同地区的人说英语是什么口音）</p>\r\n<p>61、Exploratorium 网址：https://exploratorium.edu/ronh/age/\r\n科普网站，看看你在其它星球的岁数</p>\r\n<p>62、[audio]http://Archive.org Serendipity\r\n网址：https://www.locserendipity.com/PushPlay.html/\r\n收集了很多过了版权保护期的音乐作品，按一下按钮，就会随机播放一段音乐</p>\r\n<p>63、FlightAware 网址：https://zh.flightaware.com/\r\n提供全球实时航班交通以及航空趋势等</p>\r\n<p>64、世界人口时钟 网址：https://countrymeters.info/cn/\r\n网站展示任何国家目前的人口的实时统计，出生，死亡，净迁移和人口增长</p>\r\n<p>65、观沧海 网址：https://www.ageeye.cn/ 以地图为线索，反映中国历史、\r\n军事、 自然、 ⽂化等各⽅面的知识</p>\r\n<p>66、开源人物肖像 网址：http://www.facesofopensource.com/\r\n那些推动计算机**的开源程序员的肖像</p>\r\n<p>67、信聚网 网址：https://xinjh.info/ 网络有趣资源收集分享</p>\r\n<p>68、濒危声音博物馆 网址：http://savethesounds.info/\r\n收藏了一些消失的声音，比如打字机的击键声、点阵式打印机的打印声、Windows\r\n95 的开机声</p>\r\n<p>69、指尖上 网址：https://www.zhijianshang.com/ 海量全面精美的 VR\r\n全景旅游景点介绍，只需动动指尖就能通过虚拟现实深入景区内部，体验各地的美景风光</p>\r\n<p>70、全球海底光缆 网址：https://he.net/3d-map/\r\n这个网页提供了一个互动式的地球，上面有全世界海底光缆和骨干机房的位置</p>\r\n<p>71、韵典网 网址：https://ytenx.org/\r\n韵典网是一个综合的韵书查询工具，包含广韵、中原音韵、洪武正韵笺、分韵撮要和上古音系</p>\r\n<p>72、天空之城 网址：https://www.skypixel.com/\r\n无人机航拍照片和视频共享平台</p>\r\n<p>73、Gallerix 网址：https://gallerix.asia/\r\n在线博物馆，可以按画家或博物馆来查看油画</p>\r\n<p>74、荷兰国家博物馆 网址：https://www.rijksmuseum.nl/nl/\r\n可在线浏览荷兰国家博物馆大量珍贵的藏品</p>\r\n<p>75、Conserve the Sound 网址：https://www.conservethesound.de/\r\n老物件的声音博物馆，你可以听到打字机、手摇咖啡研磨机等物品的声音</p>\r\n<p>76、科普网站 网址：https://animagraffs.com/ 了解各种产品的原理</p>\r\n<p>77、百年纪念灯泡 网址：https://www.centennialbulb.org/cam.htm/\r\n展示已经亮了百年的灯泡</p>\r\n<p>78、环游世界 网址：https://www.airpano.org.cn/\r\n网站提供各个地区的全景图，三百六十度看世界</p>\r\n<p>79、四大名著 网址：http://www.sdmz.cn/\r\n网站提供了四大名著相关的电子书、音频、图片、地图等在线资源</p>\r\n<p>80、制服地图 网址：https://uniform.wingzero.tw/ Uniform Map\r\n是一个让使用者可以从 Google\r\n地图去查询学校制服的网站，想知道某所学校所穿的制服，用这网站就能轻松解决</p>\r\n<p>81、国际空间站 网址：https://www.google.com/maps/<span\r\nclass=\"citation\"\r\ndata-cites=\"29.5602853\">@29.5602853</span>,95.0853914,2a,75y,212.04h,90t/data=!3m7!1e1!3m5!1szChzPIAn4RIAAAQvxgbyEg!2e0!3e5!7i10000!8i5000?shorturl=1/\r\nGoogle 地图，可查看国际空间站内部环境</p>\r\n<p>82、飞机坠毁信息 网址：http://www.planecrashinfo.com/\r\n记录航空事故，包括地点、死亡人数、细节以及不寻常的事故、最后的话等</p>\r\n<p>83、熊猫频道 网址：https://www.ipanda.com/\r\n央视熊猫频道对大熊猫繁育、日常起居等的情况进行 24\r\n小时近距离视频直播及点播</p>\r\n<p>84、享有海景的车站 网址：https://seaside-station.com/\r\n网站记录了日本非常多海边的火车站极其周边景色的照片</p>\r\n<p>85、中国古籍保护网 网址：http://www.nlc.cn/pcab/\r\n中国古籍保护网，可在线浏览古籍的电子版，如《金石圖說》</p>\r\n<p>86、Treeographer 网址：https://thetreeographer.com/archive/\r\n收集一些奇特的树</p>\r\n<p>87、乡音苑 网址：https://phonemica.net/\r\n收集来自全国各地的网友上传的方言故事，网站提供各种字幕不怕看不懂</p>\r\n<p>88、搜韵 网址：https://sou-yun.cn/ 搜韵网共收录约 90\r\n万首古今诗词作品，其中近现代及之前的诗词作品约 83 万。</p>\r\n<p>89、世界建筑名录 网址：https://www.worldbuildingsdirectory.com/\r\n浏览来自世界各地的最具创新性的建筑</p>\r\n<p>90、书格子 网址：https://new.shuge.org/ 有品格的数字古籍图书馆</p>\r\n<p>91、10 万亿像素的夜空 网址：https://viewer.legacysurvey.org/ 浏览一张\r\n10 万亿像素的图片，包含超过十亿个星系，覆盖整个天空的三分之一。</p>\r\n<p>92、网站设计博物馆 网址：https://www.webdesignmuseum.org/ 展出 1600\r\n多个网站从 1991 到 2006 年主页的设计</p>\r\n<p>93、星辰协会 网址：http://thestarsetsociety.org/ 美国 Starset\r\n乐队科研团队“Starset 协会”网站</p>\r\n<p>94、全历史 网址：https://www.allhistory.com/\r\n让用户沉浸在纵横开阔、左图右史的（历史、人文、社科等）知识海洋中</p>\r\n<p>95、风网 网址：https://www.windy.com/ 台风 暴雨观测</p>\r\n<p>96、100,000 Stars 网址：https://stars.chromeexperiments.com/\r\n璀璨星河一触即达，宇宙星系在线观赏(来自 Google 实验室)</p>\r\n<p>97、世界数字图书馆 网址：https://www.loc.gov/collections/ …\r\nut-this-collection/ 网站免费提供使用珍贵图书、地图、影片与照片等服务</p>\r\n<p>98、世界地图 网址：http://www.onegreen.net/maps/m/world.htm/\r\n提供高清、可下载的世界地图，有各种版本，如行政图、世界地形、交通等</p>\r\n<p>99、蚂蚁网 网址：http://www.ants-china.com/\r\n东亚、东北亚、南亚及东南亚地区蚂蚁-全球最大的华语中文蚂蚁专业网站</p>\r\n<p>100、数字敦煌 网址：https://www.e-dunhuang.com/\r\n在线浏览敦煌，可浏览经典洞窟、经典壁画等</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cldmyctlr0001hgthg1w4dvfv","category_id":"cldmyctlx0003hgth415o9psw","_id":"cldmyctm00006hgthd2w41r0p"},{"post_id":"cldn2fmhs0000o0thdal9eebr","category_id":"cldmyctlx0003hgth415o9psw","_id":"cldn2fmi20002o0th4rs9hr2u"},{"post_id":"cldvhpeur0000c8th4xc98oby","category_id":"cldmyctlx0003hgth415o9psw","_id":"cldvhpev00002c8thdtwi85a4"},{"post_id":"clfrt1xpt0000k8th3mmhfrun","category_id":"cldmyctlx0003hgth415o9psw","_id":"clfrt1xq10002k8thgo410ov4"},{"post_id":"clh7g90o300004gthg2sneu4a","category_id":"cldmyctlx0003hgth415o9psw","_id":"clh7g90oc00024gthbwsn6arz"},{"post_id":"climwsez20000mothhxh3bf2q","category_id":"climwhwjh0001k8thdkdcdlmw","_id":"climwseza0002moth8kcheegp"}],"PostTag":[{"post_id":"cldmyctlr0001hgthg1w4dvfv","tag_id":"cldmyctly0004hgthhwyq0he5","_id":"cldmyctm10007hgth9zvo0xlh"},{"post_id":"cldmyctlr0001hgthg1w4dvfv","tag_id":"cldmyctm00005hgth3h0b8v32","_id":"cldmyctm10008hgthdl0e8nyz"},{"post_id":"cldn2fmhs0000o0thdal9eebr","tag_id":"cldn2fmi00001o0thg201hobn","_id":"cldn2fmi30003o0thcu0j8b45"},{"post_id":"cldvhpeur0000c8th4xc98oby","tag_id":"cldvhpeux0001c8th2j677koq","_id":"cldvhpev10004c8thev549xjx"},{"post_id":"cldvhpeur0000c8th4xc98oby","tag_id":"cldvhpev00003c8thbjubfb66","_id":"cldvhpev10005c8th77lnh9d5"},{"post_id":"clfrt1xpt0000k8th3mmhfrun","tag_id":"clfrt1xpz0001k8thafvk2z5r","_id":"clfrt1xq20004k8th7w7yaw1e"},{"post_id":"clfrt1xpt0000k8th3mmhfrun","tag_id":"clfrt1xq10003k8thgc8k90zj","_id":"clfrt1xq20005k8thftq30hw5"},{"post_id":"clh7g90o300004gthg2sneu4a","tag_id":"clh7g90o900014gthfw9p59z9","_id":"clh7g90oc00034gthbeji52f5"},{"post_id":"climwsez20000mothhxh3bf2q","tag_id":"climwhwjj0002k8theahjgmjx","_id":"climwseza0001moth1a6u1n9f"}],"Tag":[{"name":"GEE","_id":"cldmyctly0004hgthhwyq0he5"},{"name":"GEE_learn","_id":"cldmyctm00005hgth3h0b8v32"},{"name":"博客","_id":"cldn2fmi00001o0thg201hobn"},{"name":"docker","_id":"cldvhpeux0001c8th2j677koq"},{"name":"portainer","_id":"cldvhpev00003c8thbjubfb66"},{"name":"linux","_id":"clfrt1xpz0001k8thafvk2z5r"},{"name":"pytorch","_id":"clfrt1xq10003k8thgc8k90zj"},{"name":"服务器","_id":"clh7g90o900014gthfw9p59z9"},{"name":"网址","_id":"climwhwjj0002k8theahjgmjx"}]}}