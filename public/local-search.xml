<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>100个有趣的网址</title>
    <link href="/2023/06/08/%E4%B8%80%E7%99%BE%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%BD%91%E5%9D%80/"/>
    <url>/2023/06/08/%E4%B8%80%E7%99%BE%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%BD%91%E5%9D%80/</url>
    
    <content type="html"><![CDATA[<p>其中一些工具对于数据收集很有效 <span id="more"></span></p><p>1、实时地球 网址：https://zoom.earth/实时图像每 10分钟更新一次，提供风暴、天气预报、降水、火警等数据</p><p>2、陕西博物馆 360 度实景浏览 网址：https://www.sxhm.com/online.html/线上参观陕西博物馆，360 度展示，共有五个展厅 100多个场景。可以网页浏览，也可以 VR 头盔浏览</p><p>3、CyArk 网址：https://www.cyark.org/用专业的三维激光扫描技术数字化重现世界上最久远、最著名的古迹</p><p>4、全球贸易数据分析 网址：http://globe.cid.harvard.edu/这个网站可以看到全球每一个国家在贸易方面的数据</p><p>5、公共钢琴 网址：https://pianos.pub/ 收集了全世界 8,391架公共钢琴，你可以输入一个地点查找附近的钢琴</p><p>6、天际网络摄像头 网址：https://www.skylinewebcams.com/观看世界各地景区的实时摄像头画面</p><p>7、Manhole 网址：https://manhole.co.il/ 有非常多全世界各地有趣的井盖还能看这个井盖具体在什么地方</p><p>8、近地轨道可视化 网址：https://platform.leolabs.space/visualization感受地球低轨道太空的实际状态</p><p>9、全球电力设施地图 网址：https://openinframap.org/该网站的地图显示全世界电力设施的位置，包括电厂、变电站、输电线等等，甚至还有风力发电机</p><p>10、护照博物馆 网址：https://www.passportindex.org/这个网站集合了世界各地护照样式 还有办理程序 办理难易程度 等等</p><p>11、随机谷歌街景 网址：https://randomstreetview.com/这个网站随机展示谷歌街景的照片，世界各地都有</p><p>12、用户界面的历史 网址：https://history.user-interface.io/ 介绍了从1973 年第一个支持 GUI 的操作系统到目前的 macOS 和 windows 的用户界面</p><p>13、World flags 网址：https://world-flags.org/一个介绍世界各国国旗、含义和起源、国旗的起源和琐事的国旗武士媒体组合项目</p><p>14、Dollar Street 网址：https://www.gapminder.org/dollar-street/按照收入展示各个国家中人们的生活</p><p>15、深海 网址：https://neal.fun/deep-sea/海洋不同深度都有什么生物</p><p>16、Go nomad 网址：https://nomadlist.com/这个网站是用来给游民们寻找适合自己的城市做参考，根据各种权威机构数据列出了各项评分</p><p>17、手机博物馆 网址：https://www.mobilephonemuseum.com/catalogue网站目前拥有来自 200 多个不同品牌的 2200 多个独立型号</p><p>18、线上博物馆 网址：http://www.diaoyudao.org.cn/dydbwg.html/博物馆展陈内容包括历史图片、视频资料、文献资料、法律文件、实物模拟等</p><p>19、地平说学会协会 网址：https://www.tfes.org/世界上有一些人认为地球是平面而非球体，这是他们的官网</p><p>20、机械键盘博物馆 网址：https://scrapbox.io/MECHKEYS/收集了非常多设计独特的机械键盘</p><p>21、全景故宫 网址：https://pano.dpm.org.cn/ 线上体验游览故宫，360°查看各个宫殿，有文字介绍</p><p>22、故宫博物院数字文物库 网址：https://digicol.dpm.org.cn/在线查看故宫博物院众多藏品，可根据分类和年代浏览</p><p>23、千亿像素看中国 网址：http://bigpixel.cn/zh-CN.html/可浏览千亿像素的全景图片，观看一个城市的面貌</p><p>24、核弹威力 网址：https://nuclearsecrecy.com/nukemap/选择某个核弹查看爆炸影响的范围大小</p><p>25、地球时间线 网址：https://timelineofearth.com/滚动屏幕，查看地球从形成到今天的大致时间线</p><p>26、克苏鲁公社 网址：https://www.cthulhuclub.com/克苏鲁公社为克苏鲁神话爱好者自发创建的克苏鲁神话相关资料网站</p><p>27、中国历史照片 网址：https://www.hpcbristol.net/布里斯托大学开放中国影像数据库，提供 20,000 多张中国近代照片免费浏览</p><p>28、ocearch 网址：https://www.ocearch.org/tracker/追踪大白鲨、虎鲸等海洋动物的实时位置</p><p>29、知妖（中国妖怪百集） 网址：http://www.cbaigui.com/收集中国古今妖怪</p><p>30、Little Big World 网址：https://www.littlebigworld.de/ Little BigWorld使用移轴摄影、壮观的无人机摄影和惊人的延时，将地球上最美丽、最有趣的地方变成了可爱的微型模型</p><p>31、地球模型 网址：https://3d-app.yunser.com/earth/网站默认模拟了地球自转运动，同时提供了大量的模拟操作，如查看太阳光照、昼夜平分面黄道面等</p><p>32、极像素 网址：https://www.sigoo.com/ 超高像素看世界</p><p>33、中国纪录片网 网址：http://www.docuchina.cn/国家级的纪录片资源，央视出品</p><p>34、OEC.world 网址 https://oec.world/查询每个国家或地区的贸易数据，并用图文进行通俗解释</p><p>35、波斯波利斯 网址：https://persepolis.getty.edu/波斯波利斯是古代波斯帝国的首都，现在已经是一片废墟了。这个页面还原了这座雄伟的帝国都城，重建了3D 街景，让你在其中漫游</p><p>36、卢浮宫藏品 网址：https://collections.louvre.fr/en/ 卢浮宫超过 48万藏品电子化，可在线免费浏览</p><p>37、中华珍宝馆 网址：https://g2.ltfc.net/ 在线的中国字画的博物馆</p><p>38、地球旧照 网址：https://3d-app.yunser.com/plateMotion/一个可以查看远古时期的地貌、研究板块运动网站</p><p>39、木材数据库 网址：https://www.wood-database.com/木材数据库。有详细的介绍，包括硬度排行等</p><p>40、无限 3D 美术馆 网址：https://gallery.nowaythis.works/ 目前有 180多万件艺术品的 3D 美术馆，每件艺术品都是来自 Reddit 的 r/Art 频道</p><p>41、The Sea We Breathe网址：https://www.bluemarinefoundation.com/the-sea-we-breathe/带你进入海底世界遨游，互动式的体验</p><p>42、Webcamtaxi 网址：https://www.webcamtaxi.com/ 有图比 上面有很多 24小时的摄像头直播频道，可以看到世界各地的实时状况。该网站就是收集这些频道，按照地区和内容分类</p><p>43、苏联海报 网址：https://reddirect.ru/这个网站收藏了很多苏联时期的海报，很有年代感</p><p>44、Artvee 网址：https://artvee.com/浏览和下载高分辨率的公共领域艺术品</p><p>45、中国国家博物馆 VR 网址：http://www.chnmuseum.cn/Portals/0/web/vr/中国国家博物馆提供的 VR 场景，线上 360° 体验游览中国国家博物馆</p><p>46、Earth Clock 网址：https://earthclock.cwandt.com/ 这个网站使用Google Eerth 卫星照片，显示当前的数字时间</p><p>47、模拟器博物馆 网址：http://www.famicn.com/在线运行电脑系统、学习机、游戏机</p><p>48、Arch Daily 网址：https://www.archdaily.cn/cn/非常多设计奇特的建筑</p><p>49、物种 2000 中国节点 网址：http://sp2000.org.cn/该网站建立和维护中国生物物种名录</p><p>50、上海博物馆网址：https://www.shanghaimuseum.net/mu/frontend/pg/index在线浏览上海博物馆的藏品和博物馆内的三维场景，还提供 AR 功能，需下载上博AR App 体验</p><p>51、光污染地图 网址：https://www.lightpollutionmap.info/全球光污染地图，可查看某地光污染各种参数</p><p>52、8values 中文版 网址：https://songyon.github.io/8valuescn/ 8values是一个政治立场测试</p><p>53、十年前的网页 网址：https://neal.fun/ten-years-ago/可以查看十年前美国的十几个著名网站是什么样子</p><p>54、全球天气 网址：https://earth.nullschool.net/一个全球天气状况的视觉化网站，还有一个气象网站也不错：ttps://www.ventusky.com</p><p>55、流星雨 网址：https://www.meteorshowers.org/以太空视角查看某个时间流星雨的形成</p><p>56、古典音乐 网址：https://www.kunstderfuge.com/免费下载古典音乐（MIDI 格式），可按音乐家名称查询</p><p>57、英特尔虚拟博物馆 网址：https://virtualmuseum.intel.com/官方网站，3D 虚拟参观英特尔公司的博物馆</p><p>58、铅笔收藏馆 网址：https://brandnamepencils.com/网站收藏了几乎全球各地知名品牌的铅笔</p><p>59、物流艺术 网址：https://logisticsartproject.com/记录了一个快递是怎样从斯德哥尔摩经过 37 天到达深圳的</p><p>60、IDEA 网址：https://www.dialectsarchive.com/全球英语方言档案馆（不同国家不同地区的人说英语是什么口音）</p><p>61、Exploratorium 网址：https://exploratorium.edu/ronh/age/科普网站，看看你在其它星球的岁数</p><p>62、[audio]http://Archive.org Serendipity网址：https://www.locserendipity.com/PushPlay.html/收集了很多过了版权保护期的音乐作品，按一下按钮，就会随机播放一段音乐</p><p>63、FlightAware 网址：https://zh.flightaware.com/提供全球实时航班交通以及航空趋势等</p><p>64、世界人口时钟 网址：https://countrymeters.info/cn/网站展示任何国家目前的人口的实时统计，出生，死亡，净迁移和人口增长</p><p>65、观沧海 网址：https://www.ageeye.cn/ 以地图为线索，反映中国历史、军事、 自然、 ⽂化等各⽅面的知识</p><p>66、开源人物肖像 网址：http://www.facesofopensource.com/那些推动计算机**的开源程序员的肖像</p><p>67、信聚网 网址：https://xinjh.info/ 网络有趣资源收集分享</p><p>68、濒危声音博物馆 网址：http://savethesounds.info/收藏了一些消失的声音，比如打字机的击键声、点阵式打印机的打印声、Windows95 的开机声</p><p>69、指尖上 网址：https://www.zhijianshang.com/ 海量全面精美的 VR全景旅游景点介绍，只需动动指尖就能通过虚拟现实深入景区内部，体验各地的美景风光</p><p>70、全球海底光缆 网址：https://he.net/3d-map/这个网页提供了一个互动式的地球，上面有全世界海底光缆和骨干机房的位置</p><p>71、韵典网 网址：https://ytenx.org/韵典网是一个综合的韵书查询工具，包含广韵、中原音韵、洪武正韵笺、分韵撮要和上古音系</p><p>72、天空之城 网址：https://www.skypixel.com/无人机航拍照片和视频共享平台</p><p>73、Gallerix 网址：https://gallerix.asia/在线博物馆，可以按画家或博物馆来查看油画</p><p>74、荷兰国家博物馆 网址：https://www.rijksmuseum.nl/nl/可在线浏览荷兰国家博物馆大量珍贵的藏品</p><p>75、Conserve the Sound 网址：https://www.conservethesound.de/老物件的声音博物馆，你可以听到打字机、手摇咖啡研磨机等物品的声音</p><p>76、科普网站 网址：https://animagraffs.com/ 了解各种产品的原理</p><p>77、百年纪念灯泡 网址：https://www.centennialbulb.org/cam.htm/展示已经亮了百年的灯泡</p><p>78、环游世界 网址：https://www.airpano.org.cn/网站提供各个地区的全景图，三百六十度看世界</p><p>79、四大名著 网址：http://www.sdmz.cn/网站提供了四大名著相关的电子书、音频、图片、地图等在线资源</p><p>80、制服地图 网址：https://uniform.wingzero.tw/ Uniform Map是一个让使用者可以从 Google地图去查询学校制服的网站，想知道某所学校所穿的制服，用这网站就能轻松解决</p><p>81、国际空间站 网址：https://www.google.com/maps/<spanclass="citation"data-cites="29.5602853">@29.5602853</span>,95.0853914,2a,75y,212.04h,90t/data=!3m7!1e1!3m5!1szChzPIAn4RIAAAQvxgbyEg!2e0!3e5!7i10000!8i5000?shorturl=1/Google 地图，可查看国际空间站内部环境</p><p>82、飞机坠毁信息 网址：http://www.planecrashinfo.com/记录航空事故，包括地点、死亡人数、细节以及不寻常的事故、最后的话等</p><p>83、熊猫频道 网址：https://www.ipanda.com/央视熊猫频道对大熊猫繁育、日常起居等的情况进行 24小时近距离视频直播及点播</p><p>84、享有海景的车站 网址：https://seaside-station.com/网站记录了日本非常多海边的火车站极其周边景色的照片</p><p>85、中国古籍保护网 网址：http://www.nlc.cn/pcab/中国古籍保护网，可在线浏览古籍的电子版，如《金石圖說》</p><p>86、Treeographer 网址：https://thetreeographer.com/archive/收集一些奇特的树</p><p>87、乡音苑 网址：https://phonemica.net/收集来自全国各地的网友上传的方言故事，网站提供各种字幕不怕看不懂</p><p>88、搜韵 网址：https://sou-yun.cn/ 搜韵网共收录约 90万首古今诗词作品，其中近现代及之前的诗词作品约 83 万。</p><p>89、世界建筑名录 网址：https://www.worldbuildingsdirectory.com/浏览来自世界各地的最具创新性的建筑</p><p>90、书格子 网址：https://new.shuge.org/ 有品格的数字古籍图书馆</p><p>91、10 万亿像素的夜空 网址：https://viewer.legacysurvey.org/ 浏览一张10 万亿像素的图片，包含超过十亿个星系，覆盖整个天空的三分之一。</p><p>92、网站设计博物馆 网址：https://www.webdesignmuseum.org/ 展出 1600多个网站从 1991 到 2006 年主页的设计</p><p>93、星辰协会 网址：http://thestarsetsociety.org/ 美国 Starset乐队科研团队“Starset 协会”网站</p><p>94、全历史 网址：https://www.allhistory.com/让用户沉浸在纵横开阔、左图右史的（历史、人文、社科等）知识海洋中</p><p>95、风网 网址：https://www.windy.com/ 台风 暴雨观测</p><p>96、100,000 Stars 网址：https://stars.chromeexperiments.com/璀璨星河一触即达，宇宙星系在线观赏(来自 Google 实验室)</p><p>97、世界数字图书馆 网址：https://www.loc.gov/collections/ …ut-this-collection/ 网站免费提供使用珍贵图书、地图、影片与照片等服务</p><p>98、世界地图 网址：http://www.onegreen.net/maps/m/world.htm/提供高清、可下载的世界地图，有各种版本，如行政图、世界地形、交通等</p><p>99、蚂蚁网 网址：http://www.ants-china.com/东亚、东北亚、南亚及东南亚地区蚂蚁-全球最大的华语中文蚂蚁专业网站</p><p>100、数字敦煌 网址：https://www.e-dunhuang.com/在线浏览敦煌，可浏览经典洞窟、经典壁画等</p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网址</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建服务器环境所使用到的一些应用与端口的记录</title>
    <link href="/2023/05/03/%E6%90%AD%E5%BB%BAmac%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/"/>
    <url>/2023/05/03/%E6%90%AD%E5%BB%BAmac%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>用来配置服务器环境 <span id="more"></span></p><h1 id="常用应用端口">常用应用端口：</h1><h2 id="ssh">ssh：</h2><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">tcp:&#x2F;&#x2F;127.0.0.1:22 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>登录指令： <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">用户名@网址 -p 端口号例：song@2.tcp.cpolar.top -p 11048<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure></p><h2 id="coplar-web-ui">coplar web UI：</h2><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;localhost:9200 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>在coplar中开启内网穿透时可以选择只开启https，一方面保证安全性，另一方面可以多开一倍的隧道<a href="https://www.cpolar.com/download">coplar下载地址</a>在win和mac平台直接就是web界面，在linux平台需要编辑配置文件来开启端口</p><h2 id="portainer">Portainer：</h2><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;localhost:9000 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>安装指令： <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">docker run -d \-p 9000:9000 \-p 8000:8000 \--restart always \-v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \-v &#x2F;opt&#x2F;docker&#x2F;portainer-ce&#x2F;data:&#x2F;data \--name portainer-ce portainer&#x2F;portainer-ce<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></p><p>Portainer也可以实现远程控制其他docker节点</p><h2 id="clash">clash：</h2><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;localhost:9090 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>控制面板网址： <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">clash-dashboard：http:&#x2F;&#x2F;clash.razord.top&#x2F;yacd-dashboard：http:&#x2F;&#x2F;yacd.haishan.me&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></p><p>在控制面板中将clash的后台服务端口输入就可以访问了</p><p><ahref="https://blog.zzsqwq.cn/posts/how-to-use-clash-on-linux/">docker部署</a></p><h2 id="jupyter-lab">Jupyter lab：</h2><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;localhost:8888 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>远程访问Jupyter lab需要修改配置文件如下：</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">c.NotebookApp.allow_remote_access &#x3D; Truec.NotebookApp.open_browser &#x3D; Falsec.NotebookApp.ip&#x3D;&#39;*&#39;c.NotebookApp.password &#x3D; &#39;sha1:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="chat_academic">chat_academic：</h2><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;localhost:50923 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>注意，使用docker部署时需要将localhost改为host.docker.internal才可以访问宿主机的端口</p>]]></content>
    
    
    <categories>
      
      <category>环境配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux环境搭建pytorch环境</title>
    <link href="/2023/03/28/%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8pytorch%E7%8E%AF%E5%A2%83/"/>
    <url>/2023/03/28/%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8pytorch%E7%8E%AF%E5%A2%83/</url>
    
    <content type="html"><![CDATA[<p>用来配置服务器python环境的记录 <div>            <input type="checkbox" disabled >搭建doctor          </div> <span id="more"></span></p><h1 id="安装mini-conda">1安装mini-conda</h1><p><ahref="https://docs.conda.io/en/latest/miniconda.html#linux-installers">官网</a>从官网下载对应版本，对应系统的安装包</p><p>将安装包传入linux系统 cd到目标文件目录： <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">bash Miniconda3-4.7.12.1-Linux-x86_64.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></p><p>安装后重新加载配置文件 <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">source .bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></p><h1 id="基础命令">2基础命令</h1><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">conda --version 查看安装的conda的版本，检验是否安装成功conda list：查看安装了哪些包。conda search XXXX:查找包的版本conda install package_name(包名)：安装包conda env list 或 conda info -e：查看当前存在哪些虚拟环境conda update conda：检查更新当前condaconda create -n 创建conda环境激活环境 conda activate XXX退出环境conda deactivate移除环境： conda&#x2F;mamba remove -n XXX --all导出环境： conda env export xxx.yaml 将现有的包导出，方便以后直接创建环境复现环境： conda env create -f environment.yamllsblk查看硬盘信息top 查看cpu使用情况lspci | grep -i nvidia  查看gpu情况<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>添加镜像 <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">conda config --add channels genomedkconda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;main&#x2F;conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;conda-forge&#x2F;conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;bioconda&#x2F;conda config --set show_channel_urls yes#查看已配置的镜像conda config --show#删除某个镜像源conda config --remove channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></p><h1 id="配置pytorch环境">3配置pytorch环境</h1><p>查看CUDA版本 <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">nvidia-smi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure> <ahref="https://pytorch.org/get-started/locally">pytorch官网</a>选择对应的版本</p><p>判断是否安装成功 在命令行输入<code>python</code></p><p>输入<code>import torch</code>，没有报错说明安装成功</p><p>输入<code>torch.cuda.is_available()</code>，返回true表示可以使用GPU</p><h1 id="安装jupyter">4安装jupyter</h1><p><a href="https://zhuanlan.zhihu.com/p/166425946">源于</a> jupyternotebook安装 <code>conda install jupyter notebook</code></p><p>jupyter lab安装<code>conda install -c conda-forge jupyterlab</code></p><p>使用pip安装中文界面<code>pip install jupyterlab-language-pack-zh-CN</code></p><p>生成jupyter密码密文密文生成有手动生成和自动生成两种方式。自动生成会保存在json文件中。手动生成在ipython中运行直接输出。密码用于本地访问服务器jupyter时需要输入的密码。</p><p>自动生成 <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ jupyter notebook passwordEnter password:  Verify password: [NotebookPasswordApp] Wrote hashed password to &#x2F;home&#x2F;you&#x2F;.jupyter&#x2F;jupyter_notebook_config.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure></p><p>手动生成 <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">## 打开ipython，输入from IPython.lib import passwdpasswd()## 提示输入密码和确认输入，完成后得到密文。Enter password: Verify password: &#39;sha1:********************************************&#39; ## 或者from notebook.auth import passwd; passwd()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure> 配置</p><p>生成密文后，有两种设置方式，访问jupyter。一种是修改配置文件，另一种为通过ssh启动。</p><p>方式一：修改配置文件查看配置文件是否存在：<code>~/.jupyter/jupyter_notebook_config.py</code>生成配置文件： <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">jupyter notebook --generate-config或jupyter lab --generate-config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure></p><p>修改配置文件需要修改主要是四个地方，分别是IP地址，密文，浏览器，端口。<figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">## 打开前面生成的配置文件vim ~&#x2F;.jupyter&#x2F;jupyter_notebook_config.py## 修改配置内容## 官方文档建议修改成‘*’，但可能还是无法访问，可以修改成‘0.0.0.1’或者服务器IP 目前不需改c.NotebookApp.ip&#x3D;&#39;*&#39;## 修改成将之前生成的密文 改shal:后面的内容c.NotebookApp.password &#x3D; u&#39;sha1:........&#39;c.NotebookApp.open_browser &#x3D; False## 随便都可以，防止与其他端口冲突即可。也可以再启动jupyter时，用--port参数指定。c.NotebookApp.port &#x3D;8889<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></p><p><a href="https://zhuanlan.zhihu.com/p/101070029">jupyterlab插件</a></p><p>服务器常用命令 <figure><div class="code-wrapper"><pre class="line-numbers language-nohup" data-language="nohup"><div class="caption"><span>jupyter notebook &```后台启动jupyter lab</span></div><code class="language-nohup">&#96;&#96;&#96;pkill -f jupyter&#96;&#96;&#96;杀死后台所有jupyter进程&#96;&#96;&#96;htop&#96;&#96;&#96;查看cpu占用情况多内核jupyter&#96;&#96;&#96;conda install nb_conda -c https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;main&#x2F;&#96;&#96;&#96;# 内网穿透跳板机B to C &#96;&#96;&#96;ssh -N -f -L 3333:localhost:8889 syf@172.19.4.27&#96;&#96;&#96; 开机自启 （有问题） 您可以创建一个名为 my_script.sh 的文件，然后在其中添加以下内容：  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure> #!/bin/bash ssh -N -f -L3333:localhost:8889 syf@172.19.4.27 ```然后，您可以使用以下命令将脚本移动到 /etc/profile.d/ 目录下：</p><p><code>sudo mv my_script.sh /etc/profile.d/</code></p><p>最后，您需要给脚本添加可执行权限：</p><p><code>sudo chmod +x /etc/profile.d/my_script.sh</code></p><p>这样，在系统启动后，脚本就会自动执行。</p><p>打洞 <a href="https://www.cpolar.com/">cpolar</a> 使用</p><ol start="5" type="1"><li>向系统添加服务 <code>sudo systemctl enable cpolar</code>ShellCopy</li><li>启动cpolar服务 <code>sudo systemctl start cpolar</code></li></ol>]]></content>
    
    
    <categories>
      
      <category>环境配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>pytorch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux环境搭建docker和portainer</title>
    <link href="/2023/02/08/docker/"/>
    <url>/2023/02/08/docker/</url>
    
    <content type="html"><![CDATA[<p>目前进度是开机启动portainer服务，然后局域网内的计算机可以访问网址操作portainer接下来的问题： <div>            <input type="checkbox" disabled >必要的时候的远程桌面          </div> ：Windows自带，但需要一个HDMI诱骗器<div>            <input type="checkbox" disabled >wifi模块：外置天线          </div> <div>            <input type="checkbox" disabled >修改待机时间          </div></p><span id="more"></span><p>搭建过程：</p><h1 id="docker">1docker</h1><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo apt-get updatesudo apt-get install \    ca-certificates \    curl \    gnupg \    lsb-releasecurl -fsSL https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo gpg --dearmor -o &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpgapt-get updatesudo apt-get install docker-ce docker-ce-cli containerd.iosudo docker run hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>Docker 安装完成，请检查是否出现 Hello from Docker!'</p><h1 id="portainer">2portainer</h1><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo service docker restartsudo docker volume create portainer_datasudo docker run -d -p 8000:8000 -p 9443:9443 --name portainer \--restart&#x3D;always \-v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \-v portainer_data:&#x2F;data \portainer&#x2F;portainer-ce:latestsudo docker ps<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>echo 'Portainer 安装完成，请检查是否出现portainer/portainer-ce:latest 字样' echo 'Web页面访问https://127.0.0.1:9443/' echo '或 https://服务器IP地址:9443/'</p>]]></content>
    
    
    <categories>
      
      <category>环境配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>portainer</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建博客的过程记录</title>
    <link href="/2023/02/02/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2023/02/02/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>依托于github完成个人博客的搭建过程，但目前只完成了基础部分 Todo:<div>            <input type="checkbox" disabled >评论功能          </div> <div>            <input type="checkbox" disabled >版权信息          </div> <div>            <input type="checkbox" disabled >页面个性化          </div> <div>            <input type="checkbox" disabled >云服务器部署          </div>  <ahref="https://developer.aliyun.com/plan/student">阿里云学生免费领取6个月</a><div>            <input type="checkbox" disabled >公网IP访问          </div> <span id="more"></span> # 本地建站 该部分引用于：<ahref="https://blog.csdn.net/qq_36759224/article/details/82121420?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167531679116782427495873%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=167531679116782427495873&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~hot_rank-6-82121420-null-null.142%5Ev72%5Epc_search_v2,201%5Ev4%5Eadd_ask&amp;utm_term=github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA">使用Github Pages 和 Hexo 搭建自己的独立博客【超级详细的小白教程】</a></p><p>需要安装的软件：</p><h2 id="node.js-官网">Node.js <ahref="https://nodejs.org/en/download/">官网</a></h2><h2 id="git-官网">Git <ahref="https://git-scm.com/download/win">官网</a></h2><p>检验Git是否安装成功 <figure><div class="code-wrapper"><pre class="line-numbers language-text" data-language="text"><code class="language-text">$ git --version  $ node -v  $ npm -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure></p><h2 id="hexo">Hexo</h2><p>  选择一个磁盘，新建一个文件夹，自己重命名文件夹（如：我的文件夹为：Ｅ_Blog），博客相关文件将储存在此文件夹下，在该文件夹下右键鼠标，点击Git Bash Here，输入以下 npm 命令即可安装，第一个命令表示安装hexo，第二个命令表示安装 hexo 部署到 git page 的deployer，如图所示即为安装成功</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ npm install hexo-cli -g  $ npm install hexo-deployer-git --save <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h3 id="hexo-初始化配置">Hexo 初始化配置</h3><p>  在刚才新建的文件夹里面再次新建一个 Hexo文件夹（如：我的文件夹为：E_Blog）,进入该 Hexo 文件夹右键鼠标，点击 GitBash Here，输入以下命令，如图所示则安装成功 <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></p><p>Hexo 安装完成后，将会在指定文件夹中新建所需要的文件，Hexo文件夹下的目录如下：</p><p><img src="https://s2.loli.net/2023/02/03/FWHCtJ7aLK42Tb8.png" /></p><h3 id="本地查看效果">本地查看效果</h3><p>执行以下命令，执行完即可登录 http://localhost:4000/ 查看效果<figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ hexo generate  $ hexo server <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></p><p>显示以下信息说明操作成功： <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">INFO Hexo is running at http:&#x2F;&#x2F;0.0.0.0:4000&#x2F;. Press Ctrl+C to stop.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></p><h1 id="将博客部署到-github-pages-上">将博客部署到 Github Pages 上</h1><h2 id="创建项目代码库">创建项目代码库</h2><h2 id="配置-ssh-密钥">配置 SSH 密钥</h2><p> 只有配置好 SSH 密钥后，我们才可以通过 git 操作实现本地代码库与Github代码库同步，在你第一次新建的文件夹里面（如：我的文件夹为：Ｅ_Blog） GitBash Here 输入以下命令： <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ ssh-keygen -t rsa -C &quot;your email@example.com&quot; &#x2F;&#x2F;引号里面填写你的邮箱地址，比如我的是tanrenhou@126.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure> 之后会出现： <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">Generating public&#x2F;private rsa key pair.  Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa):  &#x2F;&#x2F;到这里可以直接回车将密钥按默认文件进行存储<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure>然后会出现： <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">Enter passphrase (empty for no passphrase):  &#x2F;&#x2F;这里是要你输入密码，其实不需要输什么密码，直接回车就行 Enter same passphrase again:  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure> 接下来屏幕会显示： <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.  Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.pub.  The key fingerprint is:  这里是各种字母数字组成的字符串，结尾是你的邮箱  The key&#39;s randomart image is:  这里也是各种字母数字符号组成的字符串  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>运行以下命令，将公钥的内容复制到系统粘贴板上： <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ clip &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></p><h2 id="在-github-账户中添加你的公钥">在 GitHub 账户中添加你的公钥</h2><p>① 登陆 GitHub，进入 Settings：</p><p><img src="https://s2.loli.net/2023/02/03/IOt9dkMJeZ7USAz.png" /> ②点击 SSH and GPG Keys：</p><p><img src="https://s2.loli.net/2023/02/03/3oiftY57mMABQ6V.png" /> ③选择 New SSH key：</p><p><img src="https://s2.loli.net/2023/02/03/akIu3UeKdWZLNmP.png" /></p><p><img src="https://s2.loli.net/2023/02/03/3XlBmOodFgTCEQu.png" /></p><h2 id="测试">测试</h2><p>输入以下命令：注意：==git@github.com不要做任何更改！ #F44336==<figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ ssh -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></p><p>之后会显示： <imgsrc="https://s2.loli.net/2023/02/03/Y7G12dexU5Zsluc.png" /> 输入 yes后会显示： <imgsrc="https://s2.loli.net/2023/02/03/YuJc1vgyqw5eAHG.png" /></p><p>此时表示设置正确 ## 配置 Git 个人信息  Git会根据用户的名字和邮箱来记录提交，GitHub也是用这些信息来做权限的处理，输入以下命令进行个人信息的设置，把名称和邮箱替换成你自己的，名字可以不是GitHub 的昵称，但为了方便记忆，建议与 GitHub 一致 <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ git config --global user.name &quot;此处填你的用户名&quot;  $ git config --global user.email  &quot;此处填你的邮箱&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure>到此为止 SSH Key 配置成功，本机已成功连接到 Github ## 将本地的 Hexo文件更新到 Github 的库中 ① 登录 Github 打开自己的项目 yourname.github.io</p><figure><img src="https://s2.loli.net/2023/02/03/A5K2S7qZcCT4RPH.png"alt="在这里插入图片描述" /><figcaption aria-hidden="true">在这里插入图片描述</figcaption></figure><p>② 鼠标移到 Clone or download 按钮，选择 Use SSH</p><p><img src="https://s2.loli.net/2023/02/03/A6lvTkcFjJ1GN92.png" /></p><p>③ 一键复制地址</p><p><img src="https://s2.loli.net/2023/02/03/coeP5YGCiI3KQH6.png" /></p><p>④ 打开你创建的 Hexo文件夹（如：E:_Blog），右键用记事本（Notepad++或者VScode等都可以）打开该文件夹下的 _config.yml 文件</p><p><img src="https://s2.loli.net/2023/02/03/Za9YGpBt348M6FU.png" /></p><p>⑤ 按下图修改 _config.yml 文件并保存 注意：master改为main <imgsrc="https://s2.loli.net/2023/02/03/JKRU7Cf8GpWDNOA.png" /></p><p>⑥ 在 Hexo 文件夹下分别执行以下命令 <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure>执行完之后会让你输入你的 Github的账号和密码，如果此时报以下错误，说明你的 deployer 没有安装成功<figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ERROR Deployer not found: git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></p><p>需要执行以下命令再安装一次： <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure> 再执行 hexo g-d，你的博客就会部署到 Github 上了 ⑦ 访问博客 等待博客构建完毕</p><p><img src="https://s2.loli.net/2023/02/03/XuNRrZEwhWdzaH9.png" /></p><p>你的博客地址：https://你的用户名.github.io,现在每个人都可以通过此链接访问你的博客了</p><h2 id="图床托管图片">图床托管图片</h2><h3 id="sm.ms-v2"><a href="https://smms.app/home/">sm.ms v2</a></h3><p>免费提供5G 存储空间 每分钟限制上传20张 可以作为图床来少量托管图片</p><h2 id="个性化fluid">个性化Fluid</h2><p>在_config.fluid.yml文件中查找对应位置进行修改</p><p>修改主界面标语</p><p> 查找关键词：Slogan</p><p>修改主页名称</p><p> 查找关键词：blog_title依托于github完成个人博客的搭建过程，但目前只完成了基础部分</p>]]></content>
    
    
    <categories>
      
      <category>环境配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建本地GEE python环境的步骤</title>
    <link href="/2023/02/02/GEE%E6%9C%AC%E5%9C%B0py%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2023/02/02/GEE%E6%9C%AC%E5%9C%B0py%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>使用jupyter notebook搭建，避免安装客户端等操作最近要求学习GEE，由与想要部署本地的PY环境，在部署环境的过程中踩了一些坑，但参考大佬的文章最终成功部署了本地环境，以下为只需安装earthengine-api的部署方法本文写于2022年12月12日，该方法实测有效 <span id="more"></span> ###首先需要科学上网！！！</p><h3 id="注册谷歌账号并申请gee使用">注册谷歌账号并申请GEE使用</h3><p>关于注册谷歌账号的方法已经有很多了，这里给一个指路 本文参考: <ahref="https://blog.csdn.net/weixin_43536034/article/details/125326723?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167083736816782390539750%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167083736816782390539750&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-125326723-null-null.142%5Ev68%5Econtrol,201%5Ev4%5Eadd_ask,213%5Ev2%5Et3_control1&amp;utm_term=GEE%E8%B4%A6%E5%8F%B7&amp;spm=1018.2226.3001.4187">GEE学习系列——GEE账号注册</a></p><h3id="之后需要本地环境安装earthengine-api">之后需要本地环境安装earthengine-api</h3><p>此处需要安装好python pipjupter，由于都是通用工具，所以本文不再介绍</p><p>在终端中输入： <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">pip install earthengine-api;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure> 注意，pip安装包时要关闭代理</p><h3 id="jupter在线编程的实现">jupter在线编程的实现</h3><p>这里参考这篇文章： 谷歌网盘参考: <ahref="https://blog.csdn.net/weixin_43360896/article/details/108174759?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167030206516800182159539%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167030206516800182159539&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-108174759-null-null.142%5Ev67%5Ewechat,201%5Ev4%5Eadd_ask,213%5Ev2%5Et3_control1&amp;utm_term=gee%E9%85%8D%E7%BD%AEpython%E7%8E%AF%E5%A2%83&amp;spm=1018.2226.3001.4187">GEE入门【1】|Python环境配置</a></p><p>根据文章中的内容注册好谷歌网盘后再根据 <imgsrc="https://img-blog.csdnimg.cn/fc3fdeabd0fd4805bf8c3ba78e1d84e7.png#pic_center"alt="在这里插入图片描述" /> 中的本地jupter连接方法 首先在终端中执行<figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">pip install jupyter_http_over_wsjupyter serverextension enable --py jupyter_http_over_ws<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure> 安装网页扩展包并确认jupter版本符合</p><p>之后在本地终端执行jupter <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">jupyter notebook --NotebookApp.allow_origin&#x3D;&#39;https:&#x2F;&#x2F;colab.research.google.com&#39; --port&#x3D;8888 --NotebookApp.port_retries&#x3D;0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure> 在在线环境中连接本地环境</p><figure><imgsrc="https://img-blog.csdnimg.cn/f27f460d0eb244af8e67b9cb83643944.png#pic_center"alt="在这里插入图片描述" /><figcaption aria-hidden="true">在这里插入图片描述</figcaption></figure><p>将jupter网址填入</p><figure><imgsrc="https://img-blog.csdnimg.cn/704053a29b58477894b3f89fa47c7761.png#pic_center"alt="在这里插入图片描述" /><figcaption aria-hidden="true">在这里插入图片描述</figcaption></figure><p>之后执行代码： <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">import eeee.Authenticate()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure>如果出现这样则点击连接进行授权，可以避免谷歌客户端包等下载 <imgsrc="https://img-blog.csdnimg.cn/0cbd2a5b81d14566bb9a3801381d6215.png#pic_center"alt="在这里插入图片描述" />将授权码填入后回车，此时该设备已经授权完成。</p><h3 id="关于本地接口的设置">关于本地接口的设置</h3><p>接口的设置参考: <ahref="https://blog.csdn.net/awdwd233333/article/details/123394694?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=gee%20python&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-123394694.142%5Ev67%5Ewechat,201%5Ev4%5Eadd_ask,213%5Ev2%5Et3_control1&amp;spm=1018.2226.3001.4187">【笔记】GEE之python学习</a></p><p>在本地的编译器交互窗口，或者jupter中完成GEE的初始化 <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">#初始化本地GEE服务import eeimport osos.environ[&#39;HTTP_PROXY&#39;] &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1:1111&#39;os.environ[&#39;HTTPS_PROXY&#39;] &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1:1111&#39;ee.Initialize()#print(ee.Image(&#39;USGS&#x2F;SRTMGL1_003&#39;).getInfo())<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>这里'http://127.0.0.1:1111'中后四位为你电脑代理的端口，此处若有问题请自行百度</p><p>之后就可以完全本地连接GEE进行编程了</p>]]></content>
    
    
    <categories>
      
      <category>环境配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GEE</tag>
      
      <tag>GEE_learn</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
